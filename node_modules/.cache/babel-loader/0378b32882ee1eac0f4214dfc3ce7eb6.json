{"ast":null,"code":"/*!\n * Chart.js v3.0.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as renderText, V as toFont, W as _toLeftRightCenter, X as _alignStartEnd, Y as overrides, Z as merge, $ as _capitalize, a0 as descriptors, a1 as isFunction, a2 as _attachContext, a3 as _createResolver, a4 as _descriptors, a5 as mergeIf, a6 as uid, a7 as debounce, a8 as retinaScale, a9 as clearCanvas, aa as _elementsEqual, ab as getAngleFromPoint, ac as _updateBezierControlPoints, ad as _computeSegments, ae as _boundSegments, af as _steppedInterpolation, ag as _bezierInterpolation, ah as _pointInLine, ai as _steppedLineTo, aj as _bezierCurveTo, ak as drawPoint, al as toTRBL, am as toTRBLCorners, an as _boundSegment, ao as _normalizeAngle, ap as getRtlAdapter, aq as overrideTextDirection, ar as _textX, as as restoreTextDirection, at as noop, au as distanceBetweenPoints, av as _addGrace, aw as _setMinAndMaxByKey, ax as niceNum, ay as almostWhole, az as almostEquals, aA as _decimalPlaces, aB as _longestText, aC as _filterBetween, aD as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    const me = this;\n\n    if (me._request) {\n      return;\n    }\n\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n\n      me._request = null;\n\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    const me = this;\n    let remaining = 0;\n\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        me._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        me._notify(chart, anims, date, 'complete');\n      }\n\n      remaining += items.length;\n    });\n\n    me._lastDate = date;\n\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    const me = this;\n\n    if (me._active) {\n      me._notify(false);\n\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    const me = this;\n\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n\n      me._notify(false);\n    }\n  }\n\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n\n    if (!me._active) {\n      me._target[prop] = to;\n\n      me._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return indexScale.id + '.' + valueScale.id + '.' + meta.stack + '.' + meta.type;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n\n      me._data = data;\n    }\n  }\n\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    me._dataCheck();\n\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n\n    me._dataCheck();\n\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    me._resyncElements(resetNewElements);\n\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = me._getOtherScale(scale);\n\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => me.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n\n    me.parse(start, count);\n\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n\n    this._insertElements(start, arguments.length - 2);\n  }\n\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = me._getRuler();\n\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const vpixels = reset ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const {\n      base: baseValue,\n      minBarLength\n    } = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n\n      if (value === 0) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    const actualBase = baseValue || 0;\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n\n    unclipArea(chart.ctx);\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      xScale,\n      yScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      me.updateElement(point, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n    const chartWeight = me._getRingWeight(me.index);\n\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n\n    const circumference = me._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n\n    let startAngle = me._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n\n          if (controller !== me) {\n            controller.configure();\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    me.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      xScale,\n      yScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y);\n      properties.stop = i > 0 && parsed.x - prevParsed.x > maxGapLength;\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n\n  if (isObject(layout.pos)) {\n    return {\n      same: false,\n      other: false\n    };\n  }\n\n  if (layout.size) {\n    chartArea[layout.pos] -= layout.size;\n  }\n\n  layout.size = layout.horizontal ? box.height : box.width;\n  chartArea[layout.pos] += layout.size;\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\n\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && _getParentNode(container));\n  }\n\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return me;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderColor: (_ctx, options) => options.color,\n    borderWidth: (_ctx, options) => options.lineWidth\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near'\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    const me = this;\n    me.options = options;\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._dataLimitsCached = true;\n    }\n\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    me.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n\n    const display = me._isVisible();\n\n    const isHorizontal = me.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    me._handleMargins();\n\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    const me = this;\n\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    const me = this;\n\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = me._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = me.bottom - tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n\n    const labelSizes = me._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right - padding;\n      } else {\n        x = me.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    const me = this;\n\n    if (me.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = me.chart;\n    const position = me.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n\n    if (axisWidth) {\n      const edgeOpts = grid.setContext(me.getContext(me._ticksLength - 1));\n      const lastLineWidth = edgeOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      drawLine({\n        x: x1,\n        y: y1\n      }, {\n        x: x2,\n        y: y2\n      }, {\n        width: axisWidth,\n        color: edgeOpts.borderColor\n      });\n    }\n  }\n\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = me.ctx;\n\n    const area = me._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom') {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    const me = this;\n\n    if (!me._isVisible()) {\n      return;\n    }\n\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n\n      }];\n    }\n\n    return [{\n      z: gz,\n\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n\n    }, {\n      z: tz,\n\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._each('register', args);\n  }\n\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._each('unregister', args);\n  }\n\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this._each('register', args, this.controllers);\n  }\n\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this._each('register', args, this.plugins);\n  }\n\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args) {\n    const me = this;\n\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n\n      me._notify(me._init, chart, 'install');\n    }\n\n    const descriptors = me._descriptors(chart);\n\n    const result = me._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n\n      me._notify(me._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  const data = config.data = config.data || {\n    datasets: [],\n    labels: []\n  };\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = data;\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.0.2\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return new BasicPlatform();\n    }\n\n    return new DomPlatform();\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n\n    me._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n\n        meta = me.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n\n      me._updateMetasetIndex(meta, i);\n\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    me._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n\n    me._plugins.invalidate();\n\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    me._minPadding = minPadding;\n\n    me._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    me._updateDatasets(mode);\n\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    me._layers.sort(compare2Level('z', '_idx'));\n\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n\n    me.render();\n  }\n\n  _updateLayout(minPadding) {\n    const me = this;\n\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      me._layers.push(...box._layers());\n    }, me);\n\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    me.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n\n  draw() {\n    const me = this;\n    let i;\n\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n\n      me._resize(width, height);\n\n      me._resizeBeforeDraw = null;\n    }\n\n    me.clear();\n\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = me._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = me.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {\n      visible\n    });\n    me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n\n      delete me._metasets[datasetIndex];\n    }\n  }\n\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n\n    me.config.clearCache();\n\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    let listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      me._eventHandler(e);\n    };\n\n    each(me.options.events, type => _add(type, listener));\n\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n\n      let detached;\n\n      const attached = () => {\n        _remove('attach', attached);\n\n        me.attached = true;\n        me.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = () => {\n        me.attached = false;\n\n        _remove('resize', listener);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n\n    if (!listeners) {\n      return;\n    }\n\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(_ref => {\n      let {\n        datasetIndex,\n        index\n      } = _ref;\n      const meta = me.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args) {\n    return this._plugins.notify(this, hook, args);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeEvent', args) === false) {\n      return;\n    }\n\n    const changed = me._handleEvent(e, replay);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args);\n\n    if (changed || args.changed) {\n      me.render();\n    }\n\n    return me;\n  }\n\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n\n    me._lastEvent = null;\n    callback(options.onHover, [e, active, me], me);\n\n    if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {\n    startAngle,\n    endAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction pathArc(ctx, element) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n\n  pathArc(ctx, element);\n  ctx.fill();\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin,\n    options\n  } = element;\n  const outerRadius = element.outerRadius;\n  const innerRadius = element.innerRadius + pixelMargin;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = distance >= innerRadius && distance <= outerRadius;\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, vm) {\n  ctx.lineCap = vm.borderCapStyle;\n  ctx.setLineDash(vm.borderDash);\n  ctx.lineDashOffset = vm.borderDashOffset;\n  ctx.lineJoin = vm.borderJoinStyle;\n  ctx.lineWidth = vm.borderWidth;\n  ctx.strokeStyle = vm.borderColor;\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params) {\n  params = params || {};\n  const count = points.length;\n  const start = Math.max(params.start || 0, segment.start);\n  const end = Math.min(params.end || count - 1, segment.end);\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  ctx.beginPath();\n\n  if (line.path(ctx, start, count)) {\n    ctx.closePath();\n  }\n\n  ctx.stroke();\n}\n\nconst usePath2D = typeof Path2D === 'function';\nconst strokePath = usePath2D ? strokePathWithCache : strokePathDirect;\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n\n      me._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const ilen = segments.length;\n\n    const segmentMethod = _getSegmentMethod(me);\n\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n\n    for (let i = 0; i < ilen; ++i) {\n      loop &= segmentMethod(ctx, me, segments[i], {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n\n    ctx.save();\n    setStyle(ctx, options);\n    strokePath(ctx, me, start, count);\n    ctx.restore();\n\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    return res;\n  }\n\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addRoundedRectPath(ctx, rect) {\n  const {\n    x,\n    y,\n    w,\n    h,\n    radius\n  } = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  const decimated = [];\n  const bucketWidth = (data.length - 2) / (samples - 2);\n  let sampledIndex = 0;\n  let a = 0;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, data.length);\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX = data[j].x;\n      avgY = data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[data.length - 1];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const xMin = data[0].x;\n  const xMax = data[data.length - 1].x;\n  const dx = xMax - xMin;\n\n  for (i = 0; i < data.length; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {\n        value: data\n      });\n    }\n  });\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      if (data.length <= 4 * availableWidth) {\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(segment => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n\n    const subs = _boundSegments(target, bounds);\n\n    for (let j = 0; j < subs.length; ++j) {\n      const sub = subs[j];\n      const subBounds = getBounds(property, tpoints[sub.start], tpoints[sub.end], sub.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (let k = 0; k < fillSources.length; k++) {\n        parts.push({\n          source: fillSources[k],\n          target: sub,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  ctx.fillStyle = color;\n\n  for (let i = 0, ilen = segments.length; i < ilen; ++i) {\n    const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } = segments[i];\n    ctx.save();\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n\n    const targetLoop = !!target.pathSegment(ctx, tgt, {\n      move: lineLoop,\n      reverse: true\n    });\n    const loop = lineLoop && targetLoop;\n\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : 'x';\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const propagate = options.propagate;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n    }\n  },\n\n  beforeDatasetsDraw(chart) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    let i, meta;\n\n    for (i = metasets.length - 1; i >= 0; --i) {\n      meta = metasets[i].$filler;\n\n      if (meta) {\n        meta.line.updateControlPoints(area);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args) {\n    const area = chart.chartArea;\n    const ctx = chart.ctx;\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false) {\n      return;\n    }\n\n    const target = getTarget(source);\n    const {\n      line,\n      scale\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale\n      });\n      unclipArea(ctx);\n    }\n  },\n\n  defaults: {\n    propagate: true\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  }\n\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {\n        left,\n        top,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    const me = this;\n\n    if (!me.options.display) {\n      return;\n    }\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        }\n      }\n    } = me;\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    const me = this;\n\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n\n      me._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.strokeStyle = fontColor;\n    ctx.fillStyle = fontColor;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n\n        if (lineWidth !== 0) {\n          ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n\n    const isHorizontal = me.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + fontSize / 2 + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n\n      me._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      style: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.fillStyle = options.multiKeyBackground;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.fillStyle = labelColors.backgroundColor;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2), colorY + 1, boxWidth - 2, boxHeight - 2);\n    }\n\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    me._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(_ref2 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref2;\n\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = me._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = me._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      me._active = active;\n\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const me = this;\n    const position = positioners[me.options.position].call(me, active, e);\n    return me.caretX !== position.x || me.caretY !== position.y;\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      style: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      style: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    const me = this;\n    super.configure();\n\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return me.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    ticks.push({\n      value: min\n    });\n\n    if (niceMin <= min) {\n      j++;\n    }\n\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero,\n      stacked\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      setMax(max + 1);\n\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count\n    };\n    const ticks = generateTicks$1(numericGeneratorOptions, _addGrace(me, opts.grace));\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n\n    const tickFont = me._resolveTickFontOptions(0);\n\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n\n    me.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const me = this;\n    const opts = me.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n\n    return (value - me.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = options;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = me.min;\n    const max = me.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? formatter(label, index, ticks) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n    const size = me._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n\n    return me._cache.data = me.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = me.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n\n  initOffsets() {\n    const me = this;\n\n    const timestamps = me._getTimestampsForTable();\n\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {\n      min,\n      max\n    } = me;\n\n    if (!timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    const items = [min];\n    let i, ilen, curr;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n    return items;\n  }\n\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","k","clipArea","m","unclipArea","_","_arrayUnique","t","toRadians","n","toPercentage","o","toDimension","T","TAU","p","formatNumber","q","_angleBetween","H","HALF_PI","P","PI","w","isNumber","x","_limitValue","y","_lookupByKey","z","getRelativePosition$1","A","_isPointInArea","B","_rlookupByKey","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","renderText","V","toFont","W","_toLeftRightCenter","X","_alignStartEnd","Y","overrides","Z","merge","$","_capitalize","a0","descriptors","a1","isFunction","a2","_attachContext","a3","_createResolver","a4","_descriptors","a5","mergeIf","a6","uid","a7","debounce","a8","retinaScale","a9","clearCanvas","aa","_elementsEqual","ab","getAngleFromPoint","ac","_updateBezierControlPoints","ad","_computeSegments","ae","_boundSegments","af","_steppedInterpolation","ag","_bezierInterpolation","ah","_pointInLine","ai","_steppedLineTo","aj","_bezierCurveTo","ak","drawPoint","al","toTRBL","am","toTRBLCorners","an","_boundSegment","ao","_normalizeAngle","ap","getRtlAdapter","aq","overrideTextDirection","ar","_textX","as","restoreTextDirection","at","noop","au","distanceBetweenPoints","av","_addGrace","aw","_setMinAndMaxByKey","ax","niceNum","ay","almostWhole","az","almostEquals","aA","_decimalPlaces","aB","_longestText","aC","_filterBetween","aD","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","itemStacks","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","getMatchingVisibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","grouped","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","getPixelForDecimal","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","animated","spanGaps","maxGapLength","directUpdate","prevParsed","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","same","other","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","initial","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","setContext","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","edgeOpts","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","oldRatio","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasetIndex","oldIndex","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","unbindEvents","toBase64Image","toDataURL","_add","_remove","events","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","pathArc","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","translate","setStyle","vm","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","pathVars","segment","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","usePath2D","strokePath","LineElement","_points","_segments","_pointsUpdated","segments","interpolate","_interpolate","interpolated","segmentMethod","capBezierPoints","cubicInterpolationMode","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","borderRadius","maxR","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addRoundedRectPath","rect","addNormalRectPath","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedData","defineProperty","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","subs","sub","subBounds","fillSources","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","tgt","lineLoop","targetLoop","doFill","above","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDatasetsDraw","beforeDatasetDraw","lineOpts","getBoxSize","labelOpts","fontSize","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","leftForLtr","strokeRect","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","backdropPadding","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","backdropColor","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","showLabelBackdrop","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","time","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/Wadf/Desktop/React Tutorial/CryptoOracle/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.0.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as renderText, V as toFont, W as _toLeftRightCenter, X as _alignStartEnd, Y as overrides, Z as merge, $ as _capitalize, a0 as descriptors, a1 as isFunction, a2 as _attachContext, a3 as _createResolver, a4 as _descriptors, a5 as mergeIf, a6 as uid, a7 as debounce, a8 as retinaScale, a9 as clearCanvas, aa as _elementsEqual, ab as getAngleFromPoint, ac as _updateBezierControlPoints, ad as _computeSegments, ae as _boundSegments, af as _steppedInterpolation, ag as _bezierInterpolation, ah as _pointInLine, ai as _steppedLineTo, aj as _bezierCurveTo, ak as drawPoint, al as toTRBL, am as toTRBLCorners, an as _boundSegment, ao as _normalizeAngle, ap as getRtlAdapter, aq as overrideTextDirection, ar as _textX, as as restoreTextDirection, at as noop, au as distanceBetweenPoints, av as _addGrace, aw as _setMinAndMaxByKey, ax as niceNum, ay as almostWhole, az as almostEquals, aA as _decimalPlaces, aB as _longestText, aC as _filterBetween, aD as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return indexScale.id + '.' + valueScale.id + '.' + meta.stack + '.' + meta.type;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const vpixels = reset ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y);\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (isObject(layout.pos)) {\n    return {same: false, other: false};\n  }\n  if (layout.size) {\n    chartArea[layout.pos] -= layout.size;\n  }\n  layout.size = layout.horizontal ? box.height : box.width;\n  chartArea[layout.pos] += layout.size;\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderColor: (_ctx, options) => options.color,\n    borderWidth: (_ctx, options) => options.lineWidth\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options;\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right - padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const edgeOpts = grid.setContext(me.getContext(me._ticksLength - 1));\n      const lastLineWidth = edgeOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: edgeOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initConfig(config) {\n  config = config || {};\n  const data = config.data = config.data || {datasets: [], labels: []};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = data;\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.0.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args) {\n    return this._plugins.notify(this, hook, args);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    if (me.notifyPlugins('beforeEvent', args) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    callback(options.onHover, [e, active, me], me);\n    if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin, options} = element;\n  const outerRadius = element.outerRadius;\n  const innerRadius = element.innerRadius + pixelMargin;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, vm) {\n  ctx.lineCap = vm.borderCapStyle;\n  ctx.setLineDash(vm.borderDash);\n  ctx.lineDashOffset = vm.borderDashOffset;\n  ctx.lineJoin = vm.borderJoinStyle;\n  ctx.lineWidth = vm.borderWidth;\n  ctx.strokeStyle = vm.borderColor;\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params) {\n  params = params || {};\n  const count = points.length;\n  const start = Math.max(params.start || 0, segment.start);\n  const end = Math.min(params.end || count - 1, segment.end);\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  ctx.beginPath();\n  if (line.path(ctx, start, count)) {\n    ctx.closePath();\n  }\n  ctx.stroke();\n}\nconst usePath2D = typeof Path2D === 'function';\nconst strokePath = usePath2D ? strokePathWithCache : strokePathDirect;\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const ilen = segments.length;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (let i = 0; i < ilen; ++i) {\n      loop &= segmentMethod(ctx, me, segments[i], {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    setStyle(ctx, options);\n    strokePath(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  const decimated = [];\n  const bucketWidth = (data.length - 2) / (samples - 2);\n  let sampledIndex = 0;\n  let a = 0;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, data.length);\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX = data[j].x;\n      avgY = data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[data.length - 1];\n  return decimated;\n}\nfunction minMaxDecimation(data, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const xMin = data[0].x;\n  const xMax = data[data.length - 1].x;\n  const dx = xMax - xMin;\n  for (i = 0; i < data.length; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {value: data});\n    }\n  });\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      if (data.length <= 4 * availableWidth) {\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const subs = _boundSegments(target, bounds);\n    for (let j = 0; j < subs.length; ++j) {\n      const sub = subs[j];\n      const subBounds = getBounds(property, tpoints[sub.start], tpoints[sub.end], sub.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (let k = 0; k < fillSources.length; k++) {\n        parts.push({\n          source: fillSources[k],\n          target: sub,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  ctx.fillStyle = color;\n  for (let i = 0, ilen = segments.length; i < ilen; ++i) {\n    const {source: src, target: tgt, start, end} = segments[i];\n    ctx.save();\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : 'x';\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const propagate = options.propagate;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, propagate);\n    }\n  },\n  beforeDatasetsDraw(chart) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    let i, meta;\n    for (i = metasets.length - 1; i >= 0; --i) {\n      meta = metasets[i].$filler;\n      if (meta) {\n        meta.line.updateControlPoints(area);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args) {\n    const area = chart.chartArea;\n    const ctx = chart.ctx;\n    const source = args.meta.$filler;\n    if (!source || source.fill === false) {\n      return;\n    }\n    const target = getTarget(source);\n    const {line, scale} = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {above = color, below = color} = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {line, target, above, below, area, scale});\n      unclipArea(ctx);\n    }\n  },\n  defaults: {\n    propagate: true\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.strokeStyle = fontColor;\n    ctx.fillStyle = fontColor;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        if (lineWidth !== 0) {\n          ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      style: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.fillStyle = options.multiKeyBackground;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.fillStyle = labelColors.backgroundColor;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2), colorY + 1, boxWidth - 2, boxHeight - 2);\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const me = this;\n    const position = positioners[me.options.position].call(me, active, e);\n    return me.caretX !== position.x || me.caretY !== position.y;\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      style: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      style: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const ticks = generateTicks$1(numericGeneratorOptions, _addGrace(me, opts.grace));\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? formatter(label, index, ticks) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAC,IAAIC,OAArC,EAA8CC,CAAC,IAAIC,OAAnD,EAA4DC,CAAC,IAAIC,KAAjE,EAAwEC,CAAC,IAAIC,QAA7E,EAAuFC,CAAC,IAAIC,OAA5F,EAAqGC,CAAC,IAAIC,QAA1G,EAAoHC,CAAC,IAAIC,cAAzH,EAAyIC,CAAC,IAAIC,mBAA9I,EAAmKC,CAAC,IAAIC,iBAAxK,EAA2LC,CAAC,IAAIC,gBAAhM,EAAkNC,CAAC,IAAIC,cAAvN,EAAuOC,CAAC,IAAIC,OAA5O,EAAqPC,CAAC,IAAIC,IAA1P,EAAgQC,CAAC,IAAIC,aAArQ,EAAoRC,CAAC,IAAIC,QAAzR,EAAmSC,CAAC,IAAIC,UAAxS,EAAoTC,CAAC,IAAIC,YAAzT,EAAuUC,CAAC,IAAIC,SAA5U,EAAuVC,CAAC,IAAIC,YAA5V,EAA0WC,CAAC,IAAIC,WAA/W,EAA4XC,CAAC,IAAIC,GAAjY,EAAsYC,CAAC,IAAIC,YAA3Y,EAAyZC,CAAC,IAAIC,aAA9Z,EAA6aC,CAAC,IAAIC,OAAlb,EAA2bC,CAAC,IAAIC,EAAhc,EAAocC,CAAC,IAAIC,QAAzc,EAAmdC,CAAC,IAAIC,WAAxd,EAAqeC,CAAC,IAAIC,YAA1e,EAAwfC,CAAC,IAAIC,qBAA7f,EAAohBC,CAAC,IAAIC,cAAzhB,EAAyiBC,CAAC,IAAIC,aAA9iB,EAA6jBC,CAAC,IAAIC,SAAlkB,EAA6kBC,CAAC,IAAIC,IAAllB,EAAwlBC,CAAC,IAAIC,cAA7lB,EAA6mBC,CAAC,IAAIC,cAAlnB,EAAkoBC,CAAC,IAAIC,YAAvoB,EAAqpBC,CAAC,IAAIC,SAA1pB,EAAqqBC,CAAC,IAAIC,4BAA1qB,EAAwsBC,CAAC,IAAIC,KAA7sB,EAAotBC,CAAC,IAAIC,UAAztB,EAAquBC,CAAC,IAAIC,eAA1uB,EAA2vBC,CAAC,IAAIC,QAAhwB,EAA0wBC,CAAC,IAAIC,SAA/wB,EAA0xBC,CAAC,IAAIC,YAA/xB,EAA6yBC,CAAC,IAAIC,WAAlzB,EAA+zBC,CAAC,IAAIC,WAAp0B,EAAi1BC,CAAC,IAAIC,UAAt1B,EAAk2BC,CAAC,IAAIC,MAAv2B,EAA+2BC,CAAC,IAAIC,kBAAp3B,EAAw4BC,CAAC,IAAIC,cAA74B,EAA65BC,CAAC,IAAIC,SAAl6B,EAA66BC,CAAC,IAAIC,KAAl7B,EAAy7BC,CAAC,IAAIC,WAA97B,EAA28BC,EAAE,IAAIC,WAAj9B,EAA89BC,EAAE,IAAIC,UAAp+B,EAAg/BC,EAAE,IAAIC,cAAt/B,EAAsgCC,EAAE,IAAIC,eAA5gC,EAA6hCC,EAAE,IAAIC,YAAniC,EAAijCC,EAAE,IAAIC,OAAvjC,EAAgkCC,EAAE,IAAIC,GAAtkC,EAA2kCC,EAAE,IAAIC,QAAjlC,EAA2lCC,EAAE,IAAIC,WAAjmC,EAA8mCC,EAAE,IAAIC,WAApnC,EAAioCC,EAAE,IAAIC,cAAvoC,EAAupCC,EAAE,IAAIC,iBAA7pC,EAAgrCC,EAAE,IAAIC,0BAAtrC,EAAktCC,EAAE,IAAIC,gBAAxtC,EAA0uCC,EAAE,IAAIC,cAAhvC,EAAgwCC,EAAE,IAAIC,qBAAtwC,EAA6xCC,EAAE,IAAIC,oBAAnyC,EAAyzCC,EAAE,IAAIC,YAA/zC,EAA60CC,EAAE,IAAIC,cAAn1C,EAAm2CC,EAAE,IAAIC,cAAz2C,EAAy3CC,EAAE,IAAIC,SAA/3C,EAA04CC,EAAE,IAAIC,MAAh5C,EAAw5CC,EAAE,IAAIC,aAA95C,EAA66CC,EAAE,IAAIC,aAAn7C,EAAk8CC,EAAE,IAAIC,eAAx8C,EAAy9CC,EAAE,IAAIC,aAA/9C,EAA8+CC,EAAE,IAAIC,qBAAp/C,EAA2gDC,EAAE,IAAIC,MAAjhD,EAAyhDC,EAAE,IAAIC,oBAA/hD,EAAqjDC,EAAE,IAAIC,IAA3jD,EAAikDC,EAAE,IAAIC,qBAAvkD,EAA8lDC,EAAE,IAAIC,SAApmD,EAA+mDC,EAAE,IAAIC,kBAArnD,EAAyoDC,EAAE,IAAIC,OAA/oD,EAAwpDC,EAAE,IAAIC,WAA9pD,EAA2qDC,EAAE,IAAIC,YAAjrD,EAA+rDC,EAAE,IAAIC,cAArsD,EAAqtDC,EAAE,IAAIC,YAA3tD,EAAyuDC,EAAE,IAAIC,cAA/uD,EAA+vDC,EAAE,IAAIC,OAArwD,QAAoxD,6BAApxD;AACA,SAAS/K,CAAC,IAAIC,QAAd,QAA8B,6BAA9B;;AAEA,MAAM+K,QAAN,CAAe;EACbC,WAAW,GAAG;IACZ,KAAKC,QAAL,GAAgB,IAAhB;IACA,KAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;IACA,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKC,SAAL,GAAiBC,SAAjB;EACD;;EACDC,OAAO,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,EAAqBC,IAArB,EAA2B;IAChC,MAAMC,SAAS,GAAGH,KAAK,CAACI,SAAN,CAAgBF,IAAhB,CAAlB;IACA,MAAMG,QAAQ,GAAGL,KAAK,CAACM,QAAvB;IACAH,SAAS,CAACI,OAAV,CAAkBC,EAAE,IAAIA,EAAE,CAAC;MACzBT,KADyB;MAEzBM,QAFyB;MAGzBI,WAAW,EAAEC,IAAI,CAACC,GAAL,CAASV,IAAI,GAAGD,KAAK,CAACY,KAAtB,EAA6BP,QAA7B;IAHY,CAAD,CAA1B;EAKD;;EACDQ,QAAQ,GAAG;IACT,MAAMC,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAACtB,QAAP,EAAiB;MACf;IACD;;IACDsB,EAAE,CAACnB,QAAH,GAAc,IAAd;IACAmB,EAAE,CAACtB,QAAH,GAAc7L,gBAAgB,CAACoN,IAAjB,CAAsBC,MAAtB,EAA8B,MAAM;MAChDF,EAAE,CAACG,OAAH;;MACAH,EAAE,CAACtB,QAAH,GAAc,IAAd;;MACA,IAAIsB,EAAE,CAACnB,QAAP,EAAiB;QACfmB,EAAE,CAACD,QAAH;MACD;IACF,CANa,CAAd;EAOD;;EACDI,OAAO,GAAoB;IAAA,IAAnBhB,IAAmB,uEAAZiB,IAAI,CAACC,GAAL,EAAY;IACzB,MAAML,EAAE,GAAG,IAAX;IACA,IAAIM,SAAS,GAAG,CAAhB;;IACAN,EAAE,CAACrB,OAAH,CAAWc,OAAX,CAAmB,CAACP,KAAD,EAAQD,KAAR,KAAkB;MACnC,IAAI,CAACC,KAAK,CAACqB,OAAP,IAAkB,CAACrB,KAAK,CAACsB,KAAN,CAAYC,MAAnC,EAA2C;QACzC;MACD;;MACD,MAAMD,KAAK,GAAGtB,KAAK,CAACsB,KAApB;MACA,IAAIpN,CAAC,GAAGoN,KAAK,CAACC,MAAN,GAAe,CAAvB;MACA,IAAIC,IAAI,GAAG,KAAX;MACA,IAAIC,IAAJ;;MACA,OAAOvN,CAAC,IAAI,CAAZ,EAAe,EAAEA,CAAjB,EAAoB;QAClBuN,IAAI,GAAGH,KAAK,CAACpN,CAAD,CAAZ;;QACA,IAAIuN,IAAI,CAACC,OAAT,EAAkB;UAChB,IAAID,IAAI,CAACE,MAAL,GAAc3B,KAAK,CAACM,QAAxB,EAAkC;YAChCN,KAAK,CAACM,QAAN,GAAiBmB,IAAI,CAACE,MAAtB;UACD;;UACDF,IAAI,CAACG,IAAL,CAAU3B,IAAV;UACAuB,IAAI,GAAG,IAAP;QACD,CAND,MAMO;UACLF,KAAK,CAACpN,CAAD,CAAL,GAAWoN,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAhB;UACAD,KAAK,CAACO,GAAN;QACD;MACF;;MACD,IAAIL,IAAJ,EAAU;QACRzB,KAAK,CAACyB,IAAN;;QACAV,EAAE,CAAChB,OAAH,CAAWC,KAAX,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B,UAA/B;MACD;;MACD,IAAI,CAACqB,KAAK,CAACC,MAAX,EAAmB;QACjBvB,KAAK,CAACqB,OAAN,GAAgB,KAAhB;;QACAP,EAAE,CAAChB,OAAH,CAAWC,KAAX,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B,UAA/B;MACD;;MACDmB,SAAS,IAAIE,KAAK,CAACC,MAAnB;IACD,CA9BD;;IA+BAT,EAAE,CAAClB,SAAH,GAAeK,IAAf;;IACA,IAAImB,SAAS,KAAK,CAAlB,EAAqB;MACnBN,EAAE,CAACnB,QAAH,GAAc,KAAd;IACD;EACF;;EACDmC,SAAS,CAAC/B,KAAD,EAAQ;IACf,MAAMgC,MAAM,GAAG,KAAKtC,OAApB;IACA,IAAIO,KAAK,GAAG+B,MAAM,CAACC,GAAP,CAAWjC,KAAX,CAAZ;;IACA,IAAI,CAACC,KAAL,EAAY;MACVA,KAAK,GAAG;QACNqB,OAAO,EAAE,KADH;QAENC,KAAK,EAAE,EAFD;QAGNlB,SAAS,EAAE;UACT6B,QAAQ,EAAE,EADD;UAETC,QAAQ,EAAE;QAFD;MAHL,CAAR;MAQAH,MAAM,CAACI,GAAP,CAAWpC,KAAX,EAAkBC,KAAlB;IACD;;IACD,OAAOA,KAAP;EACD;;EACDoC,MAAM,CAACrC,KAAD,EAAQsC,KAAR,EAAeC,EAAf,EAAmB;IACvB,KAAKR,SAAL,CAAe/B,KAAf,EAAsBK,SAAtB,CAAgCiC,KAAhC,EAAuCE,IAAvC,CAA4CD,EAA5C;EACD;;EACDE,GAAG,CAACzC,KAAD,EAAQuB,KAAR,EAAe;IAChB,IAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,MAArB,EAA6B;MAC3B;IACD;;IACD,KAAKO,SAAL,CAAe/B,KAAf,EAAsBuB,KAAtB,CAA4BiB,IAA5B,CAAiC,GAAGjB,KAApC;EACD;;EACDmB,GAAG,CAAC1C,KAAD,EAAQ;IACT,OAAO,KAAK+B,SAAL,CAAe/B,KAAf,EAAsBuB,KAAtB,CAA4BC,MAA5B,GAAqC,CAA5C;EACD;;EACDX,KAAK,CAACb,KAAD,EAAQ;IACX,MAAMC,KAAK,GAAG,KAAKP,OAAL,CAAauC,GAAb,CAAiBjC,KAAjB,CAAd;;IACA,IAAI,CAACC,KAAL,EAAY;MACV;IACD;;IACDA,KAAK,CAACqB,OAAN,GAAgB,IAAhB;IACArB,KAAK,CAACY,KAAN,GAAcM,IAAI,CAACC,GAAL,EAAd;IACAnB,KAAK,CAACM,QAAN,GAAiBN,KAAK,CAACsB,KAAN,CAAYoB,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAclC,IAAI,CAACmC,GAAL,CAASF,GAAT,EAAcC,GAAG,CAACE,SAAlB,CAAjC,EAA+D,CAA/D,CAAjB;;IACA,KAAKjC,QAAL;EACD;;EACDQ,OAAO,CAACtB,KAAD,EAAQ;IACb,IAAI,CAAC,KAAKJ,QAAV,EAAoB;MAClB,OAAO,KAAP;IACD;;IACD,MAAMK,KAAK,GAAG,KAAKP,OAAL,CAAauC,GAAb,CAAiBjC,KAAjB,CAAd;;IACA,IAAI,CAACC,KAAD,IAAU,CAACA,KAAK,CAACqB,OAAjB,IAA4B,CAACrB,KAAK,CAACsB,KAAN,CAAYC,MAA7C,EAAqD;MACnD,OAAO,KAAP;IACD;;IACD,OAAO,IAAP;EACD;;EACDwB,IAAI,CAAChD,KAAD,EAAQ;IACV,MAAMC,KAAK,GAAG,KAAKP,OAAL,CAAauC,GAAb,CAAiBjC,KAAjB,CAAd;;IACA,IAAI,CAACC,KAAD,IAAU,CAACA,KAAK,CAACsB,KAAN,CAAYC,MAA3B,EAAmC;MACjC;IACD;;IACD,MAAMD,KAAK,GAAGtB,KAAK,CAACsB,KAApB;IACA,IAAIpN,CAAC,GAAGoN,KAAK,CAACC,MAAN,GAAe,CAAvB;;IACA,OAAOrN,CAAC,IAAI,CAAZ,EAAe,EAAEA,CAAjB,EAAoB;MAClBoN,KAAK,CAACpN,CAAD,CAAL,CAAS8O,MAAT;IACD;;IACDhD,KAAK,CAACsB,KAAN,GAAc,EAAd;;IACA,KAAKxB,OAAL,CAAaC,KAAb,EAAoBC,KAApB,EAA2BkB,IAAI,CAACC,GAAL,EAA3B,EAAuC,UAAvC;EACD;;EACD8B,MAAM,CAAClD,KAAD,EAAQ;IACZ,OAAO,KAAKN,OAAL,CAAayD,MAAb,CAAoBnD,KAApB,CAAP;EACD;;AApIY;;AAsIf,IAAIoD,QAAQ,GAAG,IAAI7D,QAAJ,EAAf;AAEA,MAAM8D,WAAW,GAAG,aAApB;AACA,MAAMC,aAAa,GAAG;EACpBC,OAAO,CAACC,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmB;IACxB,OAAOA,MAAM,GAAG,GAAT,GAAeD,EAAf,GAAoBD,IAA3B;EACD,CAHmB;;EAIpBtP,KAAK,CAACsP,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmB;IACtB,MAAMC,EAAE,GAAGzP,KAAK,CAACsP,IAAI,IAAIH,WAAT,CAAhB;IACA,MAAMO,EAAE,GAAGD,EAAE,CAACE,KAAH,IAAY3P,KAAK,CAACuP,EAAE,IAAIJ,WAAP,CAA5B;IACA,OAAOO,EAAE,IAAIA,EAAE,CAACC,KAAT,GACHD,EAAE,CAACE,GAAH,CAAOH,EAAP,EAAWD,MAAX,EAAmBK,SAAnB,EADG,GAEHN,EAFJ;EAGD,CAVmB;;EAWpBO,MAAM,CAACR,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmB;IACvB,OAAOF,IAAI,GAAG,CAACC,EAAE,GAAGD,IAAN,IAAcE,MAA5B;EACD;;AAbmB,CAAtB;;AAeA,MAAMO,SAAN,CAAgB;EACdzE,WAAW,CAAC0E,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAoBX,EAApB,EAAwB;IACjC,MAAMY,YAAY,GAAGF,MAAM,CAACC,IAAD,CAA3B;IACAX,EAAE,GAAG3P,OAAO,CAAC,CAACoQ,GAAG,CAACT,EAAL,EAASA,EAAT,EAAaY,YAAb,EAA2BH,GAAG,CAACV,IAA/B,CAAD,CAAZ;IACA,MAAMA,IAAI,GAAG1P,OAAO,CAAC,CAACoQ,GAAG,CAACV,IAAL,EAAWa,YAAX,EAAyBZ,EAAzB,CAAD,CAApB;IACA,KAAK9B,OAAL,GAAe,IAAf;IACA,KAAK2C,GAAL,GAAWJ,GAAG,CAACzD,EAAJ,IAAU6C,aAAa,CAACY,GAAG,CAAC/D,IAAJ,IAAY,OAAOqD,IAApB,CAAlC;IACA,KAAKe,OAAL,GAAevQ,OAAO,CAACkQ,GAAG,CAACM,MAAL,CAAP,IAAuBxQ,OAAO,CAACyQ,MAA9C;IACA,KAAKC,MAAL,GAAc/D,IAAI,CAACgE,KAAL,CAAWxD,IAAI,CAACC,GAAL,MAAc8C,GAAG,CAACU,KAAJ,IAAa,CAA3B,CAAX,CAAd;IACA,KAAK7B,SAAL,GAAiB,KAAKnB,MAAL,GAAcjB,IAAI,CAACgE,KAAL,CAAWT,GAAG,CAAC3D,QAAf,CAA/B;IACA,KAAKsE,KAAL,GAAa,CAAC,CAACX,GAAG,CAACY,IAAnB;IACA,KAAKC,OAAL,GAAeZ,MAAf;IACA,KAAKa,KAAL,GAAaZ,IAAb;IACA,KAAKa,KAAL,GAAazB,IAAb;IACA,KAAK0B,GAAL,GAAWzB,EAAX;IACA,KAAK0B,SAAL,GAAiBrF,SAAjB;EACD;;EACDsF,MAAM,GAAG;IACP,OAAO,KAAKzD,OAAZ;EACD;;EACD0D,MAAM,CAACnB,GAAD,EAAMT,EAAN,EAAUvD,IAAV,EAAgB;IACpB,MAAMa,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAACY,OAAP,EAAgB;MACdZ,EAAE,CAAChB,OAAH,CAAW,KAAX;;MACA,MAAMsE,YAAY,GAAGtD,EAAE,CAACgE,OAAH,CAAWhE,EAAE,CAACiE,KAAd,CAArB;MACA,MAAMM,OAAO,GAAGpF,IAAI,GAAGa,EAAE,CAAC2D,MAA1B;MACA,MAAMa,MAAM,GAAGxE,EAAE,CAACgC,SAAH,GAAeuC,OAA9B;MACAvE,EAAE,CAAC2D,MAAH,GAAYxE,IAAZ;MACAa,EAAE,CAACgC,SAAH,GAAepC,IAAI,CAACgE,KAAL,CAAWhE,IAAI,CAACmC,GAAL,CAASyC,MAAT,EAAiBrB,GAAG,CAAC3D,QAArB,CAAX,CAAf;MACAQ,EAAE,CAACa,MAAH,IAAa0D,OAAb;MACAvE,EAAE,CAAC8D,KAAH,GAAW,CAAC,CAACX,GAAG,CAACY,IAAjB;MACA/D,EAAE,CAACmE,GAAH,GAASpR,OAAO,CAAC,CAACoQ,GAAG,CAACT,EAAL,EAASA,EAAT,EAAaY,YAAb,EAA2BH,GAAG,CAACV,IAA/B,CAAD,CAAhB;MACAzC,EAAE,CAACkE,KAAH,GAAWnR,OAAO,CAAC,CAACoQ,GAAG,CAACV,IAAL,EAAWa,YAAX,EAAyBZ,EAAzB,CAAD,CAAlB;IACD;EACF;;EACDR,MAAM,GAAG;IACP,MAAMlC,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAACY,OAAP,EAAgB;MACdZ,EAAE,CAACc,IAAH,CAAQV,IAAI,CAACC,GAAL,EAAR;MACAL,EAAE,CAACY,OAAH,GAAa,KAAb;;MACAZ,EAAE,CAAChB,OAAH,CAAW,KAAX;IACD;EACF;;EACD8B,IAAI,CAAC3B,IAAD,EAAO;IACT,MAAMa,EAAE,GAAG,IAAX;IACA,MAAMuE,OAAO,GAAGpF,IAAI,GAAGa,EAAE,CAAC2D,MAA1B;IACA,MAAMnE,QAAQ,GAAGQ,EAAE,CAACgC,SAApB;IACA,MAAMqB,IAAI,GAAGrD,EAAE,CAACiE,KAAhB;IACA,MAAMxB,IAAI,GAAGzC,EAAE,CAACkE,KAAhB;IACA,MAAMH,IAAI,GAAG/D,EAAE,CAAC8D,KAAhB;IACA,MAAMpB,EAAE,GAAG1C,EAAE,CAACmE,GAAd;IACA,IAAIxB,MAAJ;IACA3C,EAAE,CAACY,OAAH,GAAa6B,IAAI,KAAKC,EAAT,KAAgBqB,IAAI,IAAKQ,OAAO,GAAG/E,QAAnC,CAAb;;IACA,IAAI,CAACQ,EAAE,CAACY,OAAR,EAAiB;MACfZ,EAAE,CAACgE,OAAH,CAAWX,IAAX,IAAmBX,EAAnB;;MACA1C,EAAE,CAAChB,OAAH,CAAW,IAAX;;MACA;IACD;;IACD,IAAIuF,OAAO,GAAG,CAAd,EAAiB;MACfvE,EAAE,CAACgE,OAAH,CAAWX,IAAX,IAAmBZ,IAAnB;MACA;IACD;;IACDE,MAAM,GAAI4B,OAAO,GAAG/E,QAAX,GAAuB,CAAhC;IACAmD,MAAM,GAAGoB,IAAI,IAAIpB,MAAM,GAAG,CAAjB,GAAqB,IAAIA,MAAzB,GAAkCA,MAA3C;IACAA,MAAM,GAAG3C,EAAE,CAACwD,OAAH,CAAW5D,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYY,MAAZ,CAAZ,CAAX,CAAT;IACA3C,EAAE,CAACgE,OAAH,CAAWX,IAAX,IAAmBrD,EAAE,CAACuD,GAAH,CAAOd,IAAP,EAAaC,EAAb,EAAiBC,MAAjB,CAAnB;EACD;;EACD8B,IAAI,GAAG;IACL,MAAMC,QAAQ,GAAG,KAAKN,SAAL,KAAmB,KAAKA,SAAL,GAAiB,EAApC,CAAjB;IACA,OAAO,IAAIO,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;MAC/BH,QAAQ,CAACjD,IAAT,CAAc;QAACmD,GAAD;QAAMC;MAAN,CAAd;IACD,CAFM,CAAP;EAGD;;EACD7F,OAAO,CAAC8F,QAAD,EAAW;IAChB,MAAMC,MAAM,GAAGD,QAAQ,GAAG,KAAH,GAAW,KAAlC;IACA,MAAMJ,QAAQ,GAAG,KAAKN,SAAL,IAAkB,EAAnC;;IACA,KAAK,IAAIhR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsR,QAAQ,CAACjE,MAA7B,EAAqCrN,CAAC,EAAtC,EAA0C;MACxCsR,QAAQ,CAACtR,CAAD,CAAR,CAAY2R,MAAZ;IACD;EACF;;AA/Ea;;AAkFhB,MAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,aAAX,EAA0B,QAA1B,EAAoC,SAApC,CAAhB;AACA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,aAAV,EAAyB,iBAAzB,CAAf;AACAxR,QAAQ,CAAC4N,GAAT,CAAa,WAAb,EAA0B;EACxBwC,KAAK,EAAE9E,SADiB;EAExBS,QAAQ,EAAE,IAFc;EAGxBiE,MAAM,EAAE,cAHgB;EAIxB/D,EAAE,EAAEX,SAJoB;EAKxB0D,IAAI,EAAE1D,SALkB;EAMxBgF,IAAI,EAAEhF,SANkB;EAOxB2D,EAAE,EAAE3D,SAPoB;EAQxBK,IAAI,EAAEL;AARkB,CAA1B;AAUA,MAAMmG,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAY3R,QAAQ,CAAC4R,SAArB,CAAzB;AACA5R,QAAQ,CAAC6R,QAAT,CAAkB,WAAlB,EAA+B;EAC7BC,SAAS,EAAE,KADkB;EAE7BC,UAAU,EAAE,KAFiB;EAG7BC,WAAW,EAAGC,IAAD,IAAUA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK,YAAlC,IAAkDA,IAAI,KAAK;AAHrD,CAA/B;AAKAjS,QAAQ,CAAC4N,GAAT,CAAa,YAAb,EAA2B;EACzB4D,MAAM,EAAE;IACN7F,IAAI,EAAE,OADA;IAENuG,UAAU,EAAEV;EAFN,CADiB;EAKzBD,OAAO,EAAE;IACP5F,IAAI,EAAE,QADC;IAEPuG,UAAU,EAAEX;EAFL;AALgB,CAA3B;AAUAvR,QAAQ,CAAC6R,QAAT,CAAkB,YAAlB,EAAgC;EAC9BC,SAAS,EAAE;AADmB,CAAhC;AAGA9R,QAAQ,CAAC4N,GAAT,CAAa,aAAb,EAA4B;EAC1BgD,MAAM,EAAE;IACNgB,SAAS,EAAE;MACT7F,QAAQ,EAAE;IADD;EADL,CADkB;EAM1BoG,MAAM,EAAE;IACNP,SAAS,EAAE;MACT7F,QAAQ,EAAE;IADD;EADL,CANkB;EAW1BqG,IAAI,EAAE;IACJC,UAAU,EAAE;MACVb,MAAM,EAAE;QACNxC,IAAI,EAAE;MADA,CADE;MAIVsD,OAAO,EAAE;QACP3G,IAAI,EAAE,SADC;QAEPI,QAAQ,EAAE;MAFH;IAJC;EADR,CAXoB;EAsB1BwG,IAAI,EAAE;IACJF,UAAU,EAAE;MACVb,MAAM,EAAE;QACNvC,EAAE,EAAE;MADE,CADE;MAIVqD,OAAO,EAAE;QACP3G,IAAI,EAAE,SADC;QAEPqE,MAAM,EAAE,QAFD;QAGP/D,EAAE,EAAEhM,CAAC,IAAIA,CAAC,GAAG;MAHN;IAJC;EADR;AAtBoB,CAA5B;;AAmCA,MAAMuS,UAAN,CAAiB;EACfxH,WAAW,CAACQ,KAAD,EAAQiH,MAAR,EAAgB;IACzB,KAAKC,MAAL,GAAclH,KAAd;IACA,KAAKmH,WAAL,GAAmB,IAAIxH,GAAJ,EAAnB;IACA,KAAKyH,SAAL,CAAeH,MAAf;EACD;;EACDG,SAAS,CAACH,MAAD,EAAS;IAChB,IAAI,CAAC7S,QAAQ,CAAC6S,MAAD,CAAb,EAAuB;MACrB;IACD;;IACD,MAAMI,aAAa,GAAG,KAAKF,WAA3B;IACAjB,MAAM,CAACoB,mBAAP,CAA2BL,MAA3B,EAAmCzG,OAAnC,CAA2C+G,GAAG,IAAI;MAChD,MAAMrD,GAAG,GAAG+C,MAAM,CAACM,GAAD,CAAlB;;MACA,IAAI,CAACnT,QAAQ,CAAC8P,GAAD,CAAb,EAAoB;QAClB;MACD;;MACD,MAAM2B,QAAQ,GAAG,EAAjB;;MACA,KAAK,MAAM2B,MAAX,IAAqBvB,gBAArB,EAAuC;QACrCJ,QAAQ,CAAC2B,MAAD,CAAR,GAAmBtD,GAAG,CAACsD,MAAD,CAAtB;MACD;;MACD,CAAClT,OAAO,CAAC4P,GAAG,CAACwC,UAAL,CAAP,IAA2BxC,GAAG,CAACwC,UAA/B,IAA6C,CAACa,GAAD,CAA9C,EAAqD/G,OAArD,CAA8D4D,IAAD,IAAU;QACrE,IAAIA,IAAI,KAAKmD,GAAT,IAAgB,CAACF,aAAa,CAAC3E,GAAd,CAAkB0B,IAAlB,CAArB,EAA8C;UAC5CiD,aAAa,CAACjF,GAAd,CAAkBgC,IAAlB,EAAwByB,QAAxB;QACD;MACF,CAJD;IAKD,CAdD;EAeD;;EACD4B,eAAe,CAACtD,MAAD,EAASuD,MAAT,EAAiB;IAC9B,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAA1B;IACA,MAAMA,OAAO,GAAGC,oBAAoB,CAAC1D,MAAD,EAASwD,UAAT,CAApC;;IACA,IAAI,CAACC,OAAL,EAAc;MACZ,OAAO,EAAP;IACD;;IACD,MAAMf,UAAU,GAAG,KAAKiB,iBAAL,CAAuBF,OAAvB,EAAgCD,UAAhC,CAAnB;;IACA,IAAIA,UAAU,CAACI,OAAf,EAAwB;MACtBC,QAAQ,CAAC7D,MAAM,CAACyD,OAAP,CAAeK,WAAhB,EAA6BN,UAA7B,CAAR,CAAiDO,IAAjD,CAAsD,MAAM;QAC1D/D,MAAM,CAACyD,OAAP,GAAiBD,UAAjB;MACD,CAFD,EAEG,MAAM,CACR,CAHD;IAID;;IACD,OAAOd,UAAP;EACD;;EACDiB,iBAAiB,CAAC3D,MAAD,EAASuD,MAAT,EAAiB;IAChC,MAAML,aAAa,GAAG,KAAKF,WAA3B;IACA,MAAMN,UAAU,GAAG,EAAnB;IACA,MAAMvF,OAAO,GAAG6C,MAAM,CAAC8D,WAAP,KAAuB9D,MAAM,CAAC8D,WAAP,GAAqB,EAA5C,CAAhB;IACA,MAAME,KAAK,GAAGjC,MAAM,CAACC,IAAP,CAAYuB,MAAZ,CAAd;IACA,MAAMxH,IAAI,GAAGiB,IAAI,CAACC,GAAL,EAAb;IACA,IAAIjN,CAAJ;;IACA,KAAKA,CAAC,GAAGgU,KAAK,CAAC3G,MAAN,GAAe,CAAxB,EAA2BrN,CAAC,IAAI,CAAhC,EAAmC,EAAEA,CAArC,EAAwC;MACtC,MAAMiQ,IAAI,GAAG+D,KAAK,CAAChU,CAAD,CAAlB;;MACA,IAAIiQ,IAAI,CAACgE,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;QAC1B;MACD;;MACD,IAAIhE,IAAI,KAAK,SAAb,EAAwB;QACtByC,UAAU,CAACrE,IAAX,CAAgB,GAAG,KAAKiF,eAAL,CAAqBtD,MAArB,EAA6BuD,MAA7B,CAAnB;QACA;MACD;;MACD,MAAMW,KAAK,GAAGX,MAAM,CAACtD,IAAD,CAApB;MACA,IAAIgC,SAAS,GAAG9E,OAAO,CAAC8C,IAAD,CAAvB;MACA,MAAMF,GAAG,GAAGmD,aAAa,CAACpF,GAAd,CAAkBmC,IAAlB,CAAZ;;MACA,IAAIgC,SAAJ,EAAe;QACb,IAAIlC,GAAG,IAAIkC,SAAS,CAAChB,MAAV,EAAX,EAA+B;UAC7BgB,SAAS,CAACf,MAAV,CAAiBnB,GAAjB,EAAsBmE,KAAtB,EAA6BnI,IAA7B;UACA;QACD,CAHD,MAGO;UACLkG,SAAS,CAACnD,MAAV;QACD;MACF;;MACD,IAAI,CAACiB,GAAD,IAAQ,CAACA,GAAG,CAAC3D,QAAjB,EAA2B;QACzB4D,MAAM,CAACC,IAAD,CAAN,GAAeiE,KAAf;QACA;MACD;;MACD/G,OAAO,CAAC8C,IAAD,CAAP,GAAgBgC,SAAS,GAAG,IAAInC,SAAJ,CAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCiE,KAAjC,CAA5B;MACAxB,UAAU,CAACrE,IAAX,CAAgB4D,SAAhB;IACD;;IACD,OAAOS,UAAP;EACD;;EACDxB,MAAM,CAAClB,MAAD,EAASuD,MAAT,EAAiB;IACrB,IAAI,KAAKP,WAAL,CAAiBmB,IAAjB,KAA0B,CAA9B,EAAiC;MAC/BpC,MAAM,CAACqC,MAAP,CAAcpE,MAAd,EAAsBuD,MAAtB;MACA;IACD;;IACD,MAAMb,UAAU,GAAG,KAAKiB,iBAAL,CAAuB3D,MAAvB,EAA+BuD,MAA/B,CAAnB;;IACA,IAAIb,UAAU,CAACrF,MAAf,EAAuB;MACrB4B,QAAQ,CAACX,GAAT,CAAa,KAAKyE,MAAlB,EAA0BL,UAA1B;MACA,OAAO,IAAP;IACD;EACF;;AAxFc;;AA0FjB,SAASmB,QAAT,CAAkBnB,UAAlB,EAA8BH,UAA9B,EAA0C;EACxC,MAAMpF,OAAO,GAAG,EAAhB;EACA,MAAM6E,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYO,UAAZ,CAAb;;EACA,KAAK,IAAIvS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgS,IAAI,CAAC3E,MAAzB,EAAiCrN,CAAC,EAAlC,EAAsC;IACpC,MAAMqU,IAAI,GAAG3B,UAAU,CAACV,IAAI,CAAChS,CAAD,CAAL,CAAvB;;IACA,IAAIqU,IAAI,IAAIA,IAAI,CAACpD,MAAL,EAAZ,EAA2B;MACzB9D,OAAO,CAACkB,IAAR,CAAagG,IAAI,CAAChD,IAAL,EAAb;IACD;EACF;;EACD,OAAOE,OAAO,CAAC+C,GAAR,CAAYnH,OAAZ,CAAP;AACD;;AACD,SAASuG,oBAAT,CAA8B1D,MAA9B,EAAsCwD,UAAtC,EAAkD;EAChD,IAAI,CAACA,UAAL,EAAiB;IACf;EACD;;EACD,IAAIC,OAAO,GAAGzD,MAAM,CAACyD,OAArB;;EACA,IAAI,CAACA,OAAL,EAAc;IACZzD,MAAM,CAACyD,OAAP,GAAiBD,UAAjB;IACA;EACD;;EACD,IAAIC,OAAO,CAACG,OAAZ,EAAqB;IACnB5D,MAAM,CAACyD,OAAP,GAAiBA,OAAO,GAAG1B,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkBX,OAAlB,EAA2B;MAACG,OAAO,EAAE,KAAV;MAAiBE,WAAW,EAAE;IAA9B,CAA3B,CAA3B;EACD;;EACD,OAAOL,OAAP;AACD;;AAED,SAASc,SAAT,CAAmBC,KAAnB,EAA0BC,eAA1B,EAA2C;EACzC,MAAMC,IAAI,GAAGF,KAAK,IAAIA,KAAK,CAACf,OAAf,IAA0B,EAAvC;EACA,MAAMkB,OAAO,GAAGD,IAAI,CAACC,OAArB;EACA,MAAMlI,GAAG,GAAGiI,IAAI,CAACjI,GAAL,KAAad,SAAb,GAAyB8I,eAAzB,GAA2C,CAAvD;EACA,MAAM9F,GAAG,GAAG+F,IAAI,CAAC/F,GAAL,KAAahD,SAAb,GAAyB8I,eAAzB,GAA2C,CAAvD;EACA,OAAO;IACL/H,KAAK,EAAEiI,OAAO,GAAGhG,GAAH,GAASlC,GADlB;IAELmI,GAAG,EAAED,OAAO,GAAGlI,GAAH,GAASkC;EAFhB,CAAP;AAID;;AACD,SAASkG,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqCN,eAArC,EAAsD;EACpD,IAAIA,eAAe,KAAK,KAAxB,EAA+B;IAC7B,OAAO,KAAP;EACD;;EACD,MAAM3R,CAAC,GAAGyR,SAAS,CAACO,MAAD,EAASL,eAAT,CAAnB;EACA,MAAMzR,CAAC,GAAGuR,SAAS,CAACQ,MAAD,EAASN,eAAT,CAAnB;EACA,OAAO;IACLO,GAAG,EAAEhS,CAAC,CAAC4R,GADF;IAELK,KAAK,EAAEnS,CAAC,CAAC8R,GAFJ;IAGLM,MAAM,EAAElS,CAAC,CAAC0J,KAHL;IAILyI,IAAI,EAAErS,CAAC,CAAC4J;EAJH,CAAP;AAMD;;AACD,SAAS0I,MAAT,CAAgBlB,KAAhB,EAAuB;EACrB,IAAItS,CAAJ,EAAOpC,CAAP,EAAUU,CAAV,EAAaQ,CAAb;;EACA,IAAIT,QAAQ,CAACiU,KAAD,CAAZ,EAAqB;IACnBtS,CAAC,GAAGsS,KAAK,CAACc,GAAV;IACAxV,CAAC,GAAG0U,KAAK,CAACe,KAAV;IACA/U,CAAC,GAAGgU,KAAK,CAACgB,MAAV;IACAxU,CAAC,GAAGwT,KAAK,CAACiB,IAAV;EACD,CALD,MAKO;IACLvT,CAAC,GAAGpC,CAAC,GAAGU,CAAC,GAAGQ,CAAC,GAAGwT,KAAhB;EACD;;EACD,OAAO;IACLc,GAAG,EAAEpT,CADA;IAELqT,KAAK,EAAEzV,CAFF;IAGL0V,MAAM,EAAEhV,CAHH;IAILiV,IAAI,EAAEzU;EAJD,CAAP;AAMD;;AACD,SAAS2U,uBAAT,CAAiCxJ,KAAjC,EAAwCyJ,aAAxC,EAAuD;EACrD,MAAMtD,IAAI,GAAG,EAAb;;EACA,MAAMuD,QAAQ,GAAG1J,KAAK,CAAC2J,sBAAN,CAA6BF,aAA7B,CAAjB;;EACA,IAAItV,CAAJ,EAAOyV,IAAP;;EACA,KAAKzV,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGF,QAAQ,CAAClI,MAA5B,EAAoCrN,CAAC,GAAGyV,IAAxC,EAA8C,EAAEzV,CAAhD,EAAmD;IACjDgS,IAAI,CAAC3D,IAAL,CAAUkH,QAAQ,CAACvV,CAAD,CAAR,CAAY0V,KAAtB;EACD;;EACD,OAAO1D,IAAP;AACD;;AACD,SAAS2D,UAAT,CAAoBC,KAApB,EAA2B1B,KAA3B,EAAkC2B,OAAlC,EAA2CpC,OAA3C,EAAoD;EAClD,MAAMzB,IAAI,GAAG4D,KAAK,CAAC5D,IAAnB;EACA,MAAM8D,UAAU,GAAGrC,OAAO,CAACsC,IAAR,KAAiB,QAApC;EACA,IAAI/V,CAAJ,EAAOyV,IAAP,EAAaO,YAAb,EAA2BC,UAA3B;;EACA,IAAI/B,KAAK,KAAK,IAAd,EAAoB;IAClB;EACD;;EACD,KAAKlU,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGzD,IAAI,CAAC3E,MAAxB,EAAgCrN,CAAC,GAAGyV,IAApC,EAA0C,EAAEzV,CAA5C,EAA+C;IAC7CgW,YAAY,GAAG,CAAChE,IAAI,CAAChS,CAAD,CAApB;;IACA,IAAIgW,YAAY,KAAKH,OAArB,EAA8B;MAC5B,IAAIpC,OAAO,CAACa,GAAZ,EAAiB;QACf;MACD;;MACD;IACD;;IACD2B,UAAU,GAAGL,KAAK,CAACrC,MAAN,CAAayC,YAAb,CAAb;;IACA,IAAIjV,cAAc,CAACkV,UAAD,CAAd,KAA+BH,UAAU,IAAK5B,KAAK,KAAK,CAAV,IAAe/S,IAAI,CAAC+S,KAAD,CAAJ,KAAgB/S,IAAI,CAAC8U,UAAD,CAAjF,CAAJ,EAAqG;MACnG/B,KAAK,IAAI+B,UAAT;IACD;EACF;;EACD,OAAO/B,KAAP;AACD;;AACD,SAASgC,wBAAT,CAAkCC,IAAlC,EAAwC;EACtC,MAAMnE,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYmE,IAAZ,CAAb;EACA,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUrE,IAAI,CAAC3E,MAAf,CAAd;EACA,IAAIrN,CAAJ,EAAOyV,IAAP,EAAarC,GAAb;;EACA,KAAKpT,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGzD,IAAI,CAAC3E,MAAxB,EAAgCrN,CAAC,GAAGyV,IAApC,EAA0C,EAAEzV,CAA5C,EAA+C;IAC7CoT,GAAG,GAAGpB,IAAI,CAAChS,CAAD,CAAV;IACAoW,KAAK,CAACpW,CAAD,CAAL,GAAW;MACT8C,CAAC,EAAEsQ,GADM;MAETpQ,CAAC,EAAEmT,IAAI,CAAC/C,GAAD;IAFE,CAAX;EAID;;EACD,OAAOgD,KAAP;AACD;;AACD,SAASE,SAAT,CAAmB9B,KAAnB,EAA0B+B,IAA1B,EAAgC;EAC9B,MAAMC,OAAO,GAAGhC,KAAK,IAAIA,KAAK,CAACf,OAAN,CAAc+C,OAAvC;EACA,OAAOA,OAAO,IAAKA,OAAO,KAAK7K,SAAZ,IAAyB4K,IAAI,CAACX,KAAL,KAAejK,SAA3D;AACD;;AACD,SAAS8K,WAAT,CAAqBC,UAArB,EAAiCC,UAAjC,EAA6CJ,IAA7C,EAAmD;EACjD,OAAOG,UAAU,CAACE,EAAX,GAAgB,GAAhB,GAAsBD,UAAU,CAACC,EAAjC,GAAsC,GAAtC,GAA4CL,IAAI,CAACX,KAAjD,GAAyD,GAAzD,GAA+DW,IAAI,CAACvK,IAA3E;AACD;;AACD,SAAS6K,aAAT,CAAuBrC,KAAvB,EAA8B;EAC5B,MAAM;IAAC/H,GAAD;IAAMkC,GAAN;IAAWmI,UAAX;IAAuBC;EAAvB,IAAqCvC,KAAK,CAACqC,aAAN,EAA3C;EACA,OAAO;IACLpK,GAAG,EAAEqK,UAAU,GAAGrK,GAAH,GAASuK,MAAM,CAACC,iBAD1B;IAELtI,GAAG,EAAEoI,UAAU,GAAGpI,GAAH,GAASqI,MAAM,CAACE;EAF1B,CAAP;AAID;;AACD,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,UAA5C,EAAwD;EACtD,MAAMC,QAAQ,GAAGH,MAAM,CAACC,QAAD,CAAN,KAAqBD,MAAM,CAACC,QAAD,CAAN,GAAmB,EAAxC,CAAjB;EACA,OAAOE,QAAQ,CAACD,UAAD,CAAR,KAAyBC,QAAQ,CAACD,UAAD,CAAR,GAAuB,EAAhD,CAAP;AACD;;AACD,SAASE,YAAT,CAAsBC,UAAtB,EAAkCC,MAAlC,EAA0C;EACxC,MAAM;IAAC7L,KAAD;IAAQ8L,WAAW,EAAEpB;EAArB,IAA6BkB,UAAnC;EACA,MAAML,MAAM,GAAGvL,KAAK,CAAC+L,OAAN,KAAkB/L,KAAK,CAAC+L,OAAN,GAAgB,EAAlC,CAAf;EACA,MAAM;IAACC,MAAD;IAASC,MAAT;IAAiBpC,KAAK,EAAEM;EAAxB,IAAwCO,IAA9C;EACA,MAAMwB,KAAK,GAAGF,MAAM,CAACG,IAArB;EACA,MAAMC,KAAK,GAAGH,MAAM,CAACE,IAArB;EACA,MAAM5E,GAAG,GAAGqD,WAAW,CAACoB,MAAD,EAASC,MAAT,EAAiBvB,IAAjB,CAAvB;EACA,MAAMd,IAAI,GAAGiC,MAAM,CAACrK,MAApB;EACA,IAAIuI,KAAJ;;EACA,KAAK,IAAI5V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyV,IAApB,EAA0B,EAAEzV,CAA5B,EAA+B;IAC7B,MAAMuN,IAAI,GAAGmK,MAAM,CAAC1X,CAAD,CAAnB;IACA,MAAM;MAAC,CAAC+X,KAAD,GAASrC,KAAV;MAAiB,CAACuC,KAAD,GAAS/D;IAA1B,IAAmC3G,IAAzC;IACA,MAAM2K,UAAU,GAAG3K,IAAI,CAACqK,OAAL,KAAiBrK,IAAI,CAACqK,OAAL,GAAe,EAAhC,CAAnB;IACAhC,KAAK,GAAGsC,UAAU,CAACD,KAAD,CAAV,GAAoBd,gBAAgB,CAACC,MAAD,EAAShE,GAAT,EAAcsC,KAAd,CAA5C;IACAE,KAAK,CAACI,YAAD,CAAL,GAAsB9B,KAAtB;EACD;AACF;;AACD,SAASiE,eAAT,CAAyBtM,KAAzB,EAAgCmM,IAAhC,EAAsC;EACpC,MAAMI,MAAM,GAAGvM,KAAK,CAACuM,MAArB;EACA,OAAOrG,MAAM,CAACC,IAAP,CAAYoG,MAAZ,EAAoBC,MAApB,CAA2BjF,GAAG,IAAIgF,MAAM,CAAChF,GAAD,CAAN,CAAY4E,IAAZ,KAAqBA,IAAvD,EAA6DM,KAA7D,EAAP;AACD;;AACD,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC9C,KAAtC,EAA6C;EAC3C,OAAO3D,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAAC0G,MAAP,CAAcD,MAAd,CAAd,EACL;IACEvH,MAAM,EAAE,KADV;IAEEyH,OAAO,EAAE/M,SAFX;IAGEqK,YAAY,EAAEN,KAHhB;IAIEA,KAJF;IAKEK,IAAI,EAAE,SALR;IAME/J,IAAI,EAAE;EANR,CADK,CAAP;AAUD;;AACD,SAAS2M,iBAAT,CAA2BH,MAA3B,EAAmC9C,KAAnC,EAA0CkD,OAA1C,EAAmD;EACjD,OAAO7G,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAAC0G,MAAP,CAAcD,MAAd,CAAd,EAAqC;IAC1CvH,MAAM,EAAE,KADkC;IAE1C4H,SAAS,EAAEnD,KAF+B;IAG1CgC,MAAM,EAAE/L,SAHkC;IAI1CmN,GAAG,EAAEnN,SAJqC;IAK1CiN,OAL0C;IAM1ClD,KAN0C;IAO1CK,IAAI,EAAE,SAPoC;IAQ1C/J,IAAI,EAAE;EARoC,CAArC,CAAP;AAUD;;AACD,SAAS+M,WAAT,CAAqBxC,IAArB,EAA2BnJ,KAA3B,EAAkC;EAChCA,KAAK,GAAGA,KAAK,IAAImJ,IAAI,CAACyC,OAAtB;;EACA,KAAK,MAAMtB,MAAX,IAAqBtK,KAArB,EAA4B;IAC1B,MAAMgK,MAAM,GAAGM,MAAM,CAACE,OAAtB;;IACA,IAAI,CAACR,MAAD,IAAWA,MAAM,CAACb,IAAI,CAACuB,MAAL,CAAYlB,EAAb,CAAN,KAA2BjL,SAAtC,IAAmDyL,MAAM,CAACb,IAAI,CAACuB,MAAL,CAAYlB,EAAb,CAAN,CAAuBL,IAAI,CAACb,KAA5B,MAAuC/J,SAA9F,EAAyG;MACvG;IACD;;IACD,OAAOyL,MAAM,CAACb,IAAI,CAACuB,MAAL,CAAYlB,EAAb,CAAN,CAAuBL,IAAI,CAACb,KAA5B,CAAP;EACD;AACF;;AACD,MAAMuD,kBAAkB,GAAIlD,IAAD,IAAUA,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,MAAlE;;AACA,MAAMmD,gBAAgB,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoBA,MAAM,GAAGD,MAAH,GAAYpH,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkB+E,MAAlB,CAA/D;;AACA,MAAME,iBAAN,CAAwB;EACtBhO,WAAW,CAACQ,KAAD,EAAQmK,YAAR,EAAsB;IAC/B,KAAKnK,KAAL,GAAaA,KAAb;IACA,KAAKyN,IAAL,GAAYzN,KAAK,CAAC0N,GAAlB;IACA,KAAK7D,KAAL,GAAaM,YAAb;IACA,KAAKwD,eAAL,GAAuB,EAAvB;IACA,KAAK7B,WAAL,GAAmB,KAAK8B,OAAL,EAAnB;IACA,KAAKC,KAAL,GAAa,KAAK/B,WAAL,CAAiB3L,IAA9B;IACA,KAAKyH,OAAL,GAAe9H,SAAf;IACA,KAAKgO,QAAL,GAAgB,KAAhB;IACA,KAAKC,KAAL,GAAajO,SAAb;IACA,KAAKkO,WAAL,GAAmBlO,SAAnB;IACA,KAAKmO,cAAL,GAAsBnO,SAAtB;IACA,KAAKoO,UAAL,GAAkBpO,SAAlB;IACA,KAAKqO,UAAL,GAAkBrO,SAAlB;IACA,KAAKsO,mBAAL,GAA2B,KAA3B;IACA,KAAKC,QAAL,GAAgBvO,SAAhB;IACA,KAAKwO,UAAL;EACD;;EACDA,UAAU,GAAG;IACX,MAAMvN,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA/K,EAAE,CAACqG,SAAH;IACArG,EAAE,CAACwN,UAAH;IACA7D,IAAI,CAAC8D,QAAL,GAAgB/D,SAAS,CAACC,IAAI,CAACuB,MAAN,EAAcvB,IAAd,CAAzB;IACA3J,EAAE,CAAC0N,WAAH;EACD;;EACDC,WAAW,CAACvE,YAAD,EAAe;IACxB,KAAKN,KAAL,GAAaM,YAAb;EACD;;EACDoE,UAAU,GAAG;IACX,MAAMxN,EAAE,GAAG,IAAX;IACA,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAM0K,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAMe,OAAO,GAAG9L,EAAE,CAAC4N,UAAH,EAAhB;;IACA,MAAMC,QAAQ,GAAG,CAACzC,IAAD,EAAOlV,CAAP,EAAUE,CAAV,EAAaxD,CAAb,KAAmBwY,IAAI,KAAK,GAAT,GAAelV,CAAf,GAAmBkV,IAAI,KAAK,GAAT,GAAexY,CAAf,GAAmBwD,CAA1E;;IACA,MAAM0X,GAAG,GAAGnE,IAAI,CAACoE,OAAL,GAAepa,cAAc,CAACmY,OAAO,CAACiC,OAAT,EAAkBxC,eAAe,CAACtM,KAAD,EAAQ,GAAR,CAAjC,CAAzC;IACA,MAAM+O,GAAG,GAAGrE,IAAI,CAACsE,OAAL,GAAeta,cAAc,CAACmY,OAAO,CAACmC,OAAT,EAAkB1C,eAAe,CAACtM,KAAD,EAAQ,GAAR,CAAjC,CAAzC;IACA,MAAMiP,GAAG,GAAGvE,IAAI,CAACwE,OAAL,GAAexa,cAAc,CAACmY,OAAO,CAACqC,OAAT,EAAkB5C,eAAe,CAACtM,KAAD,EAAQ,GAAR,CAAjC,CAAzC;IACA,MAAMmP,SAAS,GAAGzE,IAAI,CAACyE,SAAvB;IACA,MAAMC,GAAG,GAAG1E,IAAI,CAAC2E,OAAL,GAAeT,QAAQ,CAACO,SAAD,EAAYN,GAAZ,EAAiBE,GAAjB,EAAsBE,GAAtB,CAAnC;IACA,MAAMK,GAAG,GAAG5E,IAAI,CAAC6E,OAAL,GAAeX,QAAQ,CAACO,SAAD,EAAYJ,GAAZ,EAAiBF,GAAjB,EAAsBI,GAAtB,CAAnC;IACAvE,IAAI,CAACzB,MAAL,GAAclI,EAAE,CAACyO,aAAH,CAAiBX,GAAjB,CAAd;IACAnE,IAAI,CAACxB,MAAL,GAAcnI,EAAE,CAACyO,aAAH,CAAiBT,GAAjB,CAAd;IACArE,IAAI,CAAC+E,MAAL,GAAc1O,EAAE,CAACyO,aAAH,CAAiBP,GAAjB,CAAd;IACAvE,IAAI,CAACsB,MAAL,GAAcjL,EAAE,CAACyO,aAAH,CAAiBJ,GAAjB,CAAd;IACA1E,IAAI,CAACuB,MAAL,GAAclL,EAAE,CAACyO,aAAH,CAAiBF,GAAjB,CAAd;EACD;;EACDX,UAAU,GAAG;IACX,OAAO,KAAK3O,KAAL,CAAWsK,IAAX,CAAgBoF,QAAhB,CAAyB,KAAK7F,KAA9B,CAAP;EACD;;EACD+D,OAAO,GAAG;IACR,OAAO,KAAK5N,KAAL,CAAW2P,cAAX,CAA0B,KAAK9F,KAA/B,CAAP;EACD;;EACD2F,aAAa,CAACI,OAAD,EAAU;IACrB,OAAO,KAAK5P,KAAL,CAAWuM,MAAX,CAAkBqD,OAAlB,CAAP;EACD;;EACDC,cAAc,CAAClH,KAAD,EAAQ;IACpB,MAAM+B,IAAI,GAAG,KAAKoB,WAAlB;IACA,OAAOnD,KAAK,KAAK+B,IAAI,CAACsB,MAAf,GACHtB,IAAI,CAACuB,MADF,GAEHvB,IAAI,CAACsB,MAFT;EAGD;;EACD8D,KAAK,GAAG;IACN,KAAK5O,OAAL,CAAa,OAAb;EACD;;EACD6O,QAAQ,GAAG;IACT,MAAMrF,IAAI,GAAG,KAAKoB,WAAlB;;IACA,IAAI,KAAKiC,KAAT,EAAgB;MACdnZ,mBAAmB,CAAC,KAAKmZ,KAAN,EAAa,IAAb,CAAnB;IACD;;IACD,IAAIrD,IAAI,CAAC8D,QAAT,EAAmB;MACjBtB,WAAW,CAACxC,IAAD,CAAX;IACD;EACF;;EACDsF,UAAU,GAAG;IACX,MAAMjP,EAAE,GAAG,IAAX;IACA,MAAM8L,OAAO,GAAG9L,EAAE,CAAC4N,UAAH,EAAhB;IACA,MAAMrE,IAAI,GAAGuC,OAAO,CAACvC,IAAR,KAAiBuC,OAAO,CAACvC,IAAR,GAAe,EAAhC,CAAb;;IACA,IAAIlW,QAAQ,CAACkW,IAAD,CAAZ,EAAoB;MAClBvJ,EAAE,CAACgN,KAAH,GAAW1D,wBAAwB,CAACC,IAAD,CAAnC;IACD,CAFD,MAEO,IAAIvJ,EAAE,CAACgN,KAAH,KAAazD,IAAjB,EAAuB;MAC5B,IAAIvJ,EAAE,CAACgN,KAAP,EAAc;QACZnZ,mBAAmB,CAACmM,EAAE,CAACgN,KAAJ,EAAWhN,EAAX,CAAnB;QACAmM,WAAW,CAACnM,EAAE,CAAC+K,WAAJ,CAAX;MACD;;MACD,IAAIxB,IAAI,IAAIpE,MAAM,CAAC+J,YAAP,CAAoB3F,IAApB,CAAZ,EAAuC;QACrCxV,iBAAiB,CAACwV,IAAD,EAAOvJ,EAAP,CAAjB;MACD;;MACDA,EAAE,CAACgN,KAAH,GAAWzD,IAAX;IACD;EACF;;EACDmE,WAAW,GAAG;IACZ,MAAM1N,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;;IACA/K,EAAE,CAACiP,UAAH;;IACA,IAAIjP,EAAE,CAACmP,kBAAP,EAA2B;MACzBxF,IAAI,CAACmC,OAAL,GAAe,IAAI9L,EAAE,CAACmP,kBAAP,EAAf;IACD;EACF;;EACDC,qBAAqB,CAACC,gBAAD,EAAmB;IACtC,MAAMrP,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAMe,OAAO,GAAG9L,EAAE,CAAC4N,UAAH,EAAhB;IACA,IAAI0B,YAAY,GAAG,KAAnB;;IACAtP,EAAE,CAACiP,UAAH;;IACAtF,IAAI,CAAC8D,QAAL,GAAgB/D,SAAS,CAACC,IAAI,CAACuB,MAAN,EAAcvB,IAAd,CAAzB;;IACA,IAAIA,IAAI,CAACX,KAAL,KAAe8C,OAAO,CAAC9C,KAA3B,EAAkC;MAChCsG,YAAY,GAAG,IAAf;MACAnD,WAAW,CAACxC,IAAD,CAAX;MACAA,IAAI,CAACX,KAAL,GAAa8C,OAAO,CAAC9C,KAArB;IACD;;IACDhJ,EAAE,CAACuP,eAAH,CAAmBF,gBAAnB;;IACA,IAAIC,YAAJ,EAAkB;MAChB1E,YAAY,CAAC5K,EAAD,EAAK2J,IAAI,CAACyC,OAAV,CAAZ;IACD;EACF;;EACD/F,SAAS,GAAG;IACV,MAAMrG,EAAE,GAAG,IAAX;IACA,MAAMkG,MAAM,GAAGlG,EAAE,CAACf,KAAH,CAASiH,MAAxB;IACA,MAAMsJ,SAAS,GAAGtJ,MAAM,CAACuJ,gBAAP,CAAwBzP,EAAE,CAAC8M,KAA3B,CAAlB;IACA,MAAM4C,MAAM,GAAGxJ,MAAM,CAACyJ,eAAP,CAAuB3P,EAAE,CAAC4N,UAAH,EAAvB,EAAwC4B,SAAxC,EAAmD,IAAnD,CAAf;IACAxP,EAAE,CAAC6G,OAAH,GAAaX,MAAM,CAAC0J,cAAP,CAAsBF,MAAtB,EAA8B1P,EAAE,CAAC6P,UAAH,EAA9B,CAAb;IACA7P,EAAE,CAAC+M,QAAH,GAAc/M,EAAE,CAAC6G,OAAH,CAAWiJ,OAAzB;EACD;;EACDC,KAAK,CAACjQ,KAAD,EAAQkQ,KAAR,EAAe;IAClB,MAAMhQ,EAAE,GAAG,IAAX;IACA,MAAM;MAAC+K,WAAW,EAAEpB,IAAd;MAAoBqD,KAAK,EAAEzD;IAA3B,IAAmCvJ,EAAzC;IACA,MAAM;MAACiL,MAAD;MAASwC;IAAT,IAAqB9D,IAA3B;IACA,MAAMwB,KAAK,GAAGF,MAAM,CAACG,IAArB;IACA,IAAI6E,MAAM,GAAGnQ,KAAK,KAAK,CAAV,IAAekQ,KAAK,KAAKzG,IAAI,CAAC9I,MAA9B,GAAuC,IAAvC,GAA8CkJ,IAAI,CAACuG,OAAhE;IACA,IAAIC,IAAI,GAAGrQ,KAAK,GAAG,CAAR,IAAa6J,IAAI,CAACyC,OAAL,CAAatM,KAAK,GAAG,CAArB,CAAxB;IACA,IAAI1M,CAAJ,EAAO0O,GAAP,EAAYgJ,MAAZ;;IACA,IAAI9K,EAAE,CAAC+M,QAAH,KAAgB,KAApB,EAA2B;MACzBpD,IAAI,CAACyC,OAAL,GAAe7C,IAAf;MACAI,IAAI,CAACuG,OAAL,GAAe,IAAf;IACD,CAHD,MAGO;MACL,IAAI3c,OAAO,CAACgW,IAAI,CAACzJ,KAAD,CAAL,CAAX,EAA0B;QACxBgL,MAAM,GAAG9K,EAAE,CAACoQ,cAAH,CAAkBzG,IAAlB,EAAwBJ,IAAxB,EAA8BzJ,KAA9B,EAAqCkQ,KAArC,CAAT;MACD,CAFD,MAEO,IAAI3c,QAAQ,CAACkW,IAAI,CAACzJ,KAAD,CAAL,CAAZ,EAA2B;QAChCgL,MAAM,GAAG9K,EAAE,CAACqQ,eAAH,CAAmB1G,IAAnB,EAAyBJ,IAAzB,EAA+BzJ,KAA/B,EAAsCkQ,KAAtC,CAAT;MACD,CAFM,MAEA;QACLlF,MAAM,GAAG9K,EAAE,CAACsQ,kBAAH,CAAsB3G,IAAtB,EAA4BJ,IAA5B,EAAkCzJ,KAAlC,EAAyCkQ,KAAzC,CAAT;MACD;;MACD,MAAMO,0BAA0B,GAAG,MAAMzO,GAAG,CAACqJ,KAAD,CAAH,KAAe,IAAf,IAAwBgF,IAAI,IAAIrO,GAAG,CAACqJ,KAAD,CAAH,GAAagF,IAAI,CAAChF,KAAD,CAA1F;;MACA,KAAK/X,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,KAAhB,EAAuB,EAAE5c,CAAzB,EAA4B;QAC1BuW,IAAI,CAACyC,OAAL,CAAahZ,CAAC,GAAG0M,KAAjB,IAA0BgC,GAAG,GAAGgJ,MAAM,CAAC1X,CAAD,CAAtC;;QACA,IAAI6c,MAAJ,EAAY;UACV,IAAIM,0BAA0B,EAA9B,EAAkC;YAChCN,MAAM,GAAG,KAAT;UACD;;UACDE,IAAI,GAAGrO,GAAP;QACD;MACF;;MACD6H,IAAI,CAACuG,OAAL,GAAeD,MAAf;IACD;;IACD,IAAIxC,QAAJ,EAAc;MACZ7C,YAAY,CAAC5K,EAAD,EAAK8K,MAAL,CAAZ;IACD;EACF;;EACDwF,kBAAkB,CAAC3G,IAAD,EAAOJ,IAAP,EAAazJ,KAAb,EAAoBkQ,KAApB,EAA2B;IAC3C,MAAM;MAAC/E,MAAD;MAASC;IAAT,IAAmBvB,IAAzB;IACA,MAAMwB,KAAK,GAAGF,MAAM,CAACG,IAArB;IACA,MAAMC,KAAK,GAAGH,MAAM,CAACE,IAArB;IACA,MAAMoF,MAAM,GAAGvF,MAAM,CAACwF,SAAP,EAAf;IACA,MAAMC,WAAW,GAAGzF,MAAM,KAAKC,MAA/B;IACA,MAAMJ,MAAM,GAAG,IAAIrB,KAAJ,CAAUuG,KAAV,CAAf;IACA,IAAI5c,CAAJ,EAAOyV,IAAP,EAAaC,KAAb;;IACA,KAAK1V,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGmH,KAAnB,EAA0B5c,CAAC,GAAGyV,IAA9B,EAAoC,EAAEzV,CAAtC,EAAyC;MACvC0V,KAAK,GAAG1V,CAAC,GAAG0M,KAAZ;MACAgL,MAAM,CAAC1X,CAAD,CAAN,GAAY;QACV,CAAC+X,KAAD,GAASuF,WAAW,IAAIzF,MAAM,CAAC8E,KAAP,CAAaS,MAAM,CAAC1H,KAAD,CAAnB,EAA4BA,KAA5B,CADd;QAEV,CAACuC,KAAD,GAASH,MAAM,CAAC6E,KAAP,CAAaxG,IAAI,CAACT,KAAD,CAAjB,EAA0BA,KAA1B;MAFC,CAAZ;IAID;;IACD,OAAOgC,MAAP;EACD;;EACDsF,cAAc,CAACzG,IAAD,EAAOJ,IAAP,EAAazJ,KAAb,EAAoBkQ,KAApB,EAA2B;IACvC,MAAM;MAAC9H,MAAD;MAASC;IAAT,IAAmBwB,IAAzB;IACA,MAAMmB,MAAM,GAAG,IAAIrB,KAAJ,CAAUuG,KAAV,CAAf;IACA,IAAI5c,CAAJ,EAAOyV,IAAP,EAAaC,KAAb,EAAoBnI,IAApB;;IACA,KAAKvN,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGmH,KAAnB,EAA0B5c,CAAC,GAAGyV,IAA9B,EAAoC,EAAEzV,CAAtC,EAAyC;MACvC0V,KAAK,GAAG1V,CAAC,GAAG0M,KAAZ;MACAa,IAAI,GAAG4I,IAAI,CAACT,KAAD,CAAX;MACAgC,MAAM,CAAC1X,CAAD,CAAN,GAAY;QACV8C,CAAC,EAAEgS,MAAM,CAAC6H,KAAP,CAAapP,IAAI,CAAC,CAAD,CAAjB,EAAsBmI,KAAtB,CADO;QAEV1S,CAAC,EAAE+R,MAAM,CAAC4H,KAAP,CAAapP,IAAI,CAAC,CAAD,CAAjB,EAAsBmI,KAAtB;MAFO,CAAZ;IAID;;IACD,OAAOgC,MAAP;EACD;;EACDuF,eAAe,CAAC1G,IAAD,EAAOJ,IAAP,EAAazJ,KAAb,EAAoBkQ,KAApB,EAA2B;IACxC,MAAM;MAAC9H,MAAD;MAASC;IAAT,IAAmBwB,IAAzB;IACA,MAAM;MAACgH,QAAQ,GAAG,GAAZ;MAAiBC,QAAQ,GAAG;IAA5B,IAAmC,KAAK7D,QAA9C;IACA,MAAMjC,MAAM,GAAG,IAAIrB,KAAJ,CAAUuG,KAAV,CAAf;IACA,IAAI5c,CAAJ,EAAOyV,IAAP,EAAaC,KAAb,EAAoBnI,IAApB;;IACA,KAAKvN,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGmH,KAAnB,EAA0B5c,CAAC,GAAGyV,IAA9B,EAAoC,EAAEzV,CAAtC,EAAyC;MACvC0V,KAAK,GAAG1V,CAAC,GAAG0M,KAAZ;MACAa,IAAI,GAAG4I,IAAI,CAACT,KAAD,CAAX;MACAgC,MAAM,CAAC1X,CAAD,CAAN,GAAY;QACV8C,CAAC,EAAEgS,MAAM,CAAC6H,KAAP,CAAa9b,gBAAgB,CAAC0M,IAAD,EAAOgQ,QAAP,CAA7B,EAA+C7H,KAA/C,CADO;QAEV1S,CAAC,EAAE+R,MAAM,CAAC4H,KAAP,CAAa9b,gBAAgB,CAAC0M,IAAD,EAAOiQ,QAAP,CAA7B,EAA+C9H,KAA/C;MAFO,CAAZ;IAID;;IACD,OAAOgC,MAAP;EACD;;EACD+F,SAAS,CAAC/H,KAAD,EAAQ;IACf,OAAO,KAAKiC,WAAL,CAAiBqB,OAAjB,CAAyBtD,KAAzB,CAAP;EACD;;EACDgI,cAAc,CAAChI,KAAD,EAAQ;IACpB,OAAO,KAAKiC,WAAL,CAAiBxB,IAAjB,CAAsBT,KAAtB,CAAP;EACD;;EACDC,UAAU,CAACnB,KAAD,EAAQkD,MAAR,EAAgB3B,IAAhB,EAAsB;IAC9B,MAAMlK,KAAK,GAAG,KAAKA,KAAnB;IACA,MAAM0K,IAAI,GAAG,KAAKoB,WAAlB;IACA,MAAMzD,KAAK,GAAGwD,MAAM,CAAClD,KAAK,CAACwD,IAAP,CAApB;IACA,MAAMpC,KAAK,GAAG;MACZ5D,IAAI,EAAEqD,uBAAuB,CAACxJ,KAAD,EAAQ,IAAR,CADjB;MAEZ0H,MAAM,EAAEmE,MAAM,CAACE,OAAP,CAAepD,KAAK,CAACwD,IAArB;IAFI,CAAd;IAIA,OAAOrC,UAAU,CAACC,KAAD,EAAQ1B,KAAR,EAAeqC,IAAI,CAACb,KAApB,EAA2B;MAACK;IAAD,CAA3B,CAAjB;EACD;;EACD4H,qBAAqB,CAACC,KAAD,EAAQpJ,KAAR,EAAekD,MAAf,EAAuB9B,KAAvB,EAA8B;IACjD,MAAMiI,WAAW,GAAGnG,MAAM,CAAClD,KAAK,CAACwD,IAAP,CAA1B;IACA,IAAI9D,KAAK,GAAG2J,WAAW,KAAK,IAAhB,GAAuBC,GAAvB,GAA6BD,WAAzC;IACA,MAAMtK,MAAM,GAAGqC,KAAK,IAAI8B,MAAM,CAACE,OAAP,CAAepD,KAAK,CAACwD,IAArB,CAAxB;;IACA,IAAIpC,KAAK,IAAIrC,MAAb,EAAqB;MACnBqC,KAAK,CAACrC,MAAN,GAAeA,MAAf;MACAqK,KAAK,CAACnR,GAAN,GAAYD,IAAI,CAACC,GAAL,CAASmR,KAAK,CAACnR,GAAf,EAAoByH,KAApB,CAAZ;MACA0J,KAAK,CAACjP,GAAN,GAAYnC,IAAI,CAACmC,GAAL,CAASiP,KAAK,CAACjP,GAAf,EAAoBuF,KAApB,CAAZ;MACAA,KAAK,GAAGyB,UAAU,CAACC,KAAD,EAAQiI,WAAR,EAAqB,KAAKlG,WAAL,CAAiBjC,KAAtC,EAA6C;QAACpB,GAAG,EAAE;MAAN,CAA7C,CAAlB;IACD;;IACDsJ,KAAK,CAACnR,GAAN,GAAYD,IAAI,CAACC,GAAL,CAASmR,KAAK,CAACnR,GAAf,EAAoByH,KAApB,CAAZ;IACA0J,KAAK,CAACjP,GAAN,GAAYnC,IAAI,CAACmC,GAAL,CAASiP,KAAK,CAACjP,GAAf,EAAoBuF,KAApB,CAAZ;EACD;;EACD6J,SAAS,CAACvJ,KAAD,EAAQwJ,QAAR,EAAkB;IACzB,MAAMpR,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAMqB,OAAO,GAAGzC,IAAI,CAACyC,OAArB;IACA,MAAM6D,MAAM,GAAGtG,IAAI,CAACuG,OAAL,IAAgBtI,KAAK,KAAK+B,IAAI,CAACsB,MAA9C;IACA,MAAMpC,IAAI,GAAGuD,OAAO,CAAC3L,MAArB;;IACA,MAAM4Q,UAAU,GAAGrR,EAAE,CAAC8O,cAAH,CAAkBlH,KAAlB,CAAnB;;IACA,MAAMoB,KAAK,GAAGoI,QAAQ,IAAIzH,IAAI,CAAC8D,QAAjB,IAA6B;MAACrI,IAAI,EAAEqD,uBAAuB,CAACzI,EAAE,CAACf,KAAJ,EAAW,IAAX,CAA9B;MAAgD0H,MAAM,EAAE;IAAxD,CAA3C;IACA,MAAMqK,KAAK,GAAG;MAACnR,GAAG,EAAEuK,MAAM,CAACE,iBAAb;MAAgCvI,GAAG,EAAEqI,MAAM,CAACC;IAA5C,CAAd;IACA,MAAM;MAACxK,GAAG,EAAEyR,QAAN;MAAgBvP,GAAG,EAAEwP;IAArB,IAAiCtH,aAAa,CAACoH,UAAD,CAApD;IACA,IAAIje,CAAJ,EAAOkU,KAAP,EAAcwD,MAAd,EAAsBzB,UAAtB;;IACA,SAASmI,KAAT,GAAiB;MACf1G,MAAM,GAAGsB,OAAO,CAAChZ,CAAD,CAAhB;MACAkU,KAAK,GAAGwD,MAAM,CAAClD,KAAK,CAACwD,IAAP,CAAd;MACA/B,UAAU,GAAGyB,MAAM,CAACuG,UAAU,CAACjG,IAAZ,CAAnB;MACA,OAAO,CAACjX,cAAc,CAACmT,KAAD,CAAf,IAA0BgK,QAAQ,GAAGjI,UAArC,IAAmDkI,QAAQ,GAAGlI,UAArE;IACD;;IACD,KAAKjW,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyV,IAAhB,EAAsB,EAAEzV,CAAxB,EAA2B;MACzB,IAAIoe,KAAK,EAAT,EAAa;QACX;MACD;;MACDxR,EAAE,CAAC+Q,qBAAH,CAAyBC,KAAzB,EAAgCpJ,KAAhC,EAAuCkD,MAAvC,EAA+C9B,KAA/C;;MACA,IAAIiH,MAAJ,EAAY;QACV;MACD;IACF;;IACD,IAAIA,MAAJ,EAAY;MACV,KAAK7c,CAAC,GAAGyV,IAAI,GAAG,CAAhB,EAAmBzV,CAAC,IAAI,CAAxB,EAA2B,EAAEA,CAA7B,EAAgC;QAC9B,IAAIoe,KAAK,EAAT,EAAa;UACX;QACD;;QACDxR,EAAE,CAAC+Q,qBAAH,CAAyBC,KAAzB,EAAgCpJ,KAAhC,EAAuCkD,MAAvC,EAA+C9B,KAA/C;QACA;MACD;IACF;;IACD,OAAOgI,KAAP;EACD;;EACDS,kBAAkB,CAAC7J,KAAD,EAAQ;IACxB,MAAMkD,MAAM,GAAG,KAAKC,WAAL,CAAiBqB,OAAhC;IACA,MAAMzF,MAAM,GAAG,EAAf;IACA,IAAIvT,CAAJ,EAAOyV,IAAP,EAAavB,KAAb;;IACA,KAAKlU,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGiC,MAAM,CAACrK,MAA1B,EAAkCrN,CAAC,GAAGyV,IAAtC,EAA4C,EAAEzV,CAA9C,EAAiD;MAC/CkU,KAAK,GAAGwD,MAAM,CAAC1X,CAAD,CAAN,CAAUwU,KAAK,CAACwD,IAAhB,CAAR;;MACA,IAAIjX,cAAc,CAACmT,KAAD,CAAlB,EAA2B;QACzBX,MAAM,CAAClF,IAAP,CAAY6F,KAAZ;MACD;IACF;;IACD,OAAOX,MAAP;EACD;;EACD+K,cAAc,GAAG;IACf,OAAO,KAAP;EACD;;EACDC,gBAAgB,CAAC7I,KAAD,EAAQ;IACtB,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAME,MAAM,GAAGtB,IAAI,CAACsB,MAApB;IACA,MAAMC,MAAM,GAAGvB,IAAI,CAACuB,MAApB;IACA,MAAMJ,MAAM,GAAG9K,EAAE,CAAC6Q,SAAH,CAAa/H,KAAb,CAAf;IACA,OAAO;MACL8I,KAAK,EAAE3G,MAAM,GAAG,KAAKA,MAAM,CAAC4G,gBAAP,CAAwB/G,MAAM,CAACG,MAAM,CAACG,IAAR,CAA9B,CAAR,GAAuD,EAD/D;MAEL9D,KAAK,EAAE4D,MAAM,GAAG,KAAKA,MAAM,CAAC2G,gBAAP,CAAwB/G,MAAM,CAACI,MAAM,CAACE,IAAR,CAA9B,CAAR,GAAuD;IAF/D,CAAP;EAID;;EACDjL,OAAO,CAACgJ,IAAD,EAAO;IACZ,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA/K,EAAE,CAACqG,SAAH;IACArG,EAAE,CAAC4M,eAAH,GAAqB,EAArB;IACA5M,EAAE,CAACsE,MAAH,CAAU6E,IAAI,IAAI,SAAlB;IACAQ,IAAI,CAACmI,KAAL,GAAatJ,MAAM,CAAC7U,cAAc,CAACqM,EAAE,CAAC6G,OAAH,CAAWkL,IAAZ,EAAkB9J,WAAW,CAAC0B,IAAI,CAACzB,MAAN,EAAcyB,IAAI,CAACxB,MAAnB,EAA2BnI,EAAE,CAAC0R,cAAH,EAA3B,CAA7B,CAAf,CAAnB;EACD;;EACDpN,MAAM,CAAC6E,IAAD,EAAO,CAAE;;EACfzI,IAAI,GAAG;IACL,MAAMV,EAAE,GAAG,IAAX;IACA,MAAM2M,GAAG,GAAG3M,EAAE,CAAC0M,IAAf;IACA,MAAMzN,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAM0K,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAMiH,QAAQ,GAAGrI,IAAI,CAACJ,IAAL,IAAa,EAA9B;IACA,MAAM0I,IAAI,GAAGhT,KAAK,CAACiT,SAAnB;IACA,MAAM7N,MAAM,GAAG,EAAf;IACA,MAAMvE,KAAK,GAAGE,EAAE,CAACmN,UAAH,IAAiB,CAA/B;IACA,MAAM6C,KAAK,GAAGhQ,EAAE,CAACoN,UAAH,IAAkB4E,QAAQ,CAACvR,MAAT,GAAkBX,KAAlD;IACA,IAAI1M,CAAJ;;IACA,IAAIuW,IAAI,CAACmC,OAAT,EAAkB;MAChBnC,IAAI,CAACmC,OAAL,CAAapL,IAAb,CAAkBiM,GAAlB,EAAuBsF,IAAvB,EAA6BnS,KAA7B,EAAoCkQ,KAApC;IACD;;IACD,KAAK5c,CAAC,GAAG0M,KAAT,EAAgB1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAA5B,EAAmC,EAAE5c,CAArC,EAAwC;MACtC,MAAM4Y,OAAO,GAAGgG,QAAQ,CAAC5e,CAAD,CAAxB;;MACA,IAAI4Y,OAAO,CAAC3H,MAAZ,EAAoB;QAClBA,MAAM,CAAC5C,IAAP,CAAYuK,OAAZ;MACD,CAFD,MAEO;QACLA,OAAO,CAACtL,IAAR,CAAaiM,GAAb,EAAkBsF,IAAlB;MACD;IACF;;IACD,KAAK7e,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiR,MAAM,CAAC5D,MAAvB,EAA+B,EAAErN,CAAjC,EAAoC;MAClCiR,MAAM,CAACjR,CAAD,CAAN,CAAUsN,IAAV,CAAeiM,GAAf,EAAoBsF,IAApB;IACD;EACF;;EACDE,QAAQ,CAACrJ,KAAD,EAAQzE,MAAR,EAAgB;IACtB,MAAM8E,IAAI,GAAG9E,MAAM,GAAG,QAAH,GAAc,SAAjC;IACA,OAAOyE,KAAK,KAAK/J,SAAV,IAAuB,KAAKgM,WAAL,CAAiBe,OAAxC,GACH,KAAKsG,4BAAL,CAAkCjJ,IAAlC,CADG,GAEH,KAAKkJ,yBAAL,CAA+BvJ,KAAK,IAAI,CAAxC,EAA2CK,IAA3C,CAFJ;EAGD;;EACD0G,UAAU,CAAC/G,KAAD,EAAQzE,MAAR,EAAgB8E,IAAhB,EAAsB;IAC9B,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM8L,OAAO,GAAG9L,EAAE,CAAC4N,UAAH,EAAhB;IACA,IAAI0E,OAAJ;;IACA,IAAIxJ,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG9I,EAAE,CAAC+K,WAAH,CAAexB,IAAf,CAAoB9I,MAA9C,EAAsD;MACpD,MAAMuL,OAAO,GAAGhM,EAAE,CAAC+K,WAAH,CAAexB,IAAf,CAAoBT,KAApB,CAAhB;MACAwJ,OAAO,GAAGtG,OAAO,CAACsB,QAAR,KACPtB,OAAO,CAACsB,QAAR,GAAmBvB,iBAAiB,CAAC/L,EAAE,CAAC6P,UAAH,EAAD,EAAkB/G,KAAlB,EAAyBkD,OAAzB,CAD7B,CAAV;MAEAsG,OAAO,CAACxH,MAAR,GAAiB9K,EAAE,CAAC6Q,SAAH,CAAa/H,KAAb,CAAjB;MACAwJ,OAAO,CAACpG,GAAR,GAAcJ,OAAO,CAACvC,IAAR,CAAaT,KAAb,CAAd;IACD,CAND,MAMO;MACLwJ,OAAO,GAAGtS,EAAE,CAACsN,QAAH,KACPtN,EAAE,CAACsN,QAAH,GAAc3B,oBAAoB,CAAC3L,EAAE,CAACf,KAAH,CAAS4Q,UAAT,EAAD,EAAwB7P,EAAE,CAAC8I,KAA3B,CAD3B,CAAV;MAEAwJ,OAAO,CAACxG,OAAR,GAAkBA,OAAlB;IACD;;IACDwG,OAAO,CAACjO,MAAR,GAAiB,CAAC,CAACA,MAAnB;IACAiO,OAAO,CAACnJ,IAAR,GAAeA,IAAf;IACA,OAAOmJ,OAAP;EACD;;EACDF,4BAA4B,CAACjJ,IAAD,EAAO;IACjC,OAAO,KAAKoJ,sBAAL,CAA4B,KAAKpD,kBAAL,CAAwBnF,EAApD,EAAwDb,IAAxD,CAAP;EACD;;EACDkJ,yBAAyB,CAACvJ,KAAD,EAAQK,IAAR,EAAc;IACrC,OAAO,KAAKoJ,sBAAL,CAA4B,KAAKC,eAAL,CAAqBxI,EAAjD,EAAqDb,IAArD,EAA2DL,KAA3D,CAAP;EACD;;EACDyJ,sBAAsB,CAACE,WAAD,EAAuC;IAAA,IAAzBtJ,IAAyB,uEAAlB,SAAkB;IAAA,IAAPL,KAAO;IAC3D,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAMqE,MAAM,GAAG8E,IAAI,KAAK,QAAxB;IACA,MAAMuJ,KAAK,GAAG1S,EAAE,CAAC4M,eAAjB;IACA,MAAM+F,QAAQ,GAAGF,WAAW,GAAG,GAAd,GAAoBtJ,IAArC;IACA,MAAMoD,MAAM,GAAGmG,KAAK,CAACC,QAAD,CAApB;IACA,MAAMC,OAAO,GAAG5S,EAAE,CAACqN,mBAAH,IAA0BhZ,OAAO,CAACyU,KAAD,CAAjD;;IACA,IAAIyD,MAAJ,EAAY;MACV,OAAOD,gBAAgB,CAACC,MAAD,EAASqG,OAAT,CAAvB;IACD;;IACD,MAAM1M,MAAM,GAAGlG,EAAE,CAACf,KAAH,CAASiH,MAAxB;IACA,MAAMsJ,SAAS,GAAGtJ,MAAM,CAAC2M,uBAAP,CAA+B7S,EAAE,CAAC8M,KAAlC,EAAyC2F,WAAzC,CAAlB;IACA,MAAMK,QAAQ,GAAGzO,MAAM,GAAG,CAAE,GAAEoO,WAAY,OAAhB,EAAwB,OAAxB,EAAiCA,WAAjC,EAA8C,EAA9C,CAAH,GAAuD,CAACA,WAAD,EAAc,EAAd,CAA9E;IACA,MAAM/C,MAAM,GAAGxJ,MAAM,CAACyJ,eAAP,CAAuB3P,EAAE,CAAC4N,UAAH,EAAvB,EAAwC4B,SAAxC,CAAf;IACA,MAAMuD,KAAK,GAAG5N,MAAM,CAACC,IAAP,CAAY3R,QAAQ,CAACue,QAAT,CAAkBS,WAAlB,CAAZ,CAAd;;IACA,MAAMH,OAAO,GAAG,MAAMtS,EAAE,CAAC6P,UAAH,CAAc/G,KAAd,EAAqBzE,MAArB,CAAtB;;IACA,MAAMsC,MAAM,GAAGT,MAAM,CAAC8M,mBAAP,CAA2BtD,MAA3B,EAAmCqD,KAAnC,EAA0CT,OAA1C,EAAmDQ,QAAnD,CAAf;;IACA,IAAInM,MAAM,CAACK,OAAX,EAAoB;MAClBL,MAAM,CAACK,OAAP,GAAiB4L,OAAjB;MACAF,KAAK,CAACC,QAAD,CAAL,GAAkBxN,MAAM,CAAC8N,MAAP,CAAc3G,gBAAgB,CAAC3F,MAAD,EAASiM,OAAT,CAA9B,CAAlB;IACD;;IACD,OAAOjM,MAAP;EACD;;EACDuM,kBAAkB,CAACpK,KAAD,EAAQqK,UAAR,EAAoB9O,MAApB,EAA4B;IAC5C,MAAMrE,EAAE,GAAG,IAAX;IACA,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAMyT,KAAK,GAAG1S,EAAE,CAAC4M,eAAjB;IACA,MAAM+F,QAAQ,GAAI,aAAYQ,UAAW,EAAzC;IACA,MAAM5G,MAAM,GAAGmG,KAAK,CAACC,QAAD,CAApB;;IACA,IAAIpG,MAAJ,EAAY;MACV,OAAOA,MAAP;IACD;;IACD,IAAI1F,OAAJ;;IACA,IAAI5H,KAAK,CAAC4H,OAAN,CAAcxB,SAAd,KAA4B,KAAhC,EAAuC;MACrC,MAAMa,MAAM,GAAGlG,EAAE,CAACf,KAAH,CAASiH,MAAxB;MACA,MAAMsJ,SAAS,GAAGtJ,MAAM,CAACkN,yBAAP,CAAiCpT,EAAE,CAAC8M,KAApC,EAA2CqG,UAA3C,CAAlB;MACA,MAAMzD,MAAM,GAAGxJ,MAAM,CAACyJ,eAAP,CAAuB3P,EAAE,CAAC4N,UAAH,EAAvB,EAAwC4B,SAAxC,CAAf;MACA3I,OAAO,GAAGX,MAAM,CAAC0J,cAAP,CAAsBF,MAAtB,EAA8B1P,EAAE,CAAC6P,UAAH,CAAc/G,KAAd,EAAqBzE,MAArB,EAA6B8O,UAA7B,CAA9B,CAAV;IACD;;IACD,MAAMrN,UAAU,GAAG,IAAIG,UAAJ,CAAehH,KAAf,EAAsB4H,OAAO,IAAIA,OAAO,CAACf,UAAzC,CAAnB;;IACA,IAAIe,OAAO,IAAIA,OAAO,CAACwM,UAAvB,EAAmC;MACjCX,KAAK,CAACC,QAAD,CAAL,GAAkBxN,MAAM,CAAC8N,MAAP,CAAcnN,UAAd,CAAlB;IACD;;IACD,OAAOA,UAAP;EACD;;EACDwN,gBAAgB,CAACzM,OAAD,EAAU;IACxB,IAAI,CAACA,OAAO,CAACG,OAAb,EAAsB;MACpB;IACD;;IACD,OAAO,KAAKkG,cAAL,KAAwB,KAAKA,cAAL,GAAsB/H,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkBX,OAAlB,CAA9C,CAAP;EACD;;EACD0M,cAAc,CAACpK,IAAD,EAAOqK,aAAP,EAAsB;IAClC,OAAO,CAACA,aAAD,IAAkBnH,kBAAkB,CAAClD,IAAD,CAApC,IAA8C,KAAKlK,KAAL,CAAWwU,mBAAhE;EACD;;EACDC,aAAa,CAAC1H,OAAD,EAAUlD,KAAV,EAAiBnD,UAAjB,EAA6BwD,IAA7B,EAAmC;IAC9C,IAAIkD,kBAAkB,CAAClD,IAAD,CAAtB,EAA8B;MAC5BhE,MAAM,CAACqC,MAAP,CAAcwE,OAAd,EAAuBrG,UAAvB;IACD,CAFD,MAEO;MACL,KAAKuN,kBAAL,CAAwBpK,KAAxB,EAA+BK,IAA/B,EAAqC7E,MAArC,CAA4C0H,OAA5C,EAAqDrG,UAArD;IACD;EACF;;EACDgO,mBAAmB,CAACH,aAAD,EAAgBrK,IAAhB,EAAsBvC,UAAtB,EAAkC;IACnD,IAAI4M,aAAa,IAAI,CAACnH,kBAAkB,CAAClD,IAAD,CAAxC,EAAgD;MAC9C,KAAK+J,kBAAL,CAAwBnU,SAAxB,EAAmCoK,IAAnC,EAAyC7E,MAAzC,CAAgDkP,aAAhD,EAA+D5M,UAA/D;IACD;EACF;;EACDgN,SAAS,CAAC5H,OAAD,EAAUlD,KAAV,EAAiBK,IAAjB,EAAuB9E,MAAvB,EAA+B;IACtC2H,OAAO,CAAC3H,MAAR,GAAiBA,MAAjB;IACA,MAAMwC,OAAO,GAAG,KAAKsL,QAAL,CAAcrJ,KAAd,EAAqBzE,MAArB,CAAhB;;IACA,KAAK6O,kBAAL,CAAwBpK,KAAxB,EAA+BK,IAA/B,EAAqC9E,MAArC,EAA6CC,MAA7C,CAAoD0H,OAApD,EAA6D;MAC3DnF,OAAO,EAAG,CAACxC,MAAD,IAAW,KAAKiP,gBAAL,CAAsBzM,OAAtB,CAAZ,IAA+CA;IADG,CAA7D;EAGD;;EACDgN,gBAAgB,CAAC7H,OAAD,EAAU5C,YAAV,EAAwBN,KAAxB,EAA+B;IAC7C,KAAK8K,SAAL,CAAe5H,OAAf,EAAwBlD,KAAxB,EAA+B,QAA/B,EAAyC,KAAzC;EACD;;EACDgL,aAAa,CAAC9H,OAAD,EAAU5C,YAAV,EAAwBN,KAAxB,EAA+B;IAC1C,KAAK8K,SAAL,CAAe5H,OAAf,EAAwBlD,KAAxB,EAA+B,QAA/B,EAAyC,IAAzC;EACD;;EACDiL,wBAAwB,GAAG;IACzB,MAAM/H,OAAO,GAAG,KAAKjB,WAAL,CAAiBe,OAAjC;;IACA,IAAIE,OAAJ,EAAa;MACX,KAAK4H,SAAL,CAAe5H,OAAf,EAAwBjN,SAAxB,EAAmC,QAAnC,EAA6C,KAA7C;IACD;EACF;;EACDiV,qBAAqB,GAAG;IACtB,MAAMhI,OAAO,GAAG,KAAKjB,WAAL,CAAiBe,OAAjC;;IACA,IAAIE,OAAJ,EAAa;MACX,KAAK4H,SAAL,CAAe5H,OAAf,EAAwBjN,SAAxB,EAAmC,QAAnC,EAA6C,IAA7C;IACD;EACF;;EACDwQ,eAAe,CAACF,gBAAD,EAAmB;IAChC,MAAMrP,EAAE,GAAG,IAAX;IACA,MAAMiU,OAAO,GAAGjU,EAAE,CAAC+K,WAAH,CAAexB,IAAf,CAAoB9I,MAApC;IACA,MAAMyT,OAAO,GAAGlU,EAAE,CAACgN,KAAH,CAASvM,MAAzB;;IACA,IAAIyT,OAAO,GAAGD,OAAd,EAAuB;MACrBjU,EAAE,CAACmU,eAAH,CAAmBF,OAAnB,EAA4BC,OAAO,GAAGD,OAAtC,EAA+C5E,gBAA/C;IACD,CAFD,MAEO,IAAI6E,OAAO,GAAGD,OAAd,EAAuB;MAC5BjU,EAAE,CAACoU,eAAH,CAAmBF,OAAnB,EAA4BD,OAAO,GAAGC,OAAtC;IACD;;IACD,MAAMlE,KAAK,GAAGpQ,IAAI,CAACC,GAAL,CAASqU,OAAT,EAAkBD,OAAlB,CAAd;;IACA,IAAIjE,KAAJ,EAAW;MACThQ,EAAE,CAAC+P,KAAH,CAAS,CAAT,EAAYC,KAAZ;IACD;EACF;;EACDmE,eAAe,CAACrU,KAAD,EAAQkQ,KAAR,EAAwC;IAAA,IAAzBX,gBAAyB,uEAAN,IAAM;IACrD,MAAMrP,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAMxB,IAAI,GAAGI,IAAI,CAACJ,IAAlB;IACA,MAAMvB,GAAG,GAAGlI,KAAK,GAAGkQ,KAApB;IACA,IAAI5c,CAAJ;;IACA,MAAMihB,IAAI,GAAIC,GAAD,IAAS;MACpBA,GAAG,CAAC7T,MAAJ,IAAcuP,KAAd;;MACA,KAAK5c,CAAC,GAAGkhB,GAAG,CAAC7T,MAAJ,GAAa,CAAtB,EAAyBrN,CAAC,IAAI4U,GAA9B,EAAmC5U,CAAC,EAApC,EAAwC;QACtCkhB,GAAG,CAAClhB,CAAD,CAAH,GAASkhB,GAAG,CAAClhB,CAAC,GAAG4c,KAAL,CAAZ;MACD;IACF,CALD;;IAMAqE,IAAI,CAAC9K,IAAD,CAAJ;;IACA,KAAKnW,CAAC,GAAG0M,KAAT,EAAgB1M,CAAC,GAAG4U,GAApB,EAAyB,EAAE5U,CAA3B,EAA8B;MAC5BmW,IAAI,CAACnW,CAAD,CAAJ,GAAU,IAAI4M,EAAE,CAACwS,eAAP,EAAV;IACD;;IACD,IAAIxS,EAAE,CAAC+M,QAAP,EAAiB;MACfsH,IAAI,CAAC1K,IAAI,CAACyC,OAAN,CAAJ;IACD;;IACDpM,EAAE,CAAC+P,KAAH,CAASjQ,KAAT,EAAgBkQ,KAAhB;;IACA,IAAIX,gBAAJ,EAAsB;MACpBrP,EAAE,CAACuU,cAAH,CAAkBhL,IAAlB,EAAwBzJ,KAAxB,EAA+BkQ,KAA/B,EAAsC,OAAtC;IACD;EACF;;EACDuE,cAAc,CAACvI,OAAD,EAAUlM,KAAV,EAAiBkQ,KAAjB,EAAwB7G,IAAxB,EAA8B,CAAE;;EAC9CiL,eAAe,CAACtU,KAAD,EAAQkQ,KAAR,EAAe;IAC5B,MAAMhQ,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;;IACA,IAAI/K,EAAE,CAAC+M,QAAP,EAAiB;MACf,MAAMyH,OAAO,GAAG7K,IAAI,CAACyC,OAAL,CAAaqI,MAAb,CAAoB3U,KAApB,EAA2BkQ,KAA3B,CAAhB;;MACA,IAAIrG,IAAI,CAAC8D,QAAT,EAAmB;QACjBtB,WAAW,CAACxC,IAAD,EAAO6K,OAAP,CAAX;MACD;IACF;;IACD7K,IAAI,CAACJ,IAAL,CAAUkL,MAAV,CAAiB3U,KAAjB,EAAwBkQ,KAAxB;EACD;;EACD0E,WAAW,GAAG;IACZ,MAAM1E,KAAK,GAAG2E,SAAS,CAAClU,MAAxB;;IACA,KAAK0T,eAAL,CAAqB,KAAKvG,UAAL,GAAkBrE,IAAlB,CAAuB9I,MAAvB,GAAgCuP,KAArD,EAA4DA,KAA5D;EACD;;EACD4E,UAAU,GAAG;IACX,KAAKR,eAAL,CAAqB,KAAKrJ,WAAL,CAAiBxB,IAAjB,CAAsB9I,MAAtB,GAA+B,CAApD,EAAuD,CAAvD;EACD;;EACDoU,YAAY,GAAG;IACb,KAAKT,eAAL,CAAqB,CAArB,EAAwB,CAAxB;EACD;;EACDU,aAAa,CAAChV,KAAD,EAAQkQ,KAAR,EAAe;IAC1B,KAAKoE,eAAL,CAAqBtU,KAArB,EAA4BkQ,KAA5B;;IACA,KAAKmE,eAAL,CAAqBrU,KAArB,EAA4B6U,SAAS,CAAClU,MAAV,GAAmB,CAA/C;EACD;;EACDsU,cAAc,GAAG;IACf,KAAKZ,eAAL,CAAqB,CAArB,EAAwBQ,SAAS,CAAClU,MAAlC;EACD;;AAzgBqB;;AA2gBxBgM,iBAAiB,CAAChZ,QAAlB,GAA6B,EAA7B;AACAgZ,iBAAiB,CAACuI,SAAlB,CAA4B7F,kBAA5B,GAAiD,IAAjD;AACA1C,iBAAiB,CAACuI,SAAlB,CAA4BxC,eAA5B,GAA8C,IAA9C;;AAEA,SAASyC,iBAAT,CAA2BrN,KAA3B,EAAkC;EAChC,IAAI,CAACA,KAAK,CAACsN,MAAN,CAAaC,IAAlB,EAAwB;IACtB,MAAMC,KAAK,GAAGxN,KAAK,CAACyN,uBAAN,CAA8B,KAA9B,CAAd;IACA,IAAI1O,MAAM,GAAG,EAAb;;IACA,KAAK,IAAIvT,CAAC,GAAG,CAAR,EAAWyV,IAAI,GAAGuM,KAAK,CAAC3U,MAA7B,EAAqCrN,CAAC,GAAGyV,IAAzC,EAA+CzV,CAAC,EAAhD,EAAoD;MAClDuT,MAAM,GAAGA,MAAM,CAAC2O,MAAP,CAAcF,KAAK,CAAChiB,CAAD,CAAL,CAASyX,UAAT,CAAoB4G,kBAApB,CAAuC7J,KAAvC,CAAd,CAAT;IACD;;IACDA,KAAK,CAACsN,MAAN,CAAaC,IAAb,GAAoBpgB,YAAY,CAAC4R,MAAM,CAAC4O,IAAP,CAAY,CAACziB,CAAD,EAAIQ,CAAJ,KAAUR,CAAC,GAAGQ,CAA1B,CAAD,CAAhC;EACD;;EACD,OAAOsU,KAAK,CAACsN,MAAN,CAAaC,IAApB;AACD;;AACD,SAASK,oBAAT,CAA8B5N,KAA9B,EAAqC;EACnC,MAAMjB,MAAM,GAAGsO,iBAAiB,CAACrN,KAAD,CAAhC;EACA,IAAI/H,GAAG,GAAG+H,KAAK,CAAC6N,OAAhB;EACA,IAAIriB,CAAJ,EAAOyV,IAAP,EAAa6M,IAAb,EAAmBvF,IAAnB;;EACA,MAAMwF,gBAAgB,GAAG,MAAM;IAC7B9V,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAczM,CAAC,IAAIwM,IAAI,CAACgW,GAAL,CAASF,IAAI,GAAGvF,IAAhB,CAAL,IAA8BtQ,GAA5C,CAAN;IACAsQ,IAAI,GAAGuF,IAAP;EACD,CAHD;;EAIA,KAAKtiB,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGlC,MAAM,CAAClG,MAA1B,EAAkCrN,CAAC,GAAGyV,IAAtC,EAA4C,EAAEzV,CAA9C,EAAiD;IAC/CsiB,IAAI,GAAG9N,KAAK,CAACiO,gBAAN,CAAuBlP,MAAM,CAACvT,CAAD,CAA7B,CAAP;IACAuiB,gBAAgB;EACjB;;EACD,KAAKviB,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGjB,KAAK,CAACkO,KAAN,CAAYrV,MAA/B,EAAuCrN,CAAC,GAAGyV,IAA3C,EAAiD,EAAEzV,CAAnD,EAAsD;IACpDsiB,IAAI,GAAG9N,KAAK,CAACmO,eAAN,CAAsB3iB,CAAtB,CAAP;IACAuiB,gBAAgB;EACjB;;EACD,OAAO9V,GAAP;AACD;;AACD,SAASmW,wBAAT,CAAkClN,KAAlC,EAAyCmN,KAAzC,EAAgDpP,OAAhD,EAAyDqP,UAAzD,EAAqE;EACnE,MAAMC,SAAS,GAAGtP,OAAO,CAACuP,YAA1B;EACA,IAAI7O,IAAJ,EAAU8O,KAAV;;EACA,IAAI5hB,aAAa,CAAC0hB,SAAD,CAAjB,EAA8B;IAC5B5O,IAAI,GAAG0O,KAAK,CAACpW,GAAN,GAAYgH,OAAO,CAACyP,kBAA3B;IACAD,KAAK,GAAGxP,OAAO,CAAC0P,aAAhB;EACD,CAHD,MAGO;IACLhP,IAAI,GAAG4O,SAAS,GAAGD,UAAnB;IACAG,KAAK,GAAG,CAAR;EACD;;EACD,OAAO;IACLG,KAAK,EAAEjP,IAAI,GAAG2O,UADT;IAELG,KAFK;IAGLvW,KAAK,EAAEmW,KAAK,CAACQ,MAAN,CAAa3N,KAAb,IAAuBvB,IAAI,GAAG;EAHhC,CAAP;AAKD;;AACD,SAASmP,yBAAT,CAAmC5N,KAAnC,EAA0CmN,KAA1C,EAAiDpP,OAAjD,EAA0DqP,UAA1D,EAAsE;EACpE,MAAMO,MAAM,GAAGR,KAAK,CAACQ,MAArB;EACA,MAAMf,IAAI,GAAGe,MAAM,CAAC3N,KAAD,CAAnB;EACA,IAAIqH,IAAI,GAAGrH,KAAK,GAAG,CAAR,GAAY2N,MAAM,CAAC3N,KAAK,GAAG,CAAT,CAAlB,GAAgC,IAA3C;EACA,IAAI6N,IAAI,GAAG7N,KAAK,GAAG2N,MAAM,CAAChW,MAAP,GAAgB,CAAxB,GAA4BgW,MAAM,CAAC3N,KAAK,GAAG,CAAT,CAAlC,GAAgD,IAA3D;EACA,MAAM8N,OAAO,GAAG/P,OAAO,CAACyP,kBAAxB;;EACA,IAAInG,IAAI,KAAK,IAAb,EAAmB;IACjBA,IAAI,GAAGuF,IAAI,IAAIiB,IAAI,KAAK,IAAT,GAAgBV,KAAK,CAACjO,GAAN,GAAYiO,KAAK,CAACnW,KAAlC,GAA0C6W,IAAI,GAAGjB,IAArD,CAAX;EACD;;EACD,IAAIiB,IAAI,KAAK,IAAb,EAAmB;IACjBA,IAAI,GAAGjB,IAAI,GAAGA,IAAP,GAAcvF,IAArB;EACD;;EACD,MAAMrQ,KAAK,GAAG4V,IAAI,GAAG,CAACA,IAAI,GAAG9V,IAAI,CAACC,GAAL,CAASsQ,IAAT,EAAewG,IAAf,CAAR,IAAgC,CAAhC,GAAoCC,OAAzD;EACA,MAAMrP,IAAI,GAAG3H,IAAI,CAACgW,GAAL,CAASe,IAAI,GAAGxG,IAAhB,IAAwB,CAAxB,GAA4ByG,OAAzC;EACA,OAAO;IACLJ,KAAK,EAAEjP,IAAI,GAAG2O,UADT;IAELG,KAAK,EAAExP,OAAO,CAAC0P,aAFV;IAGLzW;EAHK,CAAP;AAKD;;AACD,SAAS+W,aAAT,CAAuBC,KAAvB,EAA8BnW,IAA9B,EAAoCuK,MAApC,EAA4C9X,CAA5C,EAA+C;EAC7C,MAAM2jB,UAAU,GAAG7L,MAAM,CAAC6E,KAAP,CAAa+G,KAAK,CAAC,CAAD,CAAlB,EAAuB1jB,CAAvB,CAAnB;EACA,MAAM4jB,QAAQ,GAAG9L,MAAM,CAAC6E,KAAP,CAAa+G,KAAK,CAAC,CAAD,CAAlB,EAAuB1jB,CAAvB,CAAjB;EACA,MAAMyM,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASkX,UAAT,EAAqBC,QAArB,CAAZ;EACA,MAAMjV,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASgV,UAAT,EAAqBC,QAArB,CAAZ;EACA,IAAIC,QAAQ,GAAGpX,GAAf;EACA,IAAIqX,MAAM,GAAGnV,GAAb;;EACA,IAAInC,IAAI,CAACgW,GAAL,CAAS/V,GAAT,IAAgBD,IAAI,CAACgW,GAAL,CAAS7T,GAAT,CAApB,EAAmC;IACjCkV,QAAQ,GAAGlV,GAAX;IACAmV,MAAM,GAAGrX,GAAT;EACD;;EACDc,IAAI,CAACuK,MAAM,CAACE,IAAR,CAAJ,GAAoB8L,MAApB;EACAvW,IAAI,CAACwW,OAAL,GAAe;IACbF,QADa;IAEbC,MAFa;IAGbpX,KAAK,EAAEiX,UAHM;IAIb/O,GAAG,EAAEgP,QAJQ;IAKbnX,GALa;IAMbkC;EANa,CAAf;AAQD;;AACD,SAASqV,UAAT,CAAoBN,KAApB,EAA2BnW,IAA3B,EAAiCuK,MAAjC,EAAyC9X,CAAzC,EAA4C;EAC1C,IAAIG,OAAO,CAACujB,KAAD,CAAX,EAAoB;IAClBD,aAAa,CAACC,KAAD,EAAQnW,IAAR,EAAcuK,MAAd,EAAsB9X,CAAtB,CAAb;EACD,CAFD,MAEO;IACLuN,IAAI,CAACuK,MAAM,CAACE,IAAR,CAAJ,GAAoBF,MAAM,CAAC6E,KAAP,CAAa+G,KAAb,EAAoB1jB,CAApB,CAApB;EACD;;EACD,OAAOuN,IAAP;AACD;;AACD,SAAS0W,qBAAT,CAA+B1N,IAA/B,EAAqCJ,IAArC,EAA2CzJ,KAA3C,EAAkDkQ,KAAlD,EAAyD;EACvD,MAAM/E,MAAM,GAAGtB,IAAI,CAACsB,MAApB;EACA,MAAMC,MAAM,GAAGvB,IAAI,CAACuB,MAApB;EACA,MAAMsF,MAAM,GAAGvF,MAAM,CAACwF,SAAP,EAAf;EACA,MAAMC,WAAW,GAAGzF,MAAM,KAAKC,MAA/B;EACA,MAAMJ,MAAM,GAAG,EAAf;EACA,IAAI1X,CAAJ,EAAOyV,IAAP,EAAalI,IAAb,EAAmBmW,KAAnB;;EACA,KAAK1jB,CAAC,GAAG0M,KAAJ,EAAW+I,IAAI,GAAG/I,KAAK,GAAGkQ,KAA/B,EAAsC5c,CAAC,GAAGyV,IAA1C,EAAgD,EAAEzV,CAAlD,EAAqD;IACnD0jB,KAAK,GAAGvN,IAAI,CAACnW,CAAD,CAAZ;IACAuN,IAAI,GAAG,EAAP;IACAA,IAAI,CAACsK,MAAM,CAACG,IAAR,CAAJ,GAAoBsF,WAAW,IAAIzF,MAAM,CAAC8E,KAAP,CAAaS,MAAM,CAACpd,CAAD,CAAnB,EAAwBA,CAAxB,CAAnC;IACA0X,MAAM,CAACrJ,IAAP,CAAY2V,UAAU,CAACN,KAAD,EAAQnW,IAAR,EAAcuK,MAAd,EAAsB9X,CAAtB,CAAtB;EACD;;EACD,OAAO0X,MAAP;AACD;;AACD,SAASwM,UAAT,CAAoBC,MAApB,EAA4B;EAC1B,OAAOA,MAAM,IAAIA,MAAM,CAACN,QAAP,KAAoBlY,SAA9B,IAA2CwY,MAAM,CAACL,MAAP,KAAkBnY,SAApE;AACD;;AACD,MAAMyY,aAAN,SAA4B/K,iBAA5B,CAA8C;EAC5C6D,kBAAkB,CAAC3G,IAAD,EAAOJ,IAAP,EAAazJ,KAAb,EAAoBkQ,KAApB,EAA2B;IAC3C,OAAOqH,qBAAqB,CAAC1N,IAAD,EAAOJ,IAAP,EAAazJ,KAAb,EAAoBkQ,KAApB,CAA5B;EACD;;EACDI,cAAc,CAACzG,IAAD,EAAOJ,IAAP,EAAazJ,KAAb,EAAoBkQ,KAApB,EAA2B;IACvC,OAAOqH,qBAAqB,CAAC1N,IAAD,EAAOJ,IAAP,EAAazJ,KAAb,EAAoBkQ,KAApB,CAA5B;EACD;;EACDK,eAAe,CAAC1G,IAAD,EAAOJ,IAAP,EAAazJ,KAAb,EAAoBkQ,KAApB,EAA2B;IACxC,MAAM;MAAC/E,MAAD;MAASC;IAAT,IAAmBvB,IAAzB;IACA,MAAM;MAACgH,QAAQ,GAAG,GAAZ;MAAiBC,QAAQ,GAAG;IAA5B,IAAmC,KAAK7D,QAA9C;IACA,MAAM0K,QAAQ,GAAGxM,MAAM,CAACG,IAAP,KAAgB,GAAhB,GAAsBuF,QAAtB,GAAiCC,QAAlD;IACA,MAAM8G,QAAQ,GAAGxM,MAAM,CAACE,IAAP,KAAgB,GAAhB,GAAsBuF,QAAtB,GAAiCC,QAAlD;IACA,MAAM9F,MAAM,GAAG,EAAf;IACA,IAAI1X,CAAJ,EAAOyV,IAAP,EAAalI,IAAb,EAAmBgX,GAAnB;;IACA,KAAKvkB,CAAC,GAAG0M,KAAJ,EAAW+I,IAAI,GAAG/I,KAAK,GAAGkQ,KAA/B,EAAsC5c,CAAC,GAAGyV,IAA1C,EAAgD,EAAEzV,CAAlD,EAAqD;MACnDukB,GAAG,GAAGpO,IAAI,CAACnW,CAAD,CAAV;MACAuN,IAAI,GAAG,EAAP;MACAA,IAAI,CAACsK,MAAM,CAACG,IAAR,CAAJ,GAAoBH,MAAM,CAAC8E,KAAP,CAAa9b,gBAAgB,CAAC0jB,GAAD,EAAMF,QAAN,CAA7B,EAA8CrkB,CAA9C,CAApB;MACA0X,MAAM,CAACrJ,IAAP,CAAY2V,UAAU,CAACnjB,gBAAgB,CAAC0jB,GAAD,EAAMD,QAAN,CAAjB,EAAkC/W,IAAlC,EAAwCuK,MAAxC,EAAgD9X,CAAhD,CAAtB;IACD;;IACD,OAAO0X,MAAP;EACD;;EACDiG,qBAAqB,CAACC,KAAD,EAAQpJ,KAAR,EAAekD,MAAf,EAAuB9B,KAAvB,EAA8B;IACjD,MAAM+H,qBAAN,CAA4BC,KAA5B,EAAmCpJ,KAAnC,EAA0CkD,MAA1C,EAAkD9B,KAAlD;IACA,MAAMuO,MAAM,GAAGzM,MAAM,CAACqM,OAAtB;;IACA,IAAII,MAAM,IAAI3P,KAAK,KAAK,KAAKmD,WAAL,CAAiBG,MAAzC,EAAiD;MAC/C8F,KAAK,CAACnR,GAAN,GAAYD,IAAI,CAACC,GAAL,CAASmR,KAAK,CAACnR,GAAf,EAAoB0X,MAAM,CAAC1X,GAA3B,CAAZ;MACAmR,KAAK,CAACjP,GAAN,GAAYnC,IAAI,CAACmC,GAAL,CAASiP,KAAK,CAACjP,GAAf,EAAoBwV,MAAM,CAACxV,GAA3B,CAAZ;IACD;EACF;;EACD4P,gBAAgB,CAAC7I,KAAD,EAAQ;IACtB,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAM;MAACE,MAAD;MAASC;IAAT,IAAmBvB,IAAzB;IACA,MAAMmB,MAAM,GAAG9K,EAAE,CAAC6Q,SAAH,CAAa/H,KAAb,CAAf;IACA,MAAMyO,MAAM,GAAGzM,MAAM,CAACqM,OAAtB;IACA,MAAM7P,KAAK,GAAGgQ,UAAU,CAACC,MAAD,CAAV,GACV,MAAMA,MAAM,CAACzX,KAAb,GAAqB,IAArB,GAA4ByX,MAAM,CAACvP,GAAnC,GAAyC,GAD/B,GAEV,KAAKkD,MAAM,CAAC2G,gBAAP,CAAwB/G,MAAM,CAACI,MAAM,CAACE,IAAR,CAA9B,CAFT;IAGA,OAAO;MACLwG,KAAK,EAAE,KAAK3G,MAAM,CAAC4G,gBAAP,CAAwB/G,MAAM,CAACG,MAAM,CAACG,IAAR,CAA9B,CADP;MAEL9D;IAFK,CAAP;EAID;;EACDiG,UAAU,GAAG;IACX,MAAMvN,EAAE,GAAG,IAAX;IACAA,EAAE,CAACqN,mBAAH,GAAyB,IAAzB;IACA,MAAME,UAAN;IACA,MAAM5D,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACApB,IAAI,CAACX,KAAL,GAAahJ,EAAE,CAAC4N,UAAH,GAAgB5E,KAA7B;EACD;;EACD1E,MAAM,CAAC6E,IAAD,EAAO;IACX,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA/K,EAAE,CAACuU,cAAH,CAAkB5K,IAAI,CAACJ,IAAvB,EAA6B,CAA7B,EAAgCI,IAAI,CAACJ,IAAL,CAAU9I,MAA1C,EAAkD0I,IAAlD;EACD;;EACDoL,cAAc,CAACqD,IAAD,EAAO9X,KAAP,EAAckQ,KAAd,EAAqB7G,IAArB,EAA2B;IACvC,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAvB;IACA,MAAM+B,MAAM,GAAGlL,EAAE,CAAC+K,WAAH,CAAeG,MAA9B;IACA,MAAM2M,IAAI,GAAG3M,MAAM,CAAC4M,YAAP,EAAb;IACA,MAAMC,UAAU,GAAG7M,MAAM,CAAC8M,YAAP,EAAnB;;IACA,MAAM/B,KAAK,GAAGjW,EAAE,CAACiY,SAAH,EAAd;;IACA,MAAMC,SAAS,GAAGlY,EAAE,CAACqS,yBAAH,CAA6BvS,KAA7B,EAAoCqJ,IAApC,CAAlB;IACA,MAAMqK,aAAa,GAAGxT,EAAE,CAACsT,gBAAH,CAAoB4E,SAApB,CAAtB;IACA,MAAM3E,cAAc,GAAGvT,EAAE,CAACuT,cAAH,CAAkBpK,IAAlB,EAAwBqK,aAAxB,CAAvB;IACAxT,EAAE,CAAC2T,mBAAH,CAAuBH,aAAvB,EAAsCrK,IAAtC,EAA4C+O,SAA5C;;IACA,KAAK,IAAI9kB,CAAC,GAAG0M,KAAb,EAAoB1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAhC,EAAuC5c,CAAC,EAAxC,EAA4C;MAC1C,MAAM+kB,OAAO,GAAGpJ,KAAK,GAAG;QAAC8I,IAAD;QAAOO,IAAI,EAAEP;MAAb,CAAH,GAAwB7X,EAAE,CAACqY,wBAAH,CAA4BjlB,CAA5B,CAA7C;;MACA,MAAMklB,OAAO,GAAGtY,EAAE,CAACuY,wBAAH,CAA4BnlB,CAA5B,EAA+B6iB,KAA/B,CAAhB;;MACA,MAAMtQ,UAAU,GAAG;QACjBoS,UADiB;QAEjBF,IAAI,EAAEM,OAAO,CAACN,IAFG;QAGjB3hB,CAAC,EAAE6hB,UAAU,GAAGI,OAAO,CAACC,IAAX,GAAkBE,OAAO,CAACE,MAHtB;QAIjBpiB,CAAC,EAAE2hB,UAAU,GAAGO,OAAO,CAACE,MAAX,GAAoBL,OAAO,CAACC,IAJxB;QAKjBK,MAAM,EAAEV,UAAU,GAAGO,OAAO,CAAC/Q,IAAX,GAAkBxI,SALnB;QAMjB2Z,KAAK,EAAEX,UAAU,GAAGhZ,SAAH,GAAeuZ,OAAO,CAAC/Q;MANvB,CAAnB;;MAQA,IAAIgM,cAAJ,EAAoB;QAClB5N,UAAU,CAACkB,OAAX,GAAqB2M,aAAa,IAAIxT,EAAE,CAACqS,yBAAH,CAA6Bjf,CAA7B,EAAgC+V,IAAhC,CAAtC;MACD;;MACDnJ,EAAE,CAAC0T,aAAH,CAAiBkE,IAAI,CAACxkB,CAAD,CAArB,EAA0BA,CAA1B,EAA6BuS,UAA7B,EAAyCwD,IAAzC;IACD;EACF;;EACDwP,UAAU,CAACC,IAAD,EAAO3M,SAAP,EAAkB;IAC1B,MAAMjM,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAME,MAAM,GAAGtB,IAAI,CAACsB,MAApB;IACA,MAAMtC,QAAQ,GAAGsC,MAAM,CAACoK,uBAAP,CAA+BrV,EAAE,CAAC8M,KAAlC,CAAjB;IACA,MAAMlD,OAAO,GAAGqB,MAAM,CAACpE,OAAP,CAAe+C,OAA/B;IACA,MAAMf,IAAI,GAAGF,QAAQ,CAAClI,MAAtB;IACA,MAAM+J,MAAM,GAAG,EAAf;IACA,IAAIpX,CAAJ,EAAOuN,IAAP;;IACA,KAAKvN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyV,IAAhB,EAAsB,EAAEzV,CAAxB,EAA2B;MACzBuN,IAAI,GAAGgI,QAAQ,CAACvV,CAAD,CAAf;;MACA,IAAI,OAAO6Y,SAAP,KAAqB,WAAzB,EAAsC;QACpC,MAAM4M,GAAG,GAAGlY,IAAI,CAACkK,UAAL,CAAgBgG,SAAhB,CAA0B5E,SAA1B,EACVtL,IAAI,CAACkK,UAAL,CAAgBE,WAAhB,CAA4BG,MAA5B,CAAmCE,IADzB,CAAZ;;QAGA,IAAI3W,aAAa,CAACokB,GAAD,CAAb,IAAsBC,KAAK,CAACD,GAAD,CAA/B,EAAsC;UACpC;QACD;MACF;;MACD,IAAIjP,OAAO,KAAK,KAAZ,IAAqBY,MAAM,CAACuO,OAAP,CAAepY,IAAI,CAACqI,KAApB,MAA+B,CAAC,CAArD,IACLY,OAAO,KAAK7K,SAAZ,IAAyB4B,IAAI,CAACqI,KAAL,KAAejK,SADvC,EACmD;QACjDyL,MAAM,CAAC/I,IAAP,CAAYd,IAAI,CAACqI,KAAjB;MACD;;MACD,IAAIrI,IAAI,CAACmI,KAAL,KAAe8P,IAAnB,EAAyB;QACvB;MACD;IACF;;IACD,IAAI,CAACpO,MAAM,CAAC/J,MAAZ,EAAoB;MAClB+J,MAAM,CAAC/I,IAAP,CAAY1C,SAAZ;IACD;;IACD,OAAOyL,MAAP;EACD;;EACDwO,cAAc,CAAClQ,KAAD,EAAQ;IACpB,OAAO,KAAK6P,UAAL,CAAgB5Z,SAAhB,EAA2B+J,KAA3B,EAAkCrI,MAAzC;EACD;;EACDwY,cAAc,CAAC7P,YAAD,EAAe1D,IAAf,EAAqB;IACjC,MAAM8E,MAAM,GAAG,KAAKmO,UAAL,CAAgBvP,YAAhB,CAAf;;IACA,MAAMN,KAAK,GAAIpD,IAAI,KAAK3G,SAAV,GACVyL,MAAM,CAACuO,OAAP,CAAerT,IAAf,CADU,GAEV,CAAC,CAFL;IAGA,OAAQoD,KAAK,KAAK,CAAC,CAAZ,GACH0B,MAAM,CAAC/J,MAAP,GAAgB,CADb,GAEHqI,KAFJ;EAGD;;EACDmP,SAAS,GAAG;IACV,MAAMjY,EAAE,GAAG,IAAX;IACA,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;IACA,MAAM8C,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAME,MAAM,GAAGtB,IAAI,CAACsB,MAApB;IACA,MAAMwL,MAAM,GAAG,EAAf;IACA,IAAIrjB,CAAJ,EAAOyV,IAAP;;IACA,KAAKzV,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGc,IAAI,CAACJ,IAAL,CAAU9I,MAA7B,EAAqCrN,CAAC,GAAGyV,IAAzC,EAA+C,EAAEzV,CAAjD,EAAoD;MAClDqjB,MAAM,CAAChV,IAAP,CAAYwJ,MAAM,CAAC4K,gBAAP,CAAwB7V,EAAE,CAAC6Q,SAAH,CAAazd,CAAb,EAAgB6X,MAAM,CAACG,IAAvB,CAAxB,EAAsDhY,CAAtD,CAAZ;IACD;;IACD,MAAMgjB,YAAY,GAAGtO,IAAI,CAACsO,YAA1B;IACA,MAAMvW,GAAG,GAAGuW,YAAY,IAAIZ,oBAAoB,CAACvK,MAAD,CAAhD;IACA,OAAO;MACLpL,GADK;MAEL4W,MAFK;MAGL3W,KAAK,EAAEmL,MAAM,CAACiO,WAHT;MAILlR,GAAG,EAAEiD,MAAM,CAACkO,SAJP;MAKLjD,UAAU,EAAElW,EAAE,CAACgZ,cAAH,EALP;MAMLpR,KAAK,EAAEqD,MANF;MAOLmO,OAAO,EAAEtR,IAAI,CAACsR,OAPT;MAQL/C,KAAK,EAAED,YAAY,GAAG,CAAH,GAAOtO,IAAI,CAACwO,kBAAL,GAA0BxO,IAAI,CAACyO;IARpD,CAAP;EAUD;;EACD8B,wBAAwB,CAACvP,KAAD,EAAQ;IAC9B,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAM;MAACkL,MAAD;MAASuC;IAAT,IAAqBzN,EAAE,CAAC+K,WAA9B;IACA,MAAM;MAAC8M,IAAI,EAAEwB,SAAP;MAAkBC;IAAlB,IAAkCtZ,EAAE,CAAC6G,OAA3C;IACA,MAAMiE,MAAM,GAAG9K,EAAE,CAAC6Q,SAAH,CAAa/H,KAAb,CAAf;IACA,MAAMyO,MAAM,GAAGzM,MAAM,CAACqM,OAAtB;IACA,MAAMoC,QAAQ,GAAGjC,UAAU,CAACC,MAAD,CAA3B;IACA,IAAIjQ,KAAK,GAAGwD,MAAM,CAACI,MAAM,CAACE,IAAR,CAAlB;IACA,IAAItL,KAAK,GAAG,CAAZ;IACA,IAAIW,MAAM,GAAGgN,QAAQ,GAAGzN,EAAE,CAAC+I,UAAH,CAAcmC,MAAd,EAAsBJ,MAAtB,EAA8B2C,QAA9B,CAAH,GAA6CnG,KAAlE;IACA,IAAI8Q,IAAJ,EAAU7Q,IAAV;;IACA,IAAI9G,MAAM,KAAK6G,KAAf,EAAsB;MACpBxH,KAAK,GAAGW,MAAM,GAAG6G,KAAjB;MACA7G,MAAM,GAAG6G,KAAT;IACD;;IACD,IAAIiS,QAAJ,EAAc;MACZjS,KAAK,GAAGiQ,MAAM,CAACN,QAAf;MACAxW,MAAM,GAAG8W,MAAM,CAACL,MAAP,GAAgBK,MAAM,CAACN,QAAhC;;MACA,IAAI3P,KAAK,KAAK,CAAV,IAAe/S,IAAI,CAAC+S,KAAD,CAAJ,KAAgB/S,IAAI,CAACgjB,MAAM,CAACL,MAAR,CAAvC,EAAwD;QACtDpX,KAAK,GAAG,CAAR;MACD;;MACDA,KAAK,IAAIwH,KAAT;IACD;;IACD,MAAMyP,UAAU,GAAG,CAACtiB,aAAa,CAAC4kB,SAAD,CAAd,IAA6B,CAACE,QAA9B,GAAyCF,SAAzC,GAAqDvZ,KAAxE;IACA,IAAI+X,IAAI,GAAG3M,MAAM,CAAC2K,gBAAP,CAAwBkB,UAAxB,CAAX;;IACA,IAAI,KAAK9X,KAAL,CAAWua,iBAAX,CAA6B1Q,KAA7B,CAAJ,EAAyC;MACvCsP,IAAI,GAAGlN,MAAM,CAAC2K,gBAAP,CAAwB/V,KAAK,GAAGW,MAAhC,CAAP;IACD,CAFD,MAEO;MACL2X,IAAI,GAAGP,IAAP;IACD;;IACDtQ,IAAI,GAAG6Q,IAAI,GAAGP,IAAd;;IACA,IAAIyB,YAAY,KAAKva,SAAjB,IAA8Ba,IAAI,CAACgW,GAAL,CAASrO,IAAT,IAAiB+R,YAAnD,EAAiE;MAC/D/R,IAAI,GAAGA,IAAI,GAAG,CAAP,GAAW,CAAC+R,YAAZ,GAA2BA,YAAlC;;MACA,IAAIhS,KAAK,KAAK,CAAd,EAAiB;QACfuQ,IAAI,IAAItQ,IAAI,GAAG,CAAf;MACD;;MACD6Q,IAAI,GAAGP,IAAI,GAAGtQ,IAAd;IACD;;IACD,MAAMkS,UAAU,GAAGJ,SAAS,IAAI,CAAhC;;IACA,IAAIxB,IAAI,KAAK3M,MAAM,CAAC2K,gBAAP,CAAwB4D,UAAxB,CAAb,EAAkD;MAChD,MAAMC,QAAQ,GAAGxO,MAAM,CAACyO,oBAAP,CAA4BF,UAA5B,IAA0C,CAA3D;;MACA,IAAIlS,IAAI,GAAG,CAAX,EAAc;QACZsQ,IAAI,IAAI6B,QAAR;QACAnS,IAAI,IAAImS,QAAR;MACD,CAHD,MAGO,IAAInS,IAAI,GAAG,CAAX,EAAc;QACnBsQ,IAAI,IAAI6B,QAAR;QACAnS,IAAI,IAAImS,QAAR;MACD;IACF;;IACD,OAAO;MACLnS,IADK;MAELsQ,IAFK;MAGLO,IAHK;MAILI,MAAM,EAAEJ,IAAI,GAAG7Q,IAAI,GAAG;IAJjB,CAAP;EAMD;;EACDgR,wBAAwB,CAACzP,KAAD,EAAQmN,KAAR,EAAe;IACrC,MAAMjW,EAAE,GAAG,IAAX;IACA,MAAM4H,KAAK,GAAGqO,KAAK,CAACrO,KAApB;IACA,MAAMf,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAM+S,eAAe,GAAGjmB,cAAc,CAACkT,OAAO,CAAC+S,eAAT,EAA0BC,QAA1B,CAAtC;IACA,IAAIrB,MAAJ,EAAYjR,IAAZ;;IACA,IAAI0O,KAAK,CAACmD,OAAV,EAAmB;MACjB,MAAMlD,UAAU,GAAGrP,OAAO,CAACiT,QAAR,GAAmB9Z,EAAE,CAACgZ,cAAH,CAAkBlQ,KAAlB,CAAnB,GAA8CmN,KAAK,CAACC,UAAvE;MACA,MAAMlF,KAAK,GAAGnK,OAAO,CAACuP,YAAR,KAAyB,MAAzB,GACVM,yBAAyB,CAAC5N,KAAD,EAAQmN,KAAR,EAAepP,OAAf,EAAwBqP,UAAxB,CADf,GAEVF,wBAAwB,CAAClN,KAAD,EAAQmN,KAAR,EAAepP,OAAf,EAAwBqP,UAAxB,CAF5B;;MAGA,MAAM6D,UAAU,GAAG/Z,EAAE,CAACiZ,cAAH,CAAkBjZ,EAAE,CAAC8I,KAArB,EAA4B9I,EAAE,CAAC+K,WAAH,CAAe/B,KAA3C,CAAnB;;MACAwP,MAAM,GAAGxH,KAAK,CAAClR,KAAN,GAAekR,KAAK,CAACwF,KAAN,GAAcuD,UAA7B,GAA4C/I,KAAK,CAACwF,KAAN,GAAc,CAAnE;MACAjP,IAAI,GAAG3H,IAAI,CAACC,GAAL,CAAS+Z,eAAT,EAA0B5I,KAAK,CAACwF,KAAN,GAAcxF,KAAK,CAACqF,KAA9C,CAAP;IACD,CARD,MAQO;MACLmC,MAAM,GAAG5Q,KAAK,CAACiO,gBAAN,CAAuB7V,EAAE,CAAC6Q,SAAH,CAAa/H,KAAb,EAAoBlB,KAAK,CAACwD,IAA1B,CAAvB,EAAwDtC,KAAxD,CAAT;MACAvB,IAAI,GAAG3H,IAAI,CAACC,GAAL,CAAS+Z,eAAT,EAA0B3D,KAAK,CAACpW,GAAN,GAAYoW,KAAK,CAACI,KAA5C,CAAP;IACD;;IACD,OAAO;MACLwB,IAAI,EAAEW,MAAM,GAAGjR,IAAI,GAAG,CADjB;MAEL6Q,IAAI,EAAEI,MAAM,GAAGjR,IAAI,GAAG,CAFjB;MAGLiR,MAHK;MAILjR;IAJK,CAAP;EAMD;;EACD7G,IAAI,GAAG;IACL,MAAMV,EAAE,GAAG,IAAX;IACA,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAM0K,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAMG,MAAM,GAAGvB,IAAI,CAACuB,MAApB;IACA,MAAM8O,KAAK,GAAGrQ,IAAI,CAACJ,IAAnB;IACA,MAAMV,IAAI,GAAGmR,KAAK,CAACvZ,MAAnB;IACA,IAAIrN,CAAC,GAAG,CAAR;IACAuB,QAAQ,CAACsK,KAAK,CAAC0N,GAAP,EAAY1N,KAAK,CAACiT,SAAlB,CAAR;;IACA,OAAO9e,CAAC,GAAGyV,IAAX,EAAiB,EAAEzV,CAAnB,EAAsB;MACpB,IAAI4M,EAAE,CAAC6Q,SAAH,CAAazd,CAAb,EAAgB8X,MAAM,CAACE,IAAvB,MAAiC,IAArC,EAA2C;QACzC4O,KAAK,CAAC5mB,CAAD,CAAL,CAASsN,IAAT,CAAcV,EAAE,CAAC0M,IAAjB;MACD;IACF;;IACD7X,UAAU,CAACoK,KAAK,CAAC0N,GAAP,CAAV;EACD;;AAvP2C;;AAyP9C6K,aAAa,CAACxN,EAAd,GAAmB,KAAnB;AACAwN,aAAa,CAAC/jB,QAAd,GAAyB;EACvB0b,kBAAkB,EAAE,KADG;EAEvBqD,eAAe,EAAE,KAFM;EAGvB8D,kBAAkB,EAAE,GAHG;EAIvBC,aAAa,EAAE,GAJQ;EAKvB6C,OAAO,EAAE,IALc;EAMvBtT,UAAU,EAAE;IACVd,OAAO,EAAE;MACP5F,IAAI,EAAE,QADC;MAEPuG,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B;IAFL;EADC;AANW,CAAzB;AAaA6R,aAAa,CAACre,SAAd,GAA0B;EACxB8gB,WAAW,EAAE;IACX9Q,IAAI,EAAE;EADK,CADW;EAIxBqC,MAAM,EAAE;IACN0O,OAAO,EAAE;MACP9a,IAAI,EAAE,UADC;MAEP+a,MAAM,EAAE,IAFD;MAGPC,IAAI,EAAE;QACJD,MAAM,EAAE;MADJ;IAHC,CADH;IAQNE,OAAO,EAAE;MACPjb,IAAI,EAAE,QADC;MAEPkb,WAAW,EAAE;IAFN;EARH;AAJgB,CAA1B;;AAmBA,MAAMC,gBAAN,SAA+B9N,iBAA/B,CAAiD;EAC/Cc,UAAU,GAAG;IACX,KAAKF,mBAAL,GAA2B,IAA3B;IACA,MAAME,UAAN;EACD;;EACD8C,eAAe,CAAC1G,IAAD,EAAOJ,IAAP,EAAazJ,KAAb,EAAoBkQ,KAApB,EAA2B;IACxC,MAAM;MAAC9H,MAAD;MAASC;IAAT,IAAmBwB,IAAzB;IACA,MAAM;MAACgH,QAAQ,GAAG,GAAZ;MAAiBC,QAAQ,GAAG;IAA5B,IAAmC,KAAK7D,QAA9C;IACA,MAAMjC,MAAM,GAAG,EAAf;IACA,IAAI1X,CAAJ,EAAOyV,IAAP,EAAalI,IAAb;;IACA,KAAKvN,CAAC,GAAG0M,KAAJ,EAAW+I,IAAI,GAAG/I,KAAK,GAAGkQ,KAA/B,EAAsC5c,CAAC,GAAGyV,IAA1C,EAAgD,EAAEzV,CAAlD,EAAqD;MACnDuN,IAAI,GAAG4I,IAAI,CAACnW,CAAD,CAAX;MACA0X,MAAM,CAACrJ,IAAP,CAAY;QACVvL,CAAC,EAAEgS,MAAM,CAAC6H,KAAP,CAAa9b,gBAAgB,CAAC0M,IAAD,EAAOgQ,QAAP,CAA7B,EAA+Cvd,CAA/C,CADO;QAEVgD,CAAC,EAAE+R,MAAM,CAAC4H,KAAP,CAAa9b,gBAAgB,CAAC0M,IAAD,EAAOiQ,QAAP,CAA7B,EAA+Cxd,CAA/C,CAFO;QAGV+jB,OAAO,EAAExW,IAAI,IAAIA,IAAI,CAAC/N,CAAb,IAAkB,CAAC+N,IAAI,CAAC/N;MAHvB,CAAZ;IAKD;;IACD,OAAOkY,MAAP;EACD;;EACD4G,cAAc,GAAG;IACf,MAAM;MAACnI,IAAD;MAAO6C;IAAP,IAAkB,KAAKrB,WAA7B;IACA,IAAIhJ,GAAG,GAAG,CAAV;;IACA,KAAK,IAAI3O,CAAC,GAAGmW,IAAI,CAAC9I,MAAL,GAAc,CAA3B,EAA8BrN,CAAC,IAAI,CAAnC,EAAsC,EAAEA,CAAxC,EAA2C;MACzC2O,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAcwH,IAAI,CAACnW,CAAD,CAAJ,CAAQmU,IAAR,KAAiB,CAA/B,EAAkC6E,OAAO,CAAChZ,CAAD,CAAP,CAAW+jB,OAA7C,CAAN;IACD;;IACD,OAAOpV,GAAG,GAAG,CAAN,IAAWA,GAAlB;EACD;;EACD4P,gBAAgB,CAAC7I,KAAD,EAAQ;IACtB,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAM;MAAC7C,MAAD;MAASC;IAAT,IAAmBwB,IAAzB;IACA,MAAMmB,MAAM,GAAG9K,EAAE,CAAC6Q,SAAH,CAAa/H,KAAb,CAAf;IACA,MAAM5S,CAAC,GAAGgS,MAAM,CAAC2J,gBAAP,CAAwB/G,MAAM,CAAC5U,CAA/B,CAAV;IACA,MAAME,CAAC,GAAG+R,MAAM,CAAC0J,gBAAP,CAAwB/G,MAAM,CAAC1U,CAA/B,CAAV;IACA,MAAMxD,CAAC,GAAGkY,MAAM,CAACqM,OAAjB;IACA,OAAO;MACLvF,KAAK,EAAEjI,IAAI,CAACiI,KADP;MAELtK,KAAK,EAAE,MAAMpR,CAAN,GAAU,IAAV,GAAiBE,CAAjB,IAAsBxD,CAAC,GAAG,OAAOA,CAAV,GAAc,EAArC,IAA2C;IAF7C,CAAP;EAID;;EACD0R,MAAM,CAAC6E,IAAD,EAAO;IACX,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAMwa,MAAM,GAAGxa,EAAE,CAAC+K,WAAH,CAAexB,IAA9B;IACAvJ,EAAE,CAACuU,cAAH,CAAkBiG,MAAlB,EAA0B,CAA1B,EAA6BA,MAAM,CAAC/Z,MAApC,EAA4C0I,IAA5C;EACD;;EACDoL,cAAc,CAACiG,MAAD,EAAS1a,KAAT,EAAgBkQ,KAAhB,EAAuB7G,IAAvB,EAA6B;IACzC,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAvB;IACA,MAAM;MAACjB,MAAD;MAASC;IAAT,IAAmBnI,EAAE,CAAC+K,WAA5B;IACA,MAAMmN,SAAS,GAAGlY,EAAE,CAACqS,yBAAH,CAA6BvS,KAA7B,EAAoCqJ,IAApC,CAAlB;IACA,MAAMqK,aAAa,GAAGxT,EAAE,CAACsT,gBAAH,CAAoB4E,SAApB,CAAtB;IACA,MAAM3E,cAAc,GAAGvT,EAAE,CAACuT,cAAH,CAAkBpK,IAAlB,EAAwBqK,aAAxB,CAAvB;;IACA,KAAK,IAAIpgB,CAAC,GAAG0M,KAAb,EAAoB1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAhC,EAAuC5c,CAAC,EAAxC,EAA4C;MAC1C,MAAMqnB,KAAK,GAAGD,MAAM,CAACpnB,CAAD,CAApB;MACA,MAAM0X,MAAM,GAAG,CAACiE,KAAD,IAAU/O,EAAE,CAAC6Q,SAAH,CAAazd,CAAb,CAAzB;MACA,MAAM8C,CAAC,GAAG6Y,KAAK,GAAG7G,MAAM,CAACwS,kBAAP,CAA0B,GAA1B,CAAH,GAAoCxS,MAAM,CAAC2N,gBAAP,CAAwB/K,MAAM,CAAC5U,CAA/B,CAAnD;MACA,MAAME,CAAC,GAAG2Y,KAAK,GAAG5G,MAAM,CAAC2P,YAAP,EAAH,GAA2B3P,MAAM,CAAC0N,gBAAP,CAAwB/K,MAAM,CAAC1U,CAA/B,CAA1C;MACA,MAAMuP,UAAU,GAAG;QACjBzP,CADiB;QAEjBE,CAFiB;QAGjBukB,IAAI,EAAE7B,KAAK,CAAC5iB,CAAD,CAAL,IAAY4iB,KAAK,CAAC1iB,CAAD;MAHN,CAAnB;;MAKA,IAAImd,cAAJ,EAAoB;QAClB5N,UAAU,CAACkB,OAAX,GAAqB7G,EAAE,CAACqS,yBAAH,CAA6Bjf,CAA7B,EAAgC+V,IAAhC,CAArB;;QACA,IAAI4F,KAAJ,EAAW;UACTpJ,UAAU,CAACkB,OAAX,CAAmB+T,MAAnB,GAA4B,CAA5B;QACD;MACF;;MACD5a,EAAE,CAAC0T,aAAH,CAAiB+G,KAAjB,EAAwBrnB,CAAxB,EAA2BuS,UAA3B,EAAuCwD,IAAvC;IACD;;IACDnJ,EAAE,CAAC2T,mBAAH,CAAuBH,aAAvB,EAAsCrK,IAAtC,EAA4C+O,SAA5C;EACD;;EACD7F,yBAAyB,CAACvJ,KAAD,EAAQK,IAAR,EAAc;IACrC,MAAM2B,MAAM,GAAG,KAAK+F,SAAL,CAAe/H,KAAf,CAAf;IACA,IAAInC,MAAM,GAAG,MAAM0L,yBAAN,CAAgCvJ,KAAhC,EAAuCK,IAAvC,CAAb;;IACA,IAAIxC,MAAM,CAACK,OAAX,EAAoB;MAClBL,MAAM,GAAGxB,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkBb,MAAlB,EAA0B;QAACK,OAAO,EAAE;MAAV,CAA1B,CAAT;IACD;;IACD,MAAM4T,MAAM,GAAGjU,MAAM,CAACiU,MAAtB;;IACA,IAAIzR,IAAI,KAAK,QAAb,EAAuB;MACrBxC,MAAM,CAACiU,MAAP,GAAgB,CAAhB;IACD;;IACDjU,MAAM,CAACiU,MAAP,IAAiBjnB,cAAc,CAACmX,MAAM,IAAIA,MAAM,CAACqM,OAAlB,EAA2ByD,MAA3B,CAA/B;IACA,OAAOjU,MAAP;EACD;;AArF8C;;AAuFjD4T,gBAAgB,CAACvQ,EAAjB,GAAsB,QAAtB;AACAuQ,gBAAgB,CAAC9mB,QAAjB,GAA4B;EAC1B0b,kBAAkB,EAAE,KADM;EAE1BqD,eAAe,EAAE,OAFS;EAG1B1M,UAAU,EAAE;IACVd,OAAO,EAAE;MACP5F,IAAI,EAAE,QADC;MAEPuG,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,aAAX,EAA0B,QAA1B;IAFL;EADC;AAHc,CAA5B;AAUA4U,gBAAgB,CAACphB,SAAjB,GAA6B;EAC3BqS,MAAM,EAAE;IACNtV,CAAC,EAAE;MACDkJ,IAAI,EAAE;IADL,CADG;IAINhJ,CAAC,EAAE;MACDgJ,IAAI,EAAE;IADL;EAJG,CADmB;EAS3Byb,OAAO,EAAE;IACPC,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAK,GAAG;UACN,OAAO,EAAP;QACD;;MAHQ;IADJ;EADF;AATkB,CAA7B;;AAoBA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,aAArC,EAAoDC,MAApD,EAA4D;EAC1D,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIC,OAAO,GAAG,CAAd;EACA,IAAIC,OAAO,GAAG,CAAd;;EACA,IAAIL,aAAa,GAAG3lB,GAApB,EAAyB;IACvB,MAAMimB,UAAU,GAAGP,QAAnB;IACA,MAAMQ,QAAQ,GAAGD,UAAU,GAAGN,aAA9B;IACA,MAAMQ,MAAM,GAAG9b,IAAI,CAAC+b,GAAL,CAASH,UAAT,CAAf;IACA,MAAMI,MAAM,GAAGhc,IAAI,CAACic,GAAL,CAASL,UAAT,CAAf;IACA,MAAMM,IAAI,GAAGlc,IAAI,CAAC+b,GAAL,CAASF,QAAT,CAAb;IACA,MAAMM,IAAI,GAAGnc,IAAI,CAACic,GAAL,CAASJ,QAAT,CAAb;;IACA,MAAMO,OAAO,GAAG,CAACC,KAAD,EAAQnpB,CAAR,EAAWQ,CAAX,KAAiBqC,aAAa,CAACsmB,KAAD,EAAQT,UAAR,EAAoBC,QAApB,CAAb,GAA6C,CAA7C,GAAiD7b,IAAI,CAACmC,GAAL,CAASjP,CAAT,EAAYA,CAAC,GAAGqoB,MAAhB,EAAwB7nB,CAAxB,EAA2BA,CAAC,GAAG6nB,MAA/B,CAAlF;;IACA,MAAMe,OAAO,GAAG,CAACD,KAAD,EAAQnpB,CAAR,EAAWQ,CAAX,KAAiBqC,aAAa,CAACsmB,KAAD,EAAQT,UAAR,EAAoBC,QAApB,CAAb,GAA6C,CAAC,CAA9C,GAAkD7b,IAAI,CAACC,GAAL,CAAS/M,CAAT,EAAYA,CAAC,GAAGqoB,MAAhB,EAAwB7nB,CAAxB,EAA2BA,CAAC,GAAG6nB,MAA/B,CAAnF;;IACA,MAAMgB,IAAI,GAAGH,OAAO,CAAC,CAAD,EAAIN,MAAJ,EAAYI,IAAZ,CAApB;IACA,MAAMM,IAAI,GAAGJ,OAAO,CAACnmB,OAAD,EAAU+lB,MAAV,EAAkBG,IAAlB,CAApB;IACA,MAAMM,IAAI,GAAGH,OAAO,CAACnmB,EAAD,EAAK2lB,MAAL,EAAaI,IAAb,CAApB;IACA,MAAMQ,IAAI,GAAGJ,OAAO,CAACnmB,EAAE,GAAGF,OAAN,EAAe+lB,MAAf,EAAuBG,IAAvB,CAApB;IACAX,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAR,IAAgB,CAAzB;IACAhB,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAR,IAAgB,CAAzB;IACAhB,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAT,IAAiB,CAA3B;IACAd,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAT,IAAiB,CAA3B;EACD;;EACD,OAAO;IAAClB,MAAD;IAASC,MAAT;IAAiBC,OAAjB;IAA0BC;EAA1B,CAAP;AACD;;AACD,MAAMgB,kBAAN,SAAiC9P,iBAAjC,CAAmD;EACjDhO,WAAW,CAACQ,KAAD,EAAQmK,YAAR,EAAsB;IAC/B,MAAMnK,KAAN,EAAamK,YAAb;IACA,KAAKiE,mBAAL,GAA2B,IAA3B;IACA,KAAKmP,WAAL,GAAmBzd,SAAnB;IACA,KAAK0d,WAAL,GAAmB1d,SAAnB;IACA,KAAKuc,OAAL,GAAevc,SAAf;IACA,KAAKwc,OAAL,GAAexc,SAAf;EACD;;EACDyO,UAAU,GAAG,CAAE;;EACfuC,KAAK,CAACjQ,KAAD,EAAQkQ,KAAR,EAAe;IAClB,MAAMzG,IAAI,GAAG,KAAKqE,UAAL,GAAkBrE,IAA/B;IACA,MAAMI,IAAI,GAAG,KAAKoB,WAAlB;IACA,IAAI3X,CAAJ,EAAOyV,IAAP;;IACA,KAAKzV,CAAC,GAAG0M,KAAJ,EAAW+I,IAAI,GAAG/I,KAAK,GAAGkQ,KAA/B,EAAsC5c,CAAC,GAAGyV,IAA1C,EAAgD,EAAEzV,CAAlD,EAAqD;MACnDuW,IAAI,CAACyC,OAAL,CAAahZ,CAAb,IAAkB,CAACmW,IAAI,CAACnW,CAAD,CAAvB;IACD;EACF;;EACDspB,YAAY,GAAG;IACb,OAAOznB,SAAS,CAAC,KAAK4R,OAAL,CAAaoU,QAAb,GAAwB,EAAzB,CAAhB;EACD;;EACD0B,iBAAiB,GAAG;IAClB,OAAO1nB,SAAS,CAAC,KAAK4R,OAAL,CAAaqU,aAAd,CAAhB;EACD;;EACD0B,mBAAmB,GAAG;IACpB,IAAI/c,GAAG,GAAGtK,GAAV;IACA,IAAIwM,GAAG,GAAG,CAACxM,GAAX;IACA,MAAMyK,EAAE,GAAG,IAAX;;IACA,KAAK,IAAI5M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4M,EAAE,CAACf,KAAH,CAASsK,IAAT,CAAcoF,QAAd,CAAuBlO,MAA3C,EAAmD,EAAErN,CAArD,EAAwD;MACtD,IAAI4M,EAAE,CAACf,KAAH,CAAS4d,gBAAT,CAA0BzpB,CAA1B,CAAJ,EAAkC;QAChC,MAAMyX,UAAU,GAAG7K,EAAE,CAACf,KAAH,CAAS2P,cAAT,CAAwBxb,CAAxB,EAA2ByX,UAA9C;;QACA,MAAMoQ,QAAQ,GAAGpQ,UAAU,CAAC6R,YAAX,EAAjB;;QACA,MAAMxB,aAAa,GAAGrQ,UAAU,CAAC8R,iBAAX,EAAtB;;QACA9c,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAcob,QAAd,CAAN;QACAlZ,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAckZ,QAAQ,GAAGC,aAAzB,CAAN;MACD;IACF;;IACD,OAAO;MACLD,QAAQ,EAAEpb,GADL;MAELqb,aAAa,EAAEnZ,GAAG,GAAGlC;IAFhB,CAAP;EAID;;EACDyE,MAAM,CAAC6E,IAAD,EAAO;IACX,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAM;MAACiT;IAAD,IAAcjT,KAApB;IACA,MAAM0K,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAM+R,IAAI,GAAGnT,IAAI,CAACJ,IAAlB;IACA,MAAMwT,OAAO,GAAG/c,EAAE,CAACgd,iBAAH,KAAyBhd,EAAE,CAACid,YAAH,CAAgBH,IAAhB,CAAzC;IACA,MAAMI,OAAO,GAAGtd,IAAI,CAACmC,GAAL,CAAS,CAACnC,IAAI,CAACC,GAAL,CAASqS,SAAS,CAACwG,KAAnB,EAA0BxG,SAAS,CAACuG,MAApC,IAA8CsE,OAA/C,IAA0D,CAAnE,EAAsE,CAAtE,CAAhB;IACA,MAAM5B,MAAM,GAAGvb,IAAI,CAACC,GAAL,CAAS1K,YAAY,CAAC6K,EAAE,CAAC6G,OAAH,CAAWsU,MAAZ,EAAoB+B,OAApB,CAArB,EAAmD,CAAnD,CAAf;;IACA,MAAMC,WAAW,GAAGnd,EAAE,CAACod,cAAH,CAAkBpd,EAAE,CAAC8I,KAArB,CAApB;;IACA,MAAM;MAACoS,aAAD;MAAgBD;IAAhB,IAA4Bjb,EAAE,CAAC4c,mBAAH,EAAlC;;IACA,MAAM;MAACxB,MAAD;MAASC,MAAT;MAAiBC,OAAjB;MAA0BC;IAA1B,IAAqCP,iBAAiB,CAACC,QAAD,EAAWC,aAAX,EAA0BC,MAA1B,CAA5D;IACA,MAAMkC,QAAQ,GAAG,CAACnL,SAAS,CAACwG,KAAV,GAAkBqE,OAAnB,IAA8B3B,MAA/C;IACA,MAAMkC,SAAS,GAAG,CAACpL,SAAS,CAACuG,MAAV,GAAmBsE,OAApB,IAA+B1B,MAAjD;IACA,MAAMkC,SAAS,GAAG3d,IAAI,CAACmC,GAAL,CAASnC,IAAI,CAACC,GAAL,CAASwd,QAAT,EAAmBC,SAAnB,IAAgC,CAAzC,EAA4C,CAA5C,CAAlB;IACA,MAAMb,WAAW,GAAGpnB,WAAW,CAAC2K,EAAE,CAAC6G,OAAH,CAAW+T,MAAZ,EAAoB2C,SAApB,CAA/B;IACA,MAAMf,WAAW,GAAG5c,IAAI,CAACmC,GAAL,CAAS0a,WAAW,GAAGtB,MAAvB,EAA+B,CAA/B,CAApB;;IACA,MAAMqC,YAAY,GAAG,CAACf,WAAW,GAAGD,WAAf,IAA8Bxc,EAAE,CAACyd,6BAAH,EAAnD;;IACAzd,EAAE,CAACsb,OAAH,GAAaA,OAAO,GAAGmB,WAAvB;IACAzc,EAAE,CAACub,OAAH,GAAaA,OAAO,GAAGkB,WAAvB;IACA9S,IAAI,CAAC+T,KAAL,GAAa1d,EAAE,CAAC2d,cAAH,EAAb;IACA3d,EAAE,CAACyc,WAAH,GAAiBA,WAAW,GAAGe,YAAY,GAAGxd,EAAE,CAAC4d,oBAAH,CAAwB5d,EAAE,CAAC8I,KAA3B,CAA9C;IACA9I,EAAE,CAACwc,WAAH,GAAiB5c,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAACyc,WAAH,GAAiBe,YAAY,GAAGL,WAAzC,EAAsD,CAAtD,CAAjB;IACAnd,EAAE,CAACuU,cAAH,CAAkBuI,IAAlB,EAAwB,CAAxB,EAA2BA,IAAI,CAACrc,MAAhC,EAAwC0I,IAAxC;EACD;;EACD0U,cAAc,CAACzqB,CAAD,EAAI2b,KAAJ,EAAW;IACvB,MAAM/O,EAAE,GAAG,IAAX;IACA,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;IACA,MAAM8C,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;;IACA,MAAMmQ,aAAa,GAAGlb,EAAE,CAAC2c,iBAAH,EAAtB;;IACA,IAAK5N,KAAK,IAAIjH,IAAI,CAACzC,SAAL,CAAeyY,aAAzB,IAA2C,CAAC,KAAK7e,KAAL,CAAWua,iBAAX,CAA6BpmB,CAA7B,CAA5C,IAA+EuW,IAAI,CAACyC,OAAL,CAAahZ,CAAb,MAAoB,IAAvG,EAA6G;MAC3G,OAAO,CAAP;IACD;;IACD,OAAO4M,EAAE,CAAC+d,sBAAH,CAA0BpU,IAAI,CAACyC,OAAL,CAAahZ,CAAb,IAAkB8nB,aAAlB,GAAkC3lB,GAA5D,CAAP;EACD;;EACDgf,cAAc,CAACuI,IAAD,EAAOhd,KAAP,EAAckQ,KAAd,EAAqB7G,IAArB,EAA2B;IACvC,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAvB;IACA,MAAMlK,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAMiT,SAAS,GAAGjT,KAAK,CAACiT,SAAxB;IACA,MAAMpK,IAAI,GAAG7I,KAAK,CAAC4H,OAAnB;IACA,MAAMmX,aAAa,GAAGlW,IAAI,CAACzC,SAA3B;IACA,MAAM4Y,OAAO,GAAG,CAAC/L,SAAS,CAAC3J,IAAV,GAAiB2J,SAAS,CAAC7J,KAA5B,IAAqC,CAArD;IACA,MAAM6V,OAAO,GAAG,CAAChM,SAAS,CAAC9J,GAAV,GAAgB8J,SAAS,CAAC5J,MAA3B,IAAqC,CAArD;IACA,MAAM6V,YAAY,GAAGpP,KAAK,IAAIiP,aAAa,CAACG,YAA5C;IACA,MAAM3B,WAAW,GAAG2B,YAAY,GAAG,CAAH,GAAOne,EAAE,CAACwc,WAA1C;IACA,MAAMC,WAAW,GAAG0B,YAAY,GAAG,CAAH,GAAOne,EAAE,CAACyc,WAA1C;IACA,MAAMvE,SAAS,GAAGlY,EAAE,CAACqS,yBAAH,CAA6BvS,KAA7B,EAAoCqJ,IAApC,CAAlB;IACA,MAAMqK,aAAa,GAAGxT,EAAE,CAACsT,gBAAH,CAAoB4E,SAApB,CAAtB;IACA,MAAM3E,cAAc,GAAGvT,EAAE,CAACuT,cAAH,CAAkBpK,IAAlB,EAAwBqK,aAAxB,CAAvB;;IACA,IAAIgI,UAAU,GAAGxb,EAAE,CAAC0c,YAAH,EAAjB;;IACA,IAAItpB,CAAJ;;IACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0M,KAAhB,EAAuB,EAAE1M,CAAzB,EAA4B;MAC1BooB,UAAU,IAAIxb,EAAE,CAAC6d,cAAH,CAAkBzqB,CAAlB,EAAqB2b,KAArB,CAAd;IACD;;IACD,KAAK3b,CAAC,GAAG0M,KAAT,EAAgB1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAA5B,EAAmC,EAAE5c,CAArC,EAAwC;MACtC,MAAM8nB,aAAa,GAAGlb,EAAE,CAAC6d,cAAH,CAAkBzqB,CAAlB,EAAqB2b,KAArB,CAAtB;;MACA,MAAMqP,GAAG,GAAGtB,IAAI,CAAC1pB,CAAD,CAAhB;MACA,MAAMuS,UAAU,GAAG;QACjBzP,CAAC,EAAE+nB,OAAO,GAAGje,EAAE,CAACsb,OADC;QAEjBllB,CAAC,EAAE8nB,OAAO,GAAGle,EAAE,CAACub,OAFC;QAGjBC,UAHiB;QAIjBC,QAAQ,EAAED,UAAU,GAAGN,aAJN;QAKjBA,aALiB;QAMjBuB,WANiB;QAOjBD;MAPiB,CAAnB;;MASA,IAAIjJ,cAAJ,EAAoB;QAClB5N,UAAU,CAACkB,OAAX,GAAqB2M,aAAa,IAAIxT,EAAE,CAACqS,yBAAH,CAA6Bjf,CAA7B,EAAgC+V,IAAhC,CAAtC;MACD;;MACDqS,UAAU,IAAIN,aAAd;MACAlb,EAAE,CAAC0T,aAAH,CAAiB0K,GAAjB,EAAsBhrB,CAAtB,EAAyBuS,UAAzB,EAAqCwD,IAArC;IACD;;IACDnJ,EAAE,CAAC2T,mBAAH,CAAuBH,aAAvB,EAAsCrK,IAAtC,EAA4C+O,SAA5C;EACD;;EACDyF,cAAc,GAAG;IACf,MAAMhU,IAAI,GAAG,KAAKoB,WAAlB;IACA,MAAMsT,QAAQ,GAAG1U,IAAI,CAACJ,IAAtB;IACA,IAAImU,KAAK,GAAG,CAAZ;IACA,IAAItqB,CAAJ;;IACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGirB,QAAQ,CAAC5d,MAAzB,EAAiCrN,CAAC,EAAlC,EAAsC;MACpC,MAAMkU,KAAK,GAAGqC,IAAI,CAACyC,OAAL,CAAahZ,CAAb,CAAd;;MACA,IAAIkU,KAAK,KAAK,IAAV,IAAkB,CAACwR,KAAK,CAACxR,KAAD,CAAxB,IAAmC,KAAKrI,KAAL,CAAWua,iBAAX,CAA6BpmB,CAA7B,CAAvC,EAAwE;QACtEsqB,KAAK,IAAI9d,IAAI,CAACgW,GAAL,CAAStO,KAAT,CAAT;MACD;IACF;;IACD,OAAOoW,KAAP;EACD;;EACDK,sBAAsB,CAACzW,KAAD,EAAQ;IAC5B,MAAMoW,KAAK,GAAG,KAAK3S,WAAL,CAAiB2S,KAA/B;;IACA,IAAIA,KAAK,GAAG,CAAR,IAAa,CAAC5E,KAAK,CAACxR,KAAD,CAAvB,EAAgC;MAC9B,OAAO/R,GAAG,IAAIqK,IAAI,CAACgW,GAAL,CAAStO,KAAT,IAAkBoW,KAAtB,CAAV;IACD;;IACD,OAAO,CAAP;EACD;;EACD/L,gBAAgB,CAAC7I,KAAD,EAAQ;IACtB,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAM9L,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAMuR,MAAM,GAAGvR,KAAK,CAACsK,IAAN,CAAWiH,MAAX,IAAqB,EAApC;IACA,MAAMlJ,KAAK,GAAG7R,YAAY,CAACkU,IAAI,CAACyC,OAAL,CAAatD,KAAb,CAAD,EAAsB7J,KAAK,CAAC4H,OAAN,CAAcyX,MAApC,CAA1B;IACA,OAAO;MACL1M,KAAK,EAAEpB,MAAM,CAAC1H,KAAD,CAAN,IAAiB,EADnB;MAELxB;IAFK,CAAP;EAID;;EACD0V,iBAAiB,CAACF,IAAD,EAAO;IACtB,MAAM9c,EAAE,GAAG,IAAX;IACA,IAAI+B,GAAG,GAAG,CAAV;IACA,MAAM9C,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,IAAI7L,CAAJ,EAAOyV,IAAP,EAAac,IAAb,EAAmBkB,UAAnB,EAA+BhE,OAA/B;;IACA,IAAI,CAACiW,IAAL,EAAW;MACT,KAAK1pB,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAG5J,KAAK,CAACsK,IAAN,CAAWoF,QAAX,CAAoBlO,MAAvC,EAA+CrN,CAAC,GAAGyV,IAAnD,EAAyD,EAAEzV,CAA3D,EAA8D;QAC5D,IAAI6L,KAAK,CAAC4d,gBAAN,CAAuBzpB,CAAvB,CAAJ,EAA+B;UAC7BuW,IAAI,GAAG1K,KAAK,CAAC2P,cAAN,CAAqBxb,CAArB,CAAP;UACA0pB,IAAI,GAAGnT,IAAI,CAACJ,IAAZ;UACAsB,UAAU,GAAGlB,IAAI,CAACkB,UAAlB;;UACA,IAAIA,UAAU,KAAK7K,EAAnB,EAAuB;YACrB6K,UAAU,CAACxE,SAAX;UACD;;UACD;QACD;MACF;IACF;;IACD,IAAI,CAACyW,IAAL,EAAW;MACT,OAAO,CAAP;IACD;;IACD,KAAK1pB,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGiU,IAAI,CAACrc,MAAxB,EAAgCrN,CAAC,GAAGyV,IAApC,EAA0C,EAAEzV,CAA5C,EAA+C;MAC7CyT,OAAO,GAAGgE,UAAU,CAACwH,yBAAX,CAAqCjf,CAArC,CAAV;;MACA,IAAIyT,OAAO,CAAC0X,WAAR,KAAwB,OAA5B,EAAqC;QACnCxc,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAc8E,OAAO,CAAC2X,WAAR,IAAuB,CAArC,EAAwC3X,OAAO,CAAC4X,gBAAR,IAA4B,CAApE,CAAN;MACD;IACF;;IACD,OAAO1c,GAAP;EACD;;EACDkb,YAAY,CAACH,IAAD,EAAO;IACjB,IAAI/a,GAAG,GAAG,CAAV;;IACA,KAAK,IAAI3O,CAAC,GAAG,CAAR,EAAWyV,IAAI,GAAGiU,IAAI,CAACrc,MAA5B,EAAoCrN,CAAC,GAAGyV,IAAxC,EAA8C,EAAEzV,CAAhD,EAAmD;MACjD,MAAMyT,OAAO,GAAG,KAAKwL,yBAAL,CAA+Bjf,CAA/B,CAAhB;MACA2O,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAc8E,OAAO,CAACsT,MAAR,IAAkB,CAAhC,EAAmCtT,OAAO,CAAC6X,WAAR,IAAuB,CAA1D,CAAN;IACD;;IACD,OAAO3c,GAAP;EACD;;EACD6b,oBAAoB,CAACxU,YAAD,EAAe;IACjC,IAAIuV,gBAAgB,GAAG,CAAvB;;IACA,KAAK,IAAIvrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgW,YAApB,EAAkC,EAAEhW,CAApC,EAAuC;MACrC,IAAI,KAAK6L,KAAL,CAAW4d,gBAAX,CAA4BzpB,CAA5B,CAAJ,EAAoC;QAClCurB,gBAAgB,IAAI,KAAKvB,cAAL,CAAoBhqB,CAApB,CAApB;MACD;IACF;;IACD,OAAOurB,gBAAP;EACD;;EACDvB,cAAc,CAAChU,YAAD,EAAe;IAC3B,OAAOxJ,IAAI,CAACmC,GAAL,CAASpO,cAAc,CAAC,KAAKsL,KAAL,CAAWsK,IAAX,CAAgBoF,QAAhB,CAAyBvF,YAAzB,EAAuCwV,MAAxC,EAAgD,CAAhD,CAAvB,EAA2E,CAA3E,CAAP;EACD;;EACDnB,6BAA6B,GAAG;IAC9B,OAAO,KAAKG,oBAAL,CAA0B,KAAK3e,KAAL,CAAWsK,IAAX,CAAgBoF,QAAhB,CAAyBlO,MAAnD,KAA8D,CAArE;EACD;;AAvMgD;;AAyMnD8b,kBAAkB,CAACvS,EAAnB,GAAwB,UAAxB;AACAuS,kBAAkB,CAAC9oB,QAAnB,GAA8B;EAC5B0b,kBAAkB,EAAE,KADQ;EAE5BqD,eAAe,EAAE,KAFW;EAG5BnN,SAAS,EAAE;IACTyY,aAAa,EAAE,IADN;IAETK,YAAY,EAAE;EAFL,CAHiB;EAO5BrY,UAAU,EAAE;IACVd,OAAO,EAAE;MACP5F,IAAI,EAAE,QADC;MAEPuG,UAAU,EAAE,CAAC,eAAD,EAAkB,UAAlB,EAA8B,aAA9B,EAA6C,aAA7C,EAA4D,YAA5D,EAA0E,GAA1E,EAA+E,GAA/E,EAAoF,QAApF,EAA8F,aAA9F;IAFL;EADC,CAPgB;EAa5BwV,MAAM,EAAE,KAboB;EAc5BF,QAAQ,EAAE,CAdkB;EAe5BC,aAAa,EAAE,GAfa;EAgB5BN,MAAM,EAAE,MAhBoB;EAiB5BxM,SAAS,EAAE;AAjBiB,CAA9B;AAmBAmO,kBAAkB,CAACpjB,SAAnB,GAA+B;EAC7B0lB,WAAW,EAAE,CADgB;EAE7BhE,OAAO,EAAE;IACPiE,MAAM,EAAE;MACNtO,MAAM,EAAE;QACNuO,cAAc,CAAC9f,KAAD,EAAQ;UACpB,MAAMsK,IAAI,GAAGtK,KAAK,CAACsK,IAAnB;;UACA,IAAIA,IAAI,CAACiH,MAAL,CAAY/P,MAAZ,IAAsB8I,IAAI,CAACoF,QAAL,CAAclO,MAAxC,EAAgD;YAC9C,OAAO8I,IAAI,CAACiH,MAAL,CAAYwO,GAAZ,CAAgB,CAACpN,KAAD,EAAQxe,CAAR,KAAc;cACnC,MAAMuW,IAAI,GAAG1K,KAAK,CAAC2P,cAAN,CAAqB,CAArB,CAAb;cACA,MAAMqQ,KAAK,GAAGtV,IAAI,CAACkB,UAAL,CAAgBsH,QAAhB,CAAyB/e,CAAzB,CAAd;cACA,OAAO;gBACL8rB,IAAI,EAAEtN,KADD;gBAELuN,SAAS,EAAEF,KAAK,CAACG,eAFZ;gBAGLC,WAAW,EAAEJ,KAAK,CAACK,WAHd;gBAILC,SAAS,EAAEN,KAAK,CAACT,WAJZ;gBAKLgB,MAAM,EAAE,CAACvgB,KAAK,CAACua,iBAAN,CAAwBpmB,CAAxB,CALJ;gBAML0V,KAAK,EAAE1V;cANF,CAAP;YAQD,CAXM,CAAP;UAYD;;UACD,OAAO,EAAP;QACD;;MAlBK,CADF;;MAqBNqsB,OAAO,CAACzsB,CAAD,EAAI0sB,UAAJ,EAAgBZ,MAAhB,EAAwB;QAC7BA,MAAM,CAAC7f,KAAP,CAAa0gB,oBAAb,CAAkCD,UAAU,CAAC5W,KAA7C;QACAgW,MAAM,CAAC7f,KAAP,CAAaqF,MAAb;MACD;;IAxBK,CADD;IA2BPwW,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAK,GAAG;UACN,OAAO,EAAP;QACD,CAHQ;;QAITnJ,KAAK,CAACgO,WAAD,EAAc;UACjB,IAAIC,SAAS,GAAGD,WAAW,CAAChO,KAA5B;UACA,MAAMtK,KAAK,GAAG,OAAOsY,WAAW,CAACE,cAAjC;;UACA,IAAIvsB,OAAO,CAACssB,SAAD,CAAX,EAAwB;YACtBA,SAAS,GAAGA,SAAS,CAACE,KAAV,EAAZ;YACAF,SAAS,CAAC,CAAD,CAAT,IAAgBvY,KAAhB;UACD,CAHD,MAGO;YACLuY,SAAS,IAAIvY,KAAb;UACD;;UACD,OAAOuY,SAAP;QACD;;MAdQ;IADJ;EA3BF;AAFoB,CAA/B;;AAkDA,MAAMG,cAAN,SAA6BvT,iBAA7B,CAA+C;EAC7Cc,UAAU,GAAG;IACX,KAAKF,mBAAL,GAA2B,IAA3B;IACA,MAAME,UAAN;EACD;;EACDjJ,MAAM,CAAC6E,IAAD,EAAO;IACX,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAM;MAACe,OAAO,EAAEmU,IAAV;MAAgB1W,IAAI,EAAEiR,MAAM,GAAG,EAA/B;MAAmC0F;IAAnC,IAA+CvW,IAArD;IACA,MAAMwW,kBAAkB,GAAGngB,EAAE,CAACf,KAAH,CAASwU,mBAApC;IACA,IAAI;MAAC3T,KAAD;MAAQkQ;IAAR,IAAiBoQ,+BAA+B,CAACzW,IAAD,EAAO6Q,MAAP,EAAe2F,kBAAf,CAApD;IACAngB,EAAE,CAACmN,UAAH,GAAgBrN,KAAhB;IACAE,EAAE,CAACoN,UAAH,GAAgB4C,KAAhB;;IACA,IAAIqQ,kBAAkB,CAAC1W,IAAD,CAAtB,EAA8B;MAC5B7J,KAAK,GAAG,CAAR;MACAkQ,KAAK,GAAGwK,MAAM,CAAC/Z,MAAf;IACD;;IACDwf,IAAI,CAACK,UAAL,GAAkB,CAAC,CAACJ,QAAQ,CAACI,UAA7B;IACAL,IAAI,CAACzF,MAAL,GAAcA,MAAd;;IACA,IAAIrR,IAAI,KAAK,QAAb,EAAuB;MACrB,MAAMtC,OAAO,GAAG7G,EAAE,CAACoS,4BAAH,CAAgCjJ,IAAhC,CAAhB;;MACA,IAAI,CAACnJ,EAAE,CAAC6G,OAAH,CAAW0Z,QAAhB,EAA0B;QACxB1Z,OAAO,CAAC2X,WAAR,GAAsB,CAAtB;MACD;;MACDxe,EAAE,CAAC0T,aAAH,CAAiBuM,IAAjB,EAAuBlhB,SAAvB,EAAkC;QAChCyhB,QAAQ,EAAE,CAACL,kBADqB;QAEhCtZ;MAFgC,CAAlC,EAGGsC,IAHH;IAID;;IACDnJ,EAAE,CAACuU,cAAH,CAAkBiG,MAAlB,EAA0B1a,KAA1B,EAAiCkQ,KAAjC,EAAwC7G,IAAxC;EACD;;EACDoL,cAAc,CAACiG,MAAD,EAAS1a,KAAT,EAAgBkQ,KAAhB,EAAuB7G,IAAvB,EAA6B;IACzC,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAvB;IACA,MAAM;MAACjB,MAAD;MAASC,MAAT;MAAiBsF;IAAjB,IAA6BzN,EAAE,CAAC+K,WAAtC;IACA,MAAMmN,SAAS,GAAGlY,EAAE,CAACqS,yBAAH,CAA6BvS,KAA7B,EAAoCqJ,IAApC,CAAlB;IACA,MAAMqK,aAAa,GAAGxT,EAAE,CAACsT,gBAAH,CAAoB4E,SAApB,CAAtB;IACA,MAAM3E,cAAc,GAAGvT,EAAE,CAACuT,cAAH,CAAkBpK,IAAlB,EAAwBqK,aAAxB,CAAvB;IACA,MAAMiN,QAAQ,GAAGzgB,EAAE,CAAC6G,OAAH,CAAW4Z,QAA5B;IACA,MAAMC,YAAY,GAAGzqB,QAAQ,CAACwqB,QAAD,CAAR,GAAqBA,QAArB,GAAgCrW,MAAM,CAACE,iBAA5D;IACA,MAAMqW,YAAY,GAAG3gB,EAAE,CAACf,KAAH,CAASwU,mBAAT,IAAgC1E,KAAhC,IAAyC5F,IAAI,KAAK,MAAvE;IACA,IAAIyX,UAAU,GAAG9gB,KAAK,GAAG,CAAR,IAAaE,EAAE,CAAC6Q,SAAH,CAAa/Q,KAAK,GAAG,CAArB,CAA9B;;IACA,KAAK,IAAI1M,CAAC,GAAG0M,KAAb,EAAoB1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAhC,EAAuC,EAAE5c,CAAzC,EAA4C;MAC1C,MAAMqnB,KAAK,GAAGD,MAAM,CAACpnB,CAAD,CAApB;MACA,MAAM0X,MAAM,GAAG9K,EAAE,CAAC6Q,SAAH,CAAazd,CAAb,CAAf;MACA,MAAMuS,UAAU,GAAGgb,YAAY,GAAGlG,KAAH,GAAW,EAA1C;MACA,MAAMvkB,CAAC,GAAGyP,UAAU,CAACzP,CAAX,GAAegS,MAAM,CAAC2N,gBAAP,CAAwB/K,MAAM,CAAC5U,CAA/B,EAAkC9C,CAAlC,CAAzB;MACA,MAAMgD,CAAC,GAAGuP,UAAU,CAACvP,CAAX,GAAe2Y,KAAK,GAAG5G,MAAM,CAAC2P,YAAP,EAAH,GAA2B3P,MAAM,CAAC0N,gBAAP,CAAwBpI,QAAQ,GAAGzN,EAAE,CAAC+I,UAAH,CAAcZ,MAAd,EAAsB2C,MAAtB,EAA8B2C,QAA9B,CAAH,GAA6C3C,MAAM,CAAC1U,CAApF,EAAuFhD,CAAvF,CAAzD;MACAuS,UAAU,CAACgV,IAAX,GAAkB7B,KAAK,CAAC5iB,CAAD,CAAL,IAAY4iB,KAAK,CAAC1iB,CAAD,CAAnC;MACAuP,UAAU,CAAC1D,IAAX,GAAkB7O,CAAC,GAAG,CAAJ,IAAU0X,MAAM,CAAC5U,CAAP,GAAW0qB,UAAU,CAAC1qB,CAAvB,GAA4BwqB,YAAvD;;MACA,IAAInN,cAAJ,EAAoB;QAClB5N,UAAU,CAACkB,OAAX,GAAqB2M,aAAa,IAAIxT,EAAE,CAACqS,yBAAH,CAA6Bjf,CAA7B,EAAgC+V,IAAhC,CAAtC;MACD;;MACD,IAAI,CAACwX,YAAL,EAAmB;QACjB3gB,EAAE,CAAC0T,aAAH,CAAiB+G,KAAjB,EAAwBrnB,CAAxB,EAA2BuS,UAA3B,EAAuCwD,IAAvC;MACD;;MACDyX,UAAU,GAAG9V,MAAb;IACD;;IACD9K,EAAE,CAAC2T,mBAAH,CAAuBH,aAAvB,EAAsCrK,IAAtC,EAA4C+O,SAA5C;EACD;;EACDxG,cAAc,GAAG;IACf,MAAM1R,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAMe,OAAO,GAAGnC,IAAI,CAACmC,OAArB;IACA,MAAM+U,MAAM,GAAG/U,OAAO,CAACjF,OAAR,IAAmBiF,OAAO,CAACjF,OAAR,CAAgB2X,WAAnC,IAAkD,CAAjE;IACA,MAAMjV,IAAI,GAAGI,IAAI,CAACJ,IAAL,IAAa,EAA1B;;IACA,IAAI,CAACA,IAAI,CAAC9I,MAAV,EAAkB;MAChB,OAAOogB,MAAP;IACD;;IACD,MAAMC,UAAU,GAAGvX,IAAI,CAAC,CAAD,CAAJ,CAAQhC,IAAR,CAAavH,EAAE,CAACqS,yBAAH,CAA6B,CAA7B,CAAb,CAAnB;IACA,MAAM0O,SAAS,GAAGxX,IAAI,CAACA,IAAI,CAAC9I,MAAL,GAAc,CAAf,CAAJ,CAAsB8G,IAAtB,CAA2BvH,EAAE,CAACqS,yBAAH,CAA6B9I,IAAI,CAAC9I,MAAL,GAAc,CAA3C,CAA3B,CAAlB;IACA,OAAOb,IAAI,CAACmC,GAAL,CAAS8e,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,IAA0C,CAAjD;EACD;;EACDrgB,IAAI,GAAG;IACL,KAAKqK,WAAL,CAAiBe,OAAjB,CAAyBkV,mBAAzB,CAA6C,KAAK/hB,KAAL,CAAWiT,SAAxD;;IACA,MAAMxR,IAAN;EACD;;AA5E4C;;AA8E/Csf,cAAc,CAAChW,EAAf,GAAoB,MAApB;AACAgW,cAAc,CAACvsB,QAAf,GAA0B;EACxB0b,kBAAkB,EAAE,MADI;EAExBqD,eAAe,EAAE,OAFO;EAGxB+N,QAAQ,EAAE,IAHc;EAIxBE,QAAQ,EAAE;AAJc,CAA1B;AAMAT,cAAc,CAAC7mB,SAAf,GAA2B;EACzBqS,MAAM,EAAE;IACN0O,OAAO,EAAE;MACP9a,IAAI,EAAE;IADC,CADH;IAINib,OAAO,EAAE;MACPjb,IAAI,EAAE;IADC;EAJH;AADiB,CAA3B;;AAUA,SAASghB,+BAAT,CAAyCzW,IAAzC,EAA+C6Q,MAA/C,EAAuD2F,kBAAvD,EAA2E;EACzE,MAAMc,UAAU,GAAGzG,MAAM,CAAC/Z,MAA1B;EACA,IAAIX,KAAK,GAAG,CAAZ;EACA,IAAIkQ,KAAK,GAAGiR,UAAZ;;EACA,IAAItX,IAAI,CAACuG,OAAT,EAAkB;IAChB,MAAM;MAACjF,MAAD;MAASmB;IAAT,IAAoBzC,IAA1B;IACA,MAAMyB,IAAI,GAAGH,MAAM,CAACG,IAApB;IACA,MAAM;MAACvL,GAAD;MAAMkC,GAAN;MAAWmI,UAAX;MAAuBC;IAAvB,IAAqCc,MAAM,CAAChB,aAAP,EAA3C;;IACA,IAAIC,UAAJ,EAAgB;MACdpK,KAAK,GAAG3J,WAAW,CAACyJ,IAAI,CAACC,GAAL,CAClBxJ,YAAY,CAAC+V,OAAD,EAAUnB,MAAM,CAACG,IAAjB,EAAuBvL,GAAvB,CAAZ,CAAwCqhB,EADtB,EAElBf,kBAAkB,GAAGc,UAAH,GAAgB5qB,YAAY,CAACmkB,MAAD,EAASpP,IAAT,EAAeH,MAAM,CAAC4K,gBAAP,CAAwBhW,GAAxB,CAAf,CAAZ,CAAyDqhB,EAFzE,CAAD,EAGnB,CAHmB,EAGhBD,UAAU,GAAG,CAHG,CAAnB;IAID;;IACD,IAAI9W,UAAJ,EAAgB;MACd6F,KAAK,GAAG7Z,WAAW,CAACyJ,IAAI,CAACmC,GAAL,CAClB1L,YAAY,CAAC+V,OAAD,EAAUnB,MAAM,CAACG,IAAjB,EAAuBrJ,GAAvB,CAAZ,CAAwCof,EAAxC,GAA6C,CAD3B,EAElBhB,kBAAkB,GAAG,CAAH,GAAO9pB,YAAY,CAACmkB,MAAD,EAASpP,IAAT,EAAeH,MAAM,CAAC4K,gBAAP,CAAwB9T,GAAxB,CAAf,CAAZ,CAAyDof,EAAzD,GAA8D,CAFrE,CAAD,EAGnBrhB,KAHmB,EAGZmhB,UAHY,CAAX,GAGanhB,KAHrB;IAID,CALD,MAKO;MACLkQ,KAAK,GAAGiR,UAAU,GAAGnhB,KAArB;IACD;EACF;;EACD,OAAO;IAACA,KAAD;IAAQkQ;EAAR,CAAP;AACD;;AACD,SAASqQ,kBAAT,CAA4B1W,IAA5B,EAAkC;EAChC,MAAM;IAACzB,MAAD;IAASC,MAAT;IAAiBiZ;EAAjB,IAAiCzX,IAAvC;EACA,MAAM0X,SAAS,GAAG;IAChBC,IAAI,EAAEpZ,MAAM,CAACrI,GADG;IAEhB0hB,IAAI,EAAErZ,MAAM,CAACnG,GAFG;IAGhByf,IAAI,EAAErZ,MAAM,CAACtI,GAHG;IAIhB4hB,IAAI,EAAEtZ,MAAM,CAACpG;EAJG,CAAlB;;EAMA,IAAI,CAACqf,YAAL,EAAmB;IACjBzX,IAAI,CAACyX,YAAL,GAAoBC,SAApB;IACA,OAAO,IAAP;EACD;;EACD,MAAMK,OAAO,GAAGN,YAAY,CAACE,IAAb,KAAsBpZ,MAAM,CAACrI,GAA7B,IACbuhB,YAAY,CAACG,IAAb,KAAsBrZ,MAAM,CAACnG,GADhB,IAEbqf,YAAY,CAACI,IAAb,KAAsBrZ,MAAM,CAACtI,GAFhB,IAGbuhB,YAAY,CAACK,IAAb,KAAsBtZ,MAAM,CAACpG,GAHhC;EAIAoD,MAAM,CAACqC,MAAP,CAAc4Z,YAAd,EAA4BC,SAA5B;EACA,OAAOK,OAAP;AACD;;AAED,MAAMC,mBAAN,SAAkClV,iBAAlC,CAAoD;EAClDhO,WAAW,CAACQ,KAAD,EAAQmK,YAAR,EAAsB;IAC/B,MAAMnK,KAAN,EAAamK,YAAb;IACA,KAAKoT,WAAL,GAAmBzd,SAAnB;IACA,KAAK0d,WAAL,GAAmB1d,SAAnB;EACD;;EACDuF,MAAM,CAAC6E,IAAD,EAAO;IACX,MAAM2T,IAAI,GAAG,KAAK/R,WAAL,CAAiBxB,IAA9B;;IACA,KAAKqY,aAAL;;IACA,KAAKrN,cAAL,CAAoBuI,IAApB,EAA0B,CAA1B,EAA6BA,IAAI,CAACrc,MAAlC,EAA0C0I,IAA1C;EACD;;EACDyY,aAAa,GAAG;IACd,MAAM5hB,EAAE,GAAG,IAAX;IACA,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAMiT,SAAS,GAAGjT,KAAK,CAACiT,SAAxB;IACA,MAAMpK,IAAI,GAAG7I,KAAK,CAAC4H,OAAnB;IACA,MAAMgb,OAAO,GAAGjiB,IAAI,CAACC,GAAL,CAASqS,SAAS,CAAC7J,KAAV,GAAkB6J,SAAS,CAAC3J,IAArC,EAA2C2J,SAAS,CAAC5J,MAAV,GAAmB4J,SAAS,CAAC9J,GAAxE,CAAhB;IACA,MAAMqU,WAAW,GAAG7c,IAAI,CAACmC,GAAL,CAAS8f,OAAO,GAAG,CAAnB,EAAsB,CAAtB,CAApB;IACA,MAAMrF,WAAW,GAAG5c,IAAI,CAACmC,GAAL,CAAS+F,IAAI,CAACga,gBAAL,GAAyBrF,WAAW,GAAG,GAAf,GAAuB3U,IAAI,CAACga,gBAApD,GAAwE,CAAjF,EAAoF,CAApF,CAApB;IACA,MAAMtE,YAAY,GAAG,CAACf,WAAW,GAAGD,WAAf,IAA8Bvd,KAAK,CAAC8iB,sBAAN,EAAnD;IACA/hB,EAAE,CAACyc,WAAH,GAAiBA,WAAW,GAAIe,YAAY,GAAGxd,EAAE,CAAC8I,KAAlD;IACA9I,EAAE,CAACwc,WAAH,GAAiBxc,EAAE,CAACyc,WAAH,GAAiBe,YAAlC;EACD;;EACDjJ,cAAc,CAACuI,IAAD,EAAOhd,KAAP,EAAckQ,KAAd,EAAqB7G,IAArB,EAA2B;IACvC,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM+O,KAAK,GAAG5F,IAAI,KAAK,OAAvB;IACA,MAAMlK,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAM6M,OAAO,GAAG9L,EAAE,CAAC4N,UAAH,EAAhB;IACA,MAAM9F,IAAI,GAAG7I,KAAK,CAAC4H,OAAnB;IACA,MAAMmX,aAAa,GAAGlW,IAAI,CAACzC,SAA3B;IACA,MAAMuC,KAAK,GAAG5H,EAAE,CAAC+K,WAAH,CAAe2D,MAA7B;IACA,MAAMuP,OAAO,GAAGrW,KAAK,CAACoa,OAAtB;IACA,MAAM9D,OAAO,GAAGtW,KAAK,CAACqa,OAAtB;IACA,MAAMC,iBAAiB,GAAGta,KAAK,CAACua,aAAN,CAAoB,CAApB,IAAyB,MAAMpsB,EAAzD;IACA,IAAIkmB,KAAK,GAAGiG,iBAAZ;IACA,IAAI9uB,CAAJ;IACA,MAAMgvB,YAAY,GAAG,MAAMpiB,EAAE,CAACqiB,oBAAH,EAA3B;;IACA,KAAKjvB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0M,KAAhB,EAAuB,EAAE1M,CAAzB,EAA4B;MAC1B6oB,KAAK,IAAIjc,EAAE,CAACsiB,aAAH,CAAiBlvB,CAAjB,EAAoB+V,IAApB,EAA0BiZ,YAA1B,CAAT;IACD;;IACD,KAAKhvB,CAAC,GAAG0M,KAAT,EAAgB1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAA5B,EAAmC5c,CAAC,EAApC,EAAwC;MACtC,MAAMgrB,GAAG,GAAGtB,IAAI,CAAC1pB,CAAD,CAAhB;MACA,IAAIooB,UAAU,GAAGS,KAAjB;;MACA,IAAIR,QAAQ,GAAGQ,KAAK,GAAGjc,EAAE,CAACsiB,aAAH,CAAiBlvB,CAAjB,EAAoB+V,IAApB,EAA0BiZ,YAA1B,CAAvB;;MACA,IAAI3F,WAAW,GAAGxd,KAAK,CAACua,iBAAN,CAAwBpmB,CAAxB,IAA6BwU,KAAK,CAAC2a,6BAAN,CAAoCzW,OAAO,CAACvC,IAAR,CAAanW,CAAb,CAApC,CAA7B,GAAoF,CAAtG;MACA6oB,KAAK,GAAGR,QAAR;;MACA,IAAI1M,KAAJ,EAAW;QACT,IAAIiP,aAAa,CAACG,YAAlB,EAAgC;UAC9B1B,WAAW,GAAG,CAAd;QACD;;QACD,IAAIuB,aAAa,CAACF,aAAlB,EAAiC;UAC/BtC,UAAU,GAAGC,QAAQ,GAAGyG,iBAAxB;QACD;MACF;;MACD,MAAMvc,UAAU,GAAG;QACjBzP,CAAC,EAAE+nB,OADc;QAEjB7nB,CAAC,EAAE8nB,OAFc;QAGjB1B,WAAW,EAAE,CAHI;QAIjBC,WAJiB;QAKjBjB,UALiB;QAMjBC,QANiB;QAOjB5U,OAAO,EAAE7G,EAAE,CAACqS,yBAAH,CAA6Bjf,CAA7B,EAAgC+V,IAAhC;MAPQ,CAAnB;MASAnJ,EAAE,CAAC0T,aAAH,CAAiB0K,GAAjB,EAAsBhrB,CAAtB,EAAyBuS,UAAzB,EAAqCwD,IAArC;IACD;EACF;;EACDkZ,oBAAoB,GAAG;IACrB,MAAMvW,OAAO,GAAG,KAAK8B,UAAL,EAAhB;IACA,MAAMjE,IAAI,GAAG,KAAKoB,WAAlB;IACA,IAAIiF,KAAK,GAAG,CAAZ;IACArG,IAAI,CAACJ,IAAL,CAAU9J,OAAV,CAAkB,CAACuM,OAAD,EAAUlD,KAAV,KAAoB;MACpC,IAAI,CAACgQ,KAAK,CAAChN,OAAO,CAACvC,IAAR,CAAaT,KAAb,CAAD,CAAN,IAA+B,KAAK7J,KAAL,CAAWua,iBAAX,CAA6B1Q,KAA7B,CAAnC,EAAwE;QACtEkH,KAAK;MACN;IACF,CAJD;IAKA,OAAOA,KAAP;EACD;;EACDsS,aAAa,CAACxZ,KAAD,EAAQK,IAAR,EAAciZ,YAAd,EAA4B;IACvC,OAAO,KAAKnjB,KAAL,CAAWua,iBAAX,CAA6B1Q,KAA7B,IACH7T,SAAS,CAAC,KAAKod,yBAAL,CAA+BvJ,KAA/B,EAAsCK,IAAtC,EAA4C8S,KAA5C,IAAqDmG,YAAtD,CADN,GAEH,CAFJ;EAGD;;AAjFiD;;AAmFpDT,mBAAmB,CAAC3X,EAApB,GAAyB,WAAzB;AACA2X,mBAAmB,CAACluB,QAApB,GAA+B;EAC7B+e,eAAe,EAAE,KADY;EAE7BnN,SAAS,EAAE;IACTyY,aAAa,EAAE,IADN;IAETK,YAAY,EAAE;EAFL,CAFkB;EAM7BrY,UAAU,EAAE;IACVd,OAAO,EAAE;MACP5F,IAAI,EAAE,QADC;MAEPuG,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,YAAX,EAAyB,UAAzB,EAAqC,aAArC,EAAoD,aAApD;IAFL;EADC,CANiB;EAY7ByI,SAAS,EAAE,GAZkB;EAa7BoN,UAAU,EAAE;AAbiB,CAA/B;AAeAmG,mBAAmB,CAACxoB,SAApB,GAAgC;EAC9B0lB,WAAW,EAAE,CADiB;EAE9BhE,OAAO,EAAE;IACPiE,MAAM,EAAE;MACNtO,MAAM,EAAE;QACNuO,cAAc,CAAC9f,KAAD,EAAQ;UACpB,MAAMsK,IAAI,GAAGtK,KAAK,CAACsK,IAAnB;;UACA,IAAIA,IAAI,CAACiH,MAAL,CAAY/P,MAAZ,IAAsB8I,IAAI,CAACoF,QAAL,CAAclO,MAAxC,EAAgD;YAC9C,OAAO8I,IAAI,CAACiH,MAAL,CAAYwO,GAAZ,CAAgB,CAACpN,KAAD,EAAQxe,CAAR,KAAc;cACnC,MAAMuW,IAAI,GAAG1K,KAAK,CAAC2P,cAAN,CAAqB,CAArB,CAAb;cACA,MAAMqQ,KAAK,GAAGtV,IAAI,CAACkB,UAAL,CAAgBsH,QAAhB,CAAyB/e,CAAzB,CAAd;cACA,OAAO;gBACL8rB,IAAI,EAAEtN,KADD;gBAELuN,SAAS,EAAEF,KAAK,CAACG,eAFZ;gBAGLC,WAAW,EAAEJ,KAAK,CAACK,WAHd;gBAILC,SAAS,EAAEN,KAAK,CAACT,WAJZ;gBAKLgB,MAAM,EAAE,CAACvgB,KAAK,CAACua,iBAAN,CAAwBpmB,CAAxB,CALJ;gBAML0V,KAAK,EAAE1V;cANF,CAAP;YAQD,CAXM,CAAP;UAYD;;UACD,OAAO,EAAP;QACD;;MAlBK,CADF;;MAqBNqsB,OAAO,CAACzsB,CAAD,EAAI0sB,UAAJ,EAAgBZ,MAAhB,EAAwB;QAC7BA,MAAM,CAAC7f,KAAP,CAAa0gB,oBAAb,CAAkCD,UAAU,CAAC5W,KAA7C;QACAgW,MAAM,CAAC7f,KAAP,CAAaqF,MAAb;MACD;;IAxBK,CADD;IA2BPwW,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAK,GAAG;UACN,OAAO,EAAP;QACD,CAHQ;;QAITnJ,KAAK,CAACU,OAAD,EAAU;UACb,OAAOA,OAAO,CAACrT,KAAR,CAAcsK,IAAd,CAAmBiH,MAAnB,CAA0B8B,OAAO,CAACrG,SAAlC,IAA+C,IAA/C,GAAsDqG,OAAO,CAACwN,cAArE;QACD;;MANQ;IADJ;EA3BF,CAFqB;EAwC9BtU,MAAM,EAAE;IACN5Y,CAAC,EAAE;MACDwM,IAAI,EAAE,cADL;MAEDojB,UAAU,EAAE;QACVC,OAAO,EAAE;MADC,CAFX;MAKDnI,WAAW,EAAE,IALZ;MAMDF,IAAI,EAAE;QACJsI,QAAQ,EAAE;MADN,CANL;MASDC,WAAW,EAAE;QACXF,OAAO,EAAE;MADE,CATZ;MAYDjH,UAAU,EAAE;IAZX;EADG;AAxCsB,CAAhC;;AA0DA,MAAMoH,aAAN,SAA4BrG,kBAA5B,CAA+C;;AAE/CqG,aAAa,CAAC5Y,EAAd,GAAmB,KAAnB;AACA4Y,aAAa,CAACnvB,QAAd,GAAyB;EACvB0nB,MAAM,EAAE,CADe;EAEvBF,QAAQ,EAAE,CAFa;EAGvBC,aAAa,EAAE,GAHQ;EAIvBN,MAAM,EAAE;AAJe,CAAzB;;AAOA,MAAMiI,eAAN,SAA8BpW,iBAA9B,CAAgD;EAC9CkF,gBAAgB,CAAC7I,KAAD,EAAQ;IACtB,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAMkL,MAAM,GAAGlL,EAAE,CAAC+K,WAAH,CAAeG,MAA9B;IACA,MAAMJ,MAAM,GAAG9K,EAAE,CAAC6Q,SAAH,CAAa/H,KAAb,CAAf;IACA,OAAO;MACL8I,KAAK,EAAE1G,MAAM,CAACuF,SAAP,GAAmB3H,KAAnB,CADF;MAELxB,KAAK,EAAE,KAAK4D,MAAM,CAAC2G,gBAAP,CAAwB/G,MAAM,CAACI,MAAM,CAACE,IAAR,CAA9B;IAFP,CAAP;EAID;;EACD9G,MAAM,CAAC6E,IAAD,EAAO;IACX,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC+K,WAAhB;IACA,MAAMkV,IAAI,GAAGtW,IAAI,CAACmC,OAAlB;IACA,MAAM0O,MAAM,GAAG7Q,IAAI,CAACJ,IAAL,IAAa,EAA5B;IACA,MAAMiH,MAAM,GAAG7G,IAAI,CAACsB,MAAL,CAAYwF,SAAZ,EAAf;IACAwP,IAAI,CAACzF,MAAL,GAAcA,MAAd;;IACA,IAAIrR,IAAI,KAAK,QAAb,EAAuB;MACrB,MAAMtC,OAAO,GAAG7G,EAAE,CAACoS,4BAAH,CAAgCjJ,IAAhC,CAAhB;;MACA,IAAI,CAACnJ,EAAE,CAAC6G,OAAH,CAAW0Z,QAAhB,EAA0B;QACxB1Z,OAAO,CAAC2X,WAAR,GAAsB,CAAtB;MACD;;MACD,MAAM7Y,UAAU,GAAG;QACjB7B,KAAK,EAAE,IADU;QAEjBgf,SAAS,EAAEtS,MAAM,CAAC/P,MAAP,KAAkB+Z,MAAM,CAAC/Z,MAFnB;QAGjBoG;MAHiB,CAAnB;MAKA7G,EAAE,CAAC0T,aAAH,CAAiBuM,IAAjB,EAAuBlhB,SAAvB,EAAkC4G,UAAlC,EAA8CwD,IAA9C;IACD;;IACDnJ,EAAE,CAACuU,cAAH,CAAkBiG,MAAlB,EAA0B,CAA1B,EAA6BA,MAAM,CAAC/Z,MAApC,EAA4C0I,IAA5C;EACD;;EACDoL,cAAc,CAACiG,MAAD,EAAS1a,KAAT,EAAgBkQ,KAAhB,EAAuB7G,IAAvB,EAA6B;IACzC,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM8L,OAAO,GAAG9L,EAAE,CAAC4N,UAAH,EAAhB;IACA,MAAMhG,KAAK,GAAG5H,EAAE,CAAC+K,WAAH,CAAe2D,MAA7B;IACA,MAAMK,KAAK,GAAG5F,IAAI,KAAK,OAAvB;;IACA,KAAK,IAAI/V,CAAC,GAAG0M,KAAb,EAAoB1M,CAAC,GAAG0M,KAAK,GAAGkQ,KAAhC,EAAuC5c,CAAC,EAAxC,EAA4C;MAC1C,MAAMqnB,KAAK,GAAGD,MAAM,CAACpnB,CAAD,CAApB;MACA,MAAMyT,OAAO,GAAG7G,EAAE,CAACqS,yBAAH,CAA6Bjf,CAA7B,EAAgC+V,IAAhC,CAAhB;MACA,MAAM4Z,aAAa,GAAGnb,KAAK,CAACob,wBAAN,CAA+B5vB,CAA/B,EAAkC0Y,OAAO,CAACvC,IAAR,CAAanW,CAAb,CAAlC,CAAtB;MACA,MAAM8C,CAAC,GAAG6Y,KAAK,GAAGnH,KAAK,CAACoa,OAAT,GAAmBe,aAAa,CAAC7sB,CAAhD;MACA,MAAME,CAAC,GAAG2Y,KAAK,GAAGnH,KAAK,CAACqa,OAAT,GAAmBc,aAAa,CAAC3sB,CAAhD;MACA,MAAMuP,UAAU,GAAG;QACjBzP,CADiB;QAEjBE,CAFiB;QAGjB6lB,KAAK,EAAE8G,aAAa,CAAC9G,KAHJ;QAIjBtB,IAAI,EAAE7B,KAAK,CAAC5iB,CAAD,CAAL,IAAY4iB,KAAK,CAAC1iB,CAAD,CAJN;QAKjByQ;MALiB,CAAnB;MAOA7G,EAAE,CAAC0T,aAAH,CAAiB+G,KAAjB,EAAwBrnB,CAAxB,EAA2BuS,UAA3B,EAAuCwD,IAAvC;IACD;EACF;;AAnD6C;;AAqDhD0Z,eAAe,CAAC7Y,EAAhB,GAAqB,OAArB;AACA6Y,eAAe,CAACpvB,QAAhB,GAA2B;EACzB0b,kBAAkB,EAAE,MADK;EAEzBqD,eAAe,EAAE,OAFQ;EAGzBpE,SAAS,EAAE,GAHc;EAIzBmS,QAAQ,EAAE,IAJe;EAKzBvO,QAAQ,EAAE;IACRiO,IAAI,EAAE;MACJgD,IAAI,EAAE;IADF;EADE;AALe,CAA3B;AAWAJ,eAAe,CAAC1pB,SAAhB,GAA4B;EAC1B0lB,WAAW,EAAE,CADa;EAE1BrT,MAAM,EAAE;IACN5Y,CAAC,EAAE;MACDwM,IAAI,EAAE;IADL;EADG;AAFkB,CAA5B;;AASA,MAAM8jB,iBAAN,SAAgClD,cAAhC,CAA+C;;AAE/CkD,iBAAiB,CAAClZ,EAAlB,GAAuB,SAAvB;AACAkZ,iBAAiB,CAACzvB,QAAlB,GAA6B;EAC3B8sB,QAAQ,EAAE,KADiB;EAE3B0C,IAAI,EAAE;AAFqB,CAA7B;AAIAC,iBAAiB,CAAC/pB,SAAlB,GAA8B;EAC5B8gB,WAAW,EAAE;IACX9Q,IAAI,EAAE;EADK,CADe;EAI5B0R,OAAO,EAAE;IACPC,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAK,GAAG;UACN,OAAO,EAAP;QACD,CAHQ;;QAITnJ,KAAK,CAACjR,IAAD,EAAO;UACV,OAAO,MAAMA,IAAI,CAACiR,KAAX,GAAmB,IAAnB,GAA0BjR,IAAI,CAACmf,cAA/B,GAAgD,GAAvD;QACD;;MANQ;IADJ;EADF,CAJmB;EAgB5BtU,MAAM,EAAE;IACNtV,CAAC,EAAE;MACDkJ,IAAI,EAAE;IADL,CADG;IAINhJ,CAAC,EAAE;MACDgJ,IAAI,EAAE;IADL;EAJG;AAhBoB,CAA9B;AA0BA,IAAI+jB,WAAW,GAAG,aAAahe,MAAM,CAAC8N,MAAP,CAAc;EAC7CmQ,SAAS,EAAE,IADkC;EAE7C5L,aAAa,EAAEA,aAF8B;EAG7C+C,gBAAgB,EAAEA,gBAH2B;EAI7CgC,kBAAkB,EAAEA,kBAJyB;EAK7CyD,cAAc,EAAEA,cAL6B;EAM7C2B,mBAAmB,EAAEA,mBANwB;EAO7CiB,aAAa,EAAEA,aAP8B;EAQ7CC,eAAe,EAAEA,eAR4B;EAS7CK,iBAAiB,EAAEA;AAT0B,CAAd,CAA/B;;AAYA,SAASG,QAAT,GAAoB;EAClB,MAAM,IAAIC,KAAJ,CAAU,2GAAV,CAAN;AACD;;AACD,MAAMC,WAAN,CAAkB;EAChB9kB,WAAW,CAACoI,OAAD,EAAU;IACnB,KAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;EACD;;EACD2c,OAAO,GAAG;IACR,OAAOH,QAAQ,EAAf;EACD;;EACDtT,KAAK,CAACzI,KAAD,EAAQmc,MAAR,EAAgB;IACnB,OAAOJ,QAAQ,EAAf;EACD;;EACDI,MAAM,CAACC,SAAD,EAAYD,MAAZ,EAAoB;IACxB,OAAOJ,QAAQ,EAAf;EACD;;EACD3hB,GAAG,CAACgiB,SAAD,EAAYC,MAAZ,EAAoBC,IAApB,EAA0B;IAC3B,OAAOP,QAAQ,EAAf;EACD;;EACDQ,IAAI,CAAC/wB,CAAD,EAAIQ,CAAJ,EAAOswB,IAAP,EAAa;IACf,OAAOP,QAAQ,EAAf;EACD;;EACDS,OAAO,CAACJ,SAAD,EAAYE,IAAZ,EAAkBG,OAAlB,EAA2B;IAChC,OAAOV,QAAQ,EAAf;EACD;;EACDW,KAAK,CAACN,SAAD,EAAYE,IAAZ,EAAkB;IACrB,OAAOP,QAAQ,EAAf;EACD;;AAxBe;;AA0BlBE,WAAW,CAACU,QAAZ,GAAuB,UAASC,OAAT,EAAkB;EACvC/e,MAAM,CAACqC,MAAP,CAAc+b,WAAW,CAACvO,SAA1B,EAAqCkP,OAArC;AACD,CAFD;;AAGA,IAAIC,QAAQ,GAAG;EACbC,KAAK,EAAEb;AADM,CAAf;;AAIA,SAASc,mBAAT,CAA6BrxB,CAA7B,EAAgCiM,KAAhC,EAAuC;EACrC,IAAI,YAAYjM,CAAhB,EAAmB;IACjB,OAAO;MACLkD,CAAC,EAAElD,CAAC,CAACkD,CADA;MAELE,CAAC,EAAEpD,CAAC,CAACoD;IAFA,CAAP;EAID;;EACD,OAAOG,qBAAqB,CAACvD,CAAD,EAAIiM,KAAJ,CAA5B;AACD;;AACD,SAASqlB,uBAAT,CAAiCrlB,KAAjC,EAAwCslB,OAAxC,EAAiD;EAC/C,MAAM5b,QAAQ,GAAG1J,KAAK,CAACulB,4BAAN,EAAjB;EACA,IAAI1b,KAAJ,EAAWS,IAAX,EAAiByC,OAAjB;;EACA,KAAK,IAAI5Y,CAAC,GAAG,CAAR,EAAWyV,IAAI,GAAGF,QAAQ,CAAClI,MAAhC,EAAwCrN,CAAC,GAAGyV,IAA5C,EAAkD,EAAEzV,CAApD,EAAuD;IACrD,CAAC;MAAC0V,KAAD;MAAQS;IAAR,IAAgBZ,QAAQ,CAACvV,CAAD,CAAzB;;IACA,KAAK,IAAIoB,CAAC,GAAG,CAAR,EAAWiwB,IAAI,GAAGlb,IAAI,CAAC9I,MAA5B,EAAoCjM,CAAC,GAAGiwB,IAAxC,EAA8C,EAAEjwB,CAAhD,EAAmD;MACjDwX,OAAO,GAAGzC,IAAI,CAAC/U,CAAD,CAAd;;MACA,IAAI,CAACwX,OAAO,CAAC2O,IAAb,EAAmB;QACjB4J,OAAO,CAACvY,OAAD,EAAUlD,KAAV,EAAiBtU,CAAjB,CAAP;MACD;IACF;EACF;AACF;;AACD,SAASkwB,YAAT,CAAsBC,OAAtB,EAA+BvZ,IAA/B,EAAqC9D,KAArC,EAA4Csd,SAA5C,EAAuD;EACrD,MAAM;IAAC/Z,UAAD;IAAatB,IAAb;IAAmB2G;EAAnB,IAA8ByU,OAApC;EACA,MAAM1Z,MAAM,GAAGJ,UAAU,CAACE,WAAX,CAAuBE,MAAtC;;EACA,IAAIA,MAAM,IAAIG,IAAI,KAAKH,MAAM,CAACG,IAA1B,IAAkC8E,OAAlC,IAA6C3G,IAAI,CAAC9I,MAAtD,EAA8D;IAC5D,MAAMokB,YAAY,GAAG5Z,MAAM,CAAC6Z,cAAP,GAAwBnuB,aAAxB,GAAwCN,YAA7D;;IACA,IAAI,CAACuuB,SAAL,EAAgB;MACd,OAAOC,YAAY,CAACtb,IAAD,EAAO6B,IAAP,EAAa9D,KAAb,CAAnB;IACD,CAFD,MAEO,IAAIuD,UAAU,CAACqC,cAAf,EAA+B;MACpC,MAAM6X,EAAE,GAAGxb,IAAI,CAAC,CAAD,CAAf;MACA,MAAMyH,KAAK,GAAG,OAAO+T,EAAE,CAACC,QAAV,KAAuB,UAAvB,IAAqCD,EAAE,CAACC,QAAH,CAAY5Z,IAAZ,CAAnD;;MACA,IAAI4F,KAAJ,EAAW;QACT,MAAMlR,KAAK,GAAG+kB,YAAY,CAACtb,IAAD,EAAO6B,IAAP,EAAa9D,KAAK,GAAG0J,KAArB,CAA1B;QACA,MAAMhJ,GAAG,GAAG6c,YAAY,CAACtb,IAAD,EAAO6B,IAAP,EAAa9D,KAAK,GAAG0J,KAArB,CAAxB;QACA,OAAO;UAACkQ,EAAE,EAAEphB,KAAK,CAACohB,EAAX;UAAeC,EAAE,EAAEnZ,GAAG,CAACmZ;QAAvB,CAAP;MACD;IACF;EACF;;EACD,OAAO;IAACD,EAAE,EAAE,CAAL;IAAQC,EAAE,EAAE5X,IAAI,CAAC9I,MAAL,GAAc;EAA1B,CAAP;AACD;;AACD,SAASwkB,sBAAT,CAAgChmB,KAAhC,EAAuCmM,IAAvC,EAA6C8Z,QAA7C,EAAuDX,OAAvD,EAAgEK,SAAhE,EAA2E;EACzE,MAAMjc,QAAQ,GAAG1J,KAAK,CAACulB,4BAAN,EAAjB;EACA,MAAMld,KAAK,GAAG4d,QAAQ,CAAC9Z,IAAD,CAAtB;;EACA,KAAK,IAAIhY,CAAC,GAAG,CAAR,EAAWyV,IAAI,GAAGF,QAAQ,CAAClI,MAAhC,EAAwCrN,CAAC,GAAGyV,IAA5C,EAAkD,EAAEzV,CAApD,EAAuD;IACrD,MAAM;MAAC0V,KAAD;MAAQS;IAAR,IAAgBZ,QAAQ,CAACvV,CAAD,CAA9B;IACA,MAAM;MAAC8tB,EAAD;MAAKC;IAAL,IAAWuD,YAAY,CAAC/b,QAAQ,CAACvV,CAAD,CAAT,EAAcgY,IAAd,EAAoB9D,KAApB,EAA2Bsd,SAA3B,CAA7B;;IACA,KAAK,IAAIpwB,CAAC,GAAG0sB,EAAb,EAAiB1sB,CAAC,IAAI2sB,EAAtB,EAA0B,EAAE3sB,CAA5B,EAA+B;MAC7B,MAAMwX,OAAO,GAAGzC,IAAI,CAAC/U,CAAD,CAApB;;MACA,IAAI,CAACwX,OAAO,CAAC2O,IAAb,EAAmB;QACjB4J,OAAO,CAACvY,OAAD,EAAUlD,KAAV,EAAiBtU,CAAjB,CAAP;MACD;IACF;EACF;AACF;;AACD,SAAS2wB,wBAAT,CAAkC/Z,IAAlC,EAAwC;EACtC,MAAMga,IAAI,GAAGha,IAAI,CAAC2N,OAAL,CAAa,GAAb,MAAsB,CAAC,CAApC;EACA,MAAMsM,IAAI,GAAGja,IAAI,CAAC2N,OAAL,CAAa,GAAb,MAAsB,CAAC,CAApC;EACA,OAAO,UAASuM,GAAT,EAAcC,GAAd,EAAmB;IACxB,MAAMC,MAAM,GAAGJ,IAAI,GAAGxlB,IAAI,CAACgW,GAAL,CAAS0P,GAAG,CAACpvB,CAAJ,GAAQqvB,GAAG,CAACrvB,CAArB,CAAH,GAA6B,CAAhD;IACA,MAAMuvB,MAAM,GAAGJ,IAAI,GAAGzlB,IAAI,CAACgW,GAAL,CAAS0P,GAAG,CAAClvB,CAAJ,GAAQmvB,GAAG,CAACnvB,CAArB,CAAH,GAA6B,CAAhD;IACA,OAAOwJ,IAAI,CAAC8lB,IAAL,CAAU9lB,IAAI,CAAC+lB,GAAL,CAASH,MAAT,EAAiB,CAAjB,IAAsB5lB,IAAI,CAAC+lB,GAAL,CAASF,MAAT,EAAiB,CAAjB,CAAhC,CAAP;EACD,CAJD;AAKD;;AACD,SAASG,iBAAT,CAA2B3mB,KAA3B,EAAkCimB,QAAlC,EAA4C9Z,IAA5C,EAAkDya,gBAAlD,EAAoE;EAClE,MAAMrlB,KAAK,GAAG,EAAd;;EACA,IAAI,CAAC/J,cAAc,CAACyuB,QAAD,EAAWjmB,KAAK,CAACiT,SAAjB,EAA4BjT,KAAK,CAAC6mB,WAAlC,CAAnB,EAAmE;IACjE,OAAOtlB,KAAP;EACD;;EACD,MAAMulB,cAAc,GAAG,UAAS/Z,OAAT,EAAkB5C,YAAlB,EAAgCN,KAAhC,EAAuC;IAC5D,IAAIkD,OAAO,CAACga,OAAR,CAAgBd,QAAQ,CAAChvB,CAAzB,EAA4BgvB,QAAQ,CAAC9uB,CAArC,EAAwCyvB,gBAAxC,CAAJ,EAA+D;MAC7DrlB,KAAK,CAACiB,IAAN,CAAW;QAACuK,OAAD;QAAU5C,YAAV;QAAwBN;MAAxB,CAAX;IACD;EACF,CAJD;;EAKAmc,sBAAsB,CAAChmB,KAAD,EAAQmM,IAAR,EAAc8Z,QAAd,EAAwBa,cAAxB,EAAwC,IAAxC,CAAtB;EACA,OAAOvlB,KAAP;AACD;;AACD,SAASylB,eAAT,CAAyBhnB,KAAzB,EAAgCimB,QAAhC,EAA0C9Z,IAA1C,EAAgDwZ,SAAhD,EAA2DiB,gBAA3D,EAA6E;EAC3E,MAAMK,cAAc,GAAGf,wBAAwB,CAAC/Z,IAAD,CAA/C;EACA,IAAI+a,WAAW,GAAG/b,MAAM,CAACE,iBAAzB;EACA,IAAI9J,KAAK,GAAG,EAAZ;;EACA,IAAI,CAAC/J,cAAc,CAACyuB,QAAD,EAAWjmB,KAAK,CAACiT,SAAjB,EAA4BjT,KAAK,CAAC6mB,WAAlC,CAAnB,EAAmE;IACjE,OAAOtlB,KAAP;EACD;;EACD,MAAMulB,cAAc,GAAG,UAAS/Z,OAAT,EAAkB5C,YAAlB,EAAgCN,KAAhC,EAAuC;IAC5D,IAAI8b,SAAS,IAAI,CAAC5Y,OAAO,CAACga,OAAR,CAAgBd,QAAQ,CAAChvB,CAAzB,EAA4BgvB,QAAQ,CAAC9uB,CAArC,EAAwCyvB,gBAAxC,CAAlB,EAA6E;MAC3E;IACD;;IACD,MAAMrN,MAAM,GAAGxM,OAAO,CAACoa,cAAR,CAAuBP,gBAAvB,CAAf;IACA,MAAMQ,QAAQ,GAAGH,cAAc,CAAChB,QAAD,EAAW1M,MAAX,CAA/B;;IACA,IAAI6N,QAAQ,GAAGF,WAAf,EAA4B;MAC1B3lB,KAAK,GAAG,CAAC;QAACwL,OAAD;QAAU5C,YAAV;QAAwBN;MAAxB,CAAD,CAAR;MACAqd,WAAW,GAAGE,QAAd;IACD,CAHD,MAGO,IAAIA,QAAQ,KAAKF,WAAjB,EAA8B;MACnC3lB,KAAK,CAACiB,IAAN,CAAW;QAACuK,OAAD;QAAU5C,YAAV;QAAwBN;MAAxB,CAAX;IACD;EACF,CAZD;;EAaAmc,sBAAsB,CAAChmB,KAAD,EAAQmM,IAAR,EAAc8Z,QAAd,EAAwBa,cAAxB,CAAtB;EACA,OAAOvlB,KAAP;AACD;;AACD,SAAS8lB,YAAT,CAAsBrnB,KAAtB,EAA6BjM,CAA7B,EAAgC6T,OAAhC,EAAyCgf,gBAAzC,EAA2D;EACzD,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAD,EAAIiM,KAAJ,CAApC;EACA,MAAMuB,KAAK,GAAG,EAAd;EACA,MAAM4K,IAAI,GAAGvE,OAAO,CAACuE,IAArB;EACA,MAAMmb,WAAW,GAAGnb,IAAI,KAAK,GAAT,GAAe,UAAf,GAA4B,UAAhD;EACA,IAAIob,cAAc,GAAG,KAArB;EACAlC,uBAAuB,CAACrlB,KAAD,EAAQ,CAAC+M,OAAD,EAAU5C,YAAV,EAAwBN,KAAxB,KAAkC;IAC/D,IAAIkD,OAAO,CAACua,WAAD,CAAP,CAAqBrB,QAAQ,CAAC9Z,IAAD,CAA7B,EAAqCya,gBAArC,CAAJ,EAA4D;MAC1DrlB,KAAK,CAACiB,IAAN,CAAW;QAACuK,OAAD;QAAU5C,YAAV;QAAwBN;MAAxB,CAAX;IACD;;IACD,IAAIkD,OAAO,CAACga,OAAR,CAAgBd,QAAQ,CAAChvB,CAAzB,EAA4BgvB,QAAQ,CAAC9uB,CAArC,EAAwCyvB,gBAAxC,CAAJ,EAA+D;MAC7DW,cAAc,GAAG,IAAjB;IACD;EACF,CAPsB,CAAvB;;EAQA,IAAI3f,OAAO,CAAC+d,SAAR,IAAqB,CAAC4B,cAA1B,EAA0C;IACxC,OAAO,EAAP;EACD;;EACD,OAAOhmB,KAAP;AACD;;AACD,IAAIimB,WAAW,GAAG;EAChBC,KAAK,EAAE;IACL5d,KAAK,CAAC7J,KAAD,EAAQjM,CAAR,EAAW6T,OAAX,EAAoBgf,gBAApB,EAAsC;MACzC,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAD,EAAIiM,KAAJ,CAApC;MACA,MAAMmM,IAAI,GAAGvE,OAAO,CAACuE,IAAR,IAAgB,GAA7B;MACA,MAAM5K,KAAK,GAAGqG,OAAO,CAAC+d,SAAR,GACVgB,iBAAiB,CAAC3mB,KAAD,EAAQimB,QAAR,EAAkB9Z,IAAlB,EAAwBya,gBAAxB,CADP,GAEVI,eAAe,CAAChnB,KAAD,EAAQimB,QAAR,EAAkB9Z,IAAlB,EAAwB,KAAxB,EAA+Bya,gBAA/B,CAFnB;MAGA,MAAM7T,QAAQ,GAAG,EAAjB;;MACA,IAAI,CAACxR,KAAK,CAACC,MAAX,EAAmB;QACjB,OAAO,EAAP;MACD;;MACDxB,KAAK,CAACulB,4BAAN,GAAqC/kB,OAArC,CAA8CkK,IAAD,IAAU;QACrD,MAAMb,KAAK,GAAGtI,KAAK,CAAC,CAAD,CAAL,CAASsI,KAAvB;QACA,MAAMkD,OAAO,GAAGrC,IAAI,CAACJ,IAAL,CAAUT,KAAV,CAAhB;;QACA,IAAIkD,OAAO,IAAI,CAACA,OAAO,CAAC2O,IAAxB,EAA8B;UAC5B3I,QAAQ,CAACvQ,IAAT,CAAc;YAACuK,OAAD;YAAU5C,YAAY,EAAEO,IAAI,CAACb,KAA7B;YAAoCA;UAApC,CAAd;QACD;MACF,CAND;MAOA,OAAOkJ,QAAP;IACD,CAnBI;;IAoBLlG,OAAO,CAAC7M,KAAD,EAAQjM,CAAR,EAAW6T,OAAX,EAAoBgf,gBAApB,EAAsC;MAC3C,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAD,EAAIiM,KAAJ,CAApC;MACA,MAAMmM,IAAI,GAAGvE,OAAO,CAACuE,IAAR,IAAgB,IAA7B;MACA,IAAI5K,KAAK,GAAGqG,OAAO,CAAC+d,SAAR,GACRgB,iBAAiB,CAAC3mB,KAAD,EAAQimB,QAAR,EAAkB9Z,IAAlB,EAAwBya,gBAAxB,CADT,GAEVI,eAAe,CAAChnB,KAAD,EAAQimB,QAAR,EAAkB9Z,IAAlB,EAAwB,KAAxB,EAA+Bya,gBAA/B,CAFjB;;MAGA,IAAIrlB,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;QACpB,MAAM2I,YAAY,GAAG5I,KAAK,CAAC,CAAD,CAAL,CAAS4I,YAA9B;QACA,MAAMG,IAAI,GAAGtK,KAAK,CAAC2P,cAAN,CAAqBxF,YAArB,EAAmCG,IAAhD;QACA/I,KAAK,GAAG,EAAR;;QACA,KAAK,IAAIpN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmW,IAAI,CAAC9I,MAAzB,EAAiC,EAAErN,CAAnC,EAAsC;UACpCoN,KAAK,CAACiB,IAAN,CAAW;YAACuK,OAAO,EAAEzC,IAAI,CAACnW,CAAD,CAAd;YAAmBgW,YAAnB;YAAiCN,KAAK,EAAE1V;UAAxC,CAAX;QACD;MACF;;MACD,OAAOoN,KAAP;IACD,CAnCI;;IAoCLia,KAAK,CAACxb,KAAD,EAAQjM,CAAR,EAAW6T,OAAX,EAAoBgf,gBAApB,EAAsC;MACzC,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAD,EAAIiM,KAAJ,CAApC;MACA,MAAMmM,IAAI,GAAGvE,OAAO,CAACuE,IAAR,IAAgB,IAA7B;MACA,OAAOwa,iBAAiB,CAAC3mB,KAAD,EAAQimB,QAAR,EAAkB9Z,IAAlB,EAAwBya,gBAAxB,CAAxB;IACD,CAxCI;;IAyCLc,OAAO,CAAC1nB,KAAD,EAAQjM,CAAR,EAAW6T,OAAX,EAAoBgf,gBAApB,EAAsC;MAC3C,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAD,EAAIiM,KAAJ,CAApC;MACA,MAAMmM,IAAI,GAAGvE,OAAO,CAACuE,IAAR,IAAgB,IAA7B;MACA,OAAO6a,eAAe,CAAChnB,KAAD,EAAQimB,QAAR,EAAkB9Z,IAAlB,EAAwBvE,OAAO,CAAC+d,SAAhC,EAA2CiB,gBAA3C,CAAtB;IACD,CA7CI;;IA8CL3vB,CAAC,CAAC+I,KAAD,EAAQjM,CAAR,EAAW6T,OAAX,EAAoBgf,gBAApB,EAAsC;MACrChf,OAAO,CAACuE,IAAR,GAAe,GAAf;MACA,OAAOkb,YAAY,CAACrnB,KAAD,EAAQjM,CAAR,EAAW6T,OAAX,EAAoBgf,gBAApB,CAAnB;IACD,CAjDI;;IAkDLzvB,CAAC,CAAC6I,KAAD,EAAQjM,CAAR,EAAW6T,OAAX,EAAoBgf,gBAApB,EAAsC;MACrChf,OAAO,CAACuE,IAAR,GAAe,GAAf;MACA,OAAOkb,YAAY,CAACrnB,KAAD,EAAQjM,CAAR,EAAW6T,OAAX,EAAoBgf,gBAApB,CAAnB;IACD;;EArDI;AADS,CAAlB;AA0DA,MAAMe,gBAAgB,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,CAAzB;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC5B,QAAjC,EAA2C;EACzC,OAAO4B,KAAK,CAACrb,MAAN,CAAa/X,CAAC,IAAIA,CAAC,CAACqzB,GAAF,KAAU7B,QAA5B,CAAP;AACD;;AACD,SAAS8B,2BAAT,CAAqCF,KAArC,EAA4C1b,IAA5C,EAAkD;EAChD,OAAO0b,KAAK,CAACrb,MAAN,CAAa/X,CAAC,IAAIkzB,gBAAgB,CAAC7N,OAAjB,CAAyBrlB,CAAC,CAACqzB,GAA3B,MAAoC,CAAC,CAArC,IAA0CrzB,CAAC,CAACuzB,GAAF,CAAM7b,IAAN,KAAeA,IAA3E,CAAP;AACD;;AACD,SAAS8b,YAAT,CAAsBJ,KAAtB,EAA6B/e,OAA7B,EAAsC;EACpC,OAAO+e,KAAK,CAACvR,IAAN,CAAW,CAACziB,CAAD,EAAIQ,CAAJ,KAAU;IAC1B,MAAM6zB,EAAE,GAAGpf,OAAO,GAAGzU,CAAH,GAAOR,CAAzB;IACA,MAAMs0B,EAAE,GAAGrf,OAAO,GAAGjV,CAAH,GAAOQ,CAAzB;IACA,OAAO6zB,EAAE,CAACvI,MAAH,KAAcwI,EAAE,CAACxI,MAAjB,GACLuI,EAAE,CAACre,KAAH,GAAWse,EAAE,CAACte,KADT,GAELqe,EAAE,CAACvI,MAAH,GAAYwI,EAAE,CAACxI,MAFjB;EAGD,CANM,CAAP;AAOD;;AACD,SAASyI,SAAT,CAAmBC,KAAnB,EAA0B;EACxB,MAAMC,WAAW,GAAG,EAApB;EACA,IAAIn0B,CAAJ,EAAOyV,IAAP,EAAaoe,GAAb;;EACA,KAAK7zB,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAG,CAACye,KAAK,IAAI,EAAV,EAAc7mB,MAAjC,EAAyCrN,CAAC,GAAGyV,IAA7C,EAAmD,EAAEzV,CAArD,EAAwD;IACtD6zB,GAAG,GAAGK,KAAK,CAACl0B,CAAD,CAAX;IACAm0B,WAAW,CAAC9lB,IAAZ,CAAiB;MACfqH,KAAK,EAAE1V,CADQ;MAEf6zB,GAFe;MAGfF,GAAG,EAAEE,GAAG,CAAC/B,QAHM;MAIfnN,UAAU,EAAEkP,GAAG,CAACjP,YAAJ,EAJG;MAKf4G,MAAM,EAAEqI,GAAG,CAACrI;IALG,CAAjB;EAOD;;EACD,OAAO2I,WAAP;AACD;;AACD,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,MAAhC,EAAwC;EACtC,IAAIt0B,CAAJ,EAAOyV,IAAP,EAAa8e,MAAb;;EACA,KAAKv0B,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAG4e,OAAO,CAAChnB,MAA3B,EAAmCrN,CAAC,GAAGyV,IAAvC,EAA6C,EAAEzV,CAA/C,EAAkD;IAChDu0B,MAAM,GAAGF,OAAO,CAACr0B,CAAD,CAAhB;;IACA,IAAIu0B,MAAM,CAAC5P,UAAX,EAAuB;MACrB4P,MAAM,CAACjP,KAAP,GAAeiP,MAAM,CAACV,GAAP,CAAWW,QAAX,IAAuBF,MAAM,CAACG,cAA7C;MACAF,MAAM,CAAClP,MAAP,GAAgBiP,MAAM,CAACI,aAAvB;IACD,CAHD,MAGO;MACLH,MAAM,CAACjP,KAAP,GAAegP,MAAM,CAACK,YAAtB;MACAJ,MAAM,CAAClP,MAAP,GAAgBkP,MAAM,CAACV,GAAP,CAAWW,QAAX,IAAuBF,MAAM,CAACM,eAA9C;IACD;EACF;AACF;;AACD,SAASC,gBAAT,CAA0BX,KAA1B,EAAiC;EAC/B,MAAMC,WAAW,GAAGF,SAAS,CAACC,KAAD,CAA7B;EACA,MAAMM,QAAQ,GAAGV,YAAY,CAACK,WAAW,CAAC9b,MAAZ,CAAmByc,IAAI,IAAIA,IAAI,CAACjB,GAAL,CAASW,QAApC,CAAD,EAAgD,IAAhD,CAA7B;EACA,MAAMrf,IAAI,GAAG2e,YAAY,CAACL,gBAAgB,CAACU,WAAD,EAAc,MAAd,CAAjB,EAAwC,IAAxC,CAAzB;EACA,MAAMlf,KAAK,GAAG6e,YAAY,CAACL,gBAAgB,CAACU,WAAD,EAAc,OAAd,CAAjB,CAA1B;EACA,MAAMnf,GAAG,GAAG8e,YAAY,CAACL,gBAAgB,CAACU,WAAD,EAAc,KAAd,CAAjB,EAAuC,IAAvC,CAAxB;EACA,MAAMjf,MAAM,GAAG4e,YAAY,CAACL,gBAAgB,CAACU,WAAD,EAAc,QAAd,CAAjB,CAA3B;EACA,MAAMY,gBAAgB,GAAGnB,2BAA2B,CAACO,WAAD,EAAc,GAAd,CAApD;EACA,MAAMa,cAAc,GAAGpB,2BAA2B,CAACO,WAAD,EAAc,GAAd,CAAlD;EACA,OAAO;IACLK,QADK;IAELS,UAAU,EAAE9f,IAAI,CAAC+M,MAAL,CAAYlN,GAAZ,CAFP;IAGLkgB,cAAc,EAAEjgB,KAAK,CAACiN,MAAN,CAAa8S,cAAb,EAA6B9S,MAA7B,CAAoChN,MAApC,EAA4CgN,MAA5C,CAAmD6S,gBAAnD,CAHX;IAILjW,SAAS,EAAE2U,gBAAgB,CAACU,WAAD,EAAc,WAAd,CAJtB;IAKLgB,QAAQ,EAAEhgB,IAAI,CAAC+M,MAAL,CAAYjN,KAAZ,EAAmBiN,MAAnB,CAA0B8S,cAA1B,CALL;IAMLrQ,UAAU,EAAE3P,GAAG,CAACkN,MAAJ,CAAWhN,MAAX,EAAmBgN,MAAnB,CAA0B6S,gBAA1B;EANP,CAAP;AAQD;;AACD,SAASK,cAAT,CAAwBC,UAAxB,EAAoCvW,SAApC,EAA+Cpf,CAA/C,EAAkDQ,CAAlD,EAAqD;EACnD,OAAOsM,IAAI,CAACmC,GAAL,CAAS0mB,UAAU,CAAC31B,CAAD,CAAnB,EAAwBof,SAAS,CAACpf,CAAD,CAAjC,IAAwC8M,IAAI,CAACmC,GAAL,CAAS0mB,UAAU,CAACn1B,CAAD,CAAnB,EAAwB4e,SAAS,CAAC5e,CAAD,CAAjC,CAA/C;AACD;;AACD,SAASo1B,gBAAT,CAA0BD,UAA1B,EAAsCE,UAAtC,EAAkD;EAChDF,UAAU,CAACrgB,GAAX,GAAiBxI,IAAI,CAACmC,GAAL,CAAS0mB,UAAU,CAACrgB,GAApB,EAAyBugB,UAAU,CAACvgB,GAApC,CAAjB;EACAqgB,UAAU,CAAClgB,IAAX,GAAkB3I,IAAI,CAACmC,GAAL,CAAS0mB,UAAU,CAAClgB,IAApB,EAA0BogB,UAAU,CAACpgB,IAArC,CAAlB;EACAkgB,UAAU,CAACngB,MAAX,GAAoB1I,IAAI,CAACmC,GAAL,CAAS0mB,UAAU,CAACngB,MAApB,EAA4BqgB,UAAU,CAACrgB,MAAvC,CAApB;EACAmgB,UAAU,CAACpgB,KAAX,GAAmBzI,IAAI,CAACmC,GAAL,CAAS0mB,UAAU,CAACpgB,KAApB,EAA2BsgB,UAAU,CAACtgB,KAAtC,CAAnB;AACD;;AACD,SAASugB,UAAT,CAAoB1W,SAApB,EAA+BwV,MAA/B,EAAuCC,MAAvC,EAA+C;EAC7C,MAAMV,GAAG,GAAGU,MAAM,CAACV,GAAnB;EACA,MAAMwB,UAAU,GAAGvW,SAAS,CAACuW,UAA7B;;EACA,IAAIp1B,QAAQ,CAACs0B,MAAM,CAACZ,GAAR,CAAZ,EAA0B;IACxB,OAAO;MAAC8B,IAAI,EAAE,KAAP;MAAcC,KAAK,EAAE;IAArB,CAAP;EACD;;EACD,IAAInB,MAAM,CAACpgB,IAAX,EAAiB;IACf2K,SAAS,CAACyV,MAAM,CAACZ,GAAR,CAAT,IAAyBY,MAAM,CAACpgB,IAAhC;EACD;;EACDogB,MAAM,CAACpgB,IAAP,GAAcogB,MAAM,CAAC5P,UAAP,GAAoBkP,GAAG,CAACxO,MAAxB,GAAiCwO,GAAG,CAACvO,KAAnD;EACAxG,SAAS,CAACyV,MAAM,CAACZ,GAAR,CAAT,IAAyBY,MAAM,CAACpgB,IAAhC;;EACA,IAAI0f,GAAG,CAAC8B,UAAR,EAAoB;IAClBL,gBAAgB,CAACD,UAAD,EAAaxB,GAAG,CAAC8B,UAAJ,EAAb,CAAhB;EACD;;EACD,MAAMC,QAAQ,GAAGppB,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY2lB,MAAM,CAACuB,UAAP,GAAoBT,cAAc,CAACC,UAAD,EAAavW,SAAb,EAAwB,MAAxB,EAAgC,OAAhC,CAA9C,CAAjB;EACA,MAAMgX,SAAS,GAAGtpB,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY2lB,MAAM,CAACyB,WAAP,GAAqBX,cAAc,CAACC,UAAD,EAAavW,SAAb,EAAwB,KAAxB,EAA+B,QAA/B,CAA/C,CAAlB;EACA,MAAMkX,YAAY,GAAGJ,QAAQ,KAAK9W,SAAS,CAAClc,CAA5C;EACA,MAAMqzB,aAAa,GAAGH,SAAS,KAAKhX,SAAS,CAAC9d,CAA9C;EACA8d,SAAS,CAAClc,CAAV,GAAcgzB,QAAd;EACA9W,SAAS,CAAC9d,CAAV,GAAc80B,SAAd;EACA,OAAOvB,MAAM,CAAC5P,UAAP,GACH;IAAC8Q,IAAI,EAAEO,YAAP;IAAqBN,KAAK,EAAEO;EAA5B,CADG,GAEH;IAACR,IAAI,EAAEQ,aAAP;IAAsBP,KAAK,EAAEM;EAA7B,CAFJ;AAGD;;AACD,SAASE,gBAAT,CAA0BpX,SAA1B,EAAqC;EACnC,MAAMuW,UAAU,GAAGvW,SAAS,CAACuW,UAA7B;;EACA,SAASc,SAAT,CAAmBxC,GAAnB,EAAwB;IACtB,MAAMyC,MAAM,GAAG5pB,IAAI,CAACmC,GAAL,CAAS0mB,UAAU,CAAC1B,GAAD,CAAV,GAAkB7U,SAAS,CAAC6U,GAAD,CAApC,EAA2C,CAA3C,CAAf;IACA7U,SAAS,CAAC6U,GAAD,CAAT,IAAkByC,MAAlB;IACA,OAAOA,MAAP;EACD;;EACDtX,SAAS,CAAC9b,CAAV,IAAemzB,SAAS,CAAC,KAAD,CAAxB;EACArX,SAAS,CAAChc,CAAV,IAAeqzB,SAAS,CAAC,MAAD,CAAxB;EACAA,SAAS,CAAC,OAAD,CAAT;EACAA,SAAS,CAAC,QAAD,CAAT;AACD;;AACD,SAASE,UAAT,CAAoB1R,UAApB,EAAgC7F,SAAhC,EAA2C;EACzC,MAAMuW,UAAU,GAAGvW,SAAS,CAACuW,UAA7B;;EACA,SAASiB,kBAAT,CAA4BC,SAA5B,EAAuC;IACrC,MAAMC,MAAM,GAAG;MAACrhB,IAAI,EAAE,CAAP;MAAUH,GAAG,EAAE,CAAf;MAAkBC,KAAK,EAAE,CAAzB;MAA4BC,MAAM,EAAE;IAApC,CAAf;IACAqhB,SAAS,CAAClqB,OAAV,CAAmBsnB,GAAD,IAAS;MACzB6C,MAAM,CAAC7C,GAAD,CAAN,GAAcnnB,IAAI,CAACmC,GAAL,CAASmQ,SAAS,CAAC6U,GAAD,CAAlB,EAAyB0B,UAAU,CAAC1B,GAAD,CAAnC,CAAd;IACD,CAFD;IAGA,OAAO6C,MAAP;EACD;;EACD,OAAO7R,UAAU,GACb2R,kBAAkB,CAAC,CAAC,MAAD,EAAS,OAAT,CAAD,CADL,GAEbA,kBAAkB,CAAC,CAAC,KAAD,EAAQ,QAAR,CAAD,CAFtB;AAGD;;AACD,SAASG,QAAT,CAAkBvC,KAAlB,EAAyBpV,SAAzB,EAAoCwV,MAApC,EAA4C;EAC1C,MAAMoC,UAAU,GAAG,EAAnB;EACA,IAAI12B,CAAJ,EAAOyV,IAAP,EAAa8e,MAAb,EAAqBV,GAArB,EAA0B8C,KAA1B,EAAiCrI,OAAjC;;EACA,KAAKtuB,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGye,KAAK,CAAC7mB,MAApB,EAA4BspB,KAAK,GAAG,CAAzC,EAA4C32B,CAAC,GAAGyV,IAAhD,EAAsD,EAAEzV,CAAxD,EAA2D;IACzDu0B,MAAM,GAAGL,KAAK,CAACl0B,CAAD,CAAd;IACA6zB,GAAG,GAAGU,MAAM,CAACV,GAAb;IACAA,GAAG,CAAC3iB,MAAJ,CACEqjB,MAAM,CAACjP,KAAP,IAAgBxG,SAAS,CAAClc,CAD5B,EAEE2xB,MAAM,CAAClP,MAAP,IAAiBvG,SAAS,CAAC9d,CAF7B,EAGEq1B,UAAU,CAAC9B,MAAM,CAAC5P,UAAR,EAAoB7F,SAApB,CAHZ;IAKA,MAAM;MAAC2W,IAAD;MAAOC;IAAP,IAAgBF,UAAU,CAAC1W,SAAD,EAAYwV,MAAZ,EAAoBC,MAApB,CAAhC;IACAoC,KAAK,IAAIlB,IAAI,IAAIiB,UAAU,CAACrpB,MAA5B;IACAihB,OAAO,GAAGA,OAAO,IAAIoH,KAArB;;IACA,IAAI,CAAC7B,GAAG,CAACW,QAAT,EAAmB;MACjBkC,UAAU,CAACroB,IAAX,CAAgBkmB,MAAhB;IACD;EACF;;EACD,OAAOoC,KAAK,IAAIF,QAAQ,CAACC,UAAD,EAAa5X,SAAb,EAAwBwV,MAAxB,CAAjB,IAAoDhG,OAA3D;AACD;;AACD,SAASsI,UAAT,CAAoB1C,KAApB,EAA2BpV,SAA3B,EAAsCwV,MAAtC,EAA8C;EAC5C,MAAMuC,WAAW,GAAGvC,MAAM,CAACwC,OAA3B;EACA,IAAIh0B,CAAC,GAAGgc,SAAS,CAAChc,CAAlB;EACA,IAAIE,CAAC,GAAG8b,SAAS,CAAC9b,CAAlB;EACA,IAAIhD,CAAJ,EAAOyV,IAAP,EAAa8e,MAAb,EAAqBV,GAArB;;EACA,KAAK7zB,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGye,KAAK,CAAC7mB,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2C,EAAEzV,CAA7C,EAAgD;IAC9Cu0B,MAAM,GAAGL,KAAK,CAACl0B,CAAD,CAAd;IACA6zB,GAAG,GAAGU,MAAM,CAACV,GAAb;;IACA,IAAIU,MAAM,CAAC5P,UAAX,EAAuB;MACrBkP,GAAG,CAAC1e,IAAJ,GAAW0e,GAAG,CAACW,QAAJ,GAAeqC,WAAW,CAAC1hB,IAA3B,GAAkC2J,SAAS,CAAC3J,IAAvD;MACA0e,GAAG,CAAC5e,KAAJ,GAAY4e,GAAG,CAACW,QAAJ,GAAeF,MAAM,CAACuB,UAAP,GAAoBgB,WAAW,CAAC5hB,KAA/C,GAAuD6J,SAAS,CAAC3J,IAAV,GAAiB2J,SAAS,CAAClc,CAA9F;MACAixB,GAAG,CAAC7e,GAAJ,GAAUhS,CAAV;MACA6wB,GAAG,CAAC3e,MAAJ,GAAalS,CAAC,GAAG6wB,GAAG,CAACxO,MAArB;MACAwO,GAAG,CAACvO,KAAJ,GAAYuO,GAAG,CAAC5e,KAAJ,GAAY4e,GAAG,CAAC1e,IAA5B;MACAnS,CAAC,GAAG6wB,GAAG,CAAC3e,MAAR;IACD,CAPD,MAOO;MACL2e,GAAG,CAAC1e,IAAJ,GAAWrS,CAAX;MACA+wB,GAAG,CAAC5e,KAAJ,GAAYnS,CAAC,GAAG+wB,GAAG,CAACvO,KAApB;MACAuO,GAAG,CAAC7e,GAAJ,GAAU6e,GAAG,CAACW,QAAJ,GAAeqC,WAAW,CAAC7hB,GAA3B,GAAiC8J,SAAS,CAAC9J,GAArD;MACA6e,GAAG,CAAC3e,MAAJ,GAAa2e,GAAG,CAACW,QAAJ,GAAeF,MAAM,CAACyB,WAAP,GAAqBc,WAAW,CAAC5hB,KAAhD,GAAwD6J,SAAS,CAAC9J,GAAV,GAAgB8J,SAAS,CAAC9d,CAA/F;MACA6yB,GAAG,CAACxO,MAAJ,GAAawO,GAAG,CAAC3e,MAAJ,GAAa2e,GAAG,CAAC7e,GAA9B;MACAlS,CAAC,GAAG+wB,GAAG,CAAC5e,KAAR;IACD;EACF;;EACD6J,SAAS,CAAChc,CAAV,GAAcA,CAAd;EACAgc,SAAS,CAAC9b,CAAV,GAAcA,CAAd;AACD;;AACD3C,QAAQ,CAAC4N,GAAT,CAAa,QAAb,EAAuB;EACrB6oB,OAAO,EAAE;IACP9hB,GAAG,EAAE,CADE;IAEPC,KAAK,EAAE,CAFA;IAGPC,MAAM,EAAE,CAHD;IAIPC,IAAI,EAAE;EAJC;AADY,CAAvB;AAQA,IAAIkf,OAAO,GAAG;EACZ0C,MAAM,CAAClrB,KAAD,EAAQ0B,IAAR,EAAc;IAClB,IAAI,CAAC1B,KAAK,CAACqoB,KAAX,EAAkB;MAChBroB,KAAK,CAACqoB,KAAN,GAAc,EAAd;IACD;;IACD3mB,IAAI,CAACinB,QAAL,GAAgBjnB,IAAI,CAACinB,QAAL,IAAiB,KAAjC;IACAjnB,IAAI,CAACukB,QAAL,GAAgBvkB,IAAI,CAACukB,QAAL,IAAiB,KAAjC;IACAvkB,IAAI,CAACie,MAAL,GAAcje,IAAI,CAACie,MAAL,IAAe,CAA7B;;IACAje,IAAI,CAACypB,OAAL,GAAezpB,IAAI,CAACypB,OAAL,IAAgB,YAAW;MACxC,OAAO,CAAC;QACN9zB,CAAC,EAAE,CADG;;QAENoK,IAAI,CAACwR,SAAD,EAAY;UACdvR,IAAI,CAACD,IAAL,CAAUwR,SAAV;QACD;;MAJK,CAAD,CAAP;IAMD,CAPD;;IAQAjT,KAAK,CAACqoB,KAAN,CAAY7lB,IAAZ,CAAiBd,IAAjB;EACD,CAjBW;;EAkBZ0pB,SAAS,CAACprB,KAAD,EAAQqrB,UAAR,EAAoB;IAC3B,MAAMxhB,KAAK,GAAG7J,KAAK,CAACqoB,KAAN,GAAcroB,KAAK,CAACqoB,KAAN,CAAYvO,OAAZ,CAAoBuR,UAApB,CAAd,GAAgD,CAAC,CAA/D;;IACA,IAAIxhB,KAAK,KAAK,CAAC,CAAf,EAAkB;MAChB7J,KAAK,CAACqoB,KAAN,CAAY7S,MAAZ,CAAmB3L,KAAnB,EAA0B,CAA1B;IACD;EACF,CAvBW;;EAwBZzC,SAAS,CAACpH,KAAD,EAAQ0B,IAAR,EAAckG,OAAd,EAAuB;IAC9BlG,IAAI,CAACinB,QAAL,GAAgB/gB,OAAO,CAAC+gB,QAAxB;IACAjnB,IAAI,CAACukB,QAAL,GAAgBre,OAAO,CAACqe,QAAxB;IACAvkB,IAAI,CAACie,MAAL,GAAc/X,OAAO,CAAC+X,MAAtB;EACD,CA5BW;;EA6BZta,MAAM,CAACrF,KAAD,EAAQyZ,KAAR,EAAeD,MAAf,EAAuB8R,UAAvB,EAAmC;IACvC,IAAI,CAACtrB,KAAL,EAAY;MACV;IACD;;IACD,MAAMirB,OAAO,GAAGrzB,SAAS,CAACoI,KAAK,CAAC4H,OAAN,CAAc8gB,MAAd,CAAqBuC,OAAtB,CAAzB;IACA,MAAMrC,cAAc,GAAGnP,KAAK,GAAGwR,OAAO,CAACxR,KAAvC;IACA,MAAMsP,eAAe,GAAGvP,MAAM,GAAGyR,OAAO,CAACzR,MAAzC;IACA,MAAM6O,KAAK,GAAGW,gBAAgB,CAAChpB,KAAK,CAACqoB,KAAP,CAA9B;IACA,MAAMkD,aAAa,GAAGlD,KAAK,CAACiB,QAA5B;IACA,MAAMkC,eAAe,GAAGnD,KAAK,CAACvP,UAA9B;IACAhhB,IAAI,CAACkI,KAAK,CAACqoB,KAAP,EAAcL,GAAG,IAAI;MACvB,IAAI,OAAOA,GAAG,CAACyD,YAAX,KAA4B,UAAhC,EAA4C;QAC1CzD,GAAG,CAACyD,YAAJ;MACD;IACF,CAJG,CAAJ;IAKA,MAAMC,uBAAuB,GAAGH,aAAa,CAAC5oB,MAAd,CAAqB,CAAC8b,KAAD,EAAQwK,IAAR,KACnDA,IAAI,CAACjB,GAAL,CAASpgB,OAAT,IAAoBqhB,IAAI,CAACjB,GAAL,CAASpgB,OAAT,CAAiB4b,OAAjB,KAA6B,KAAjD,GAAyD/E,KAAzD,GAAiEA,KAAK,GAAG,CAD3C,EAC8C,CAD9C,KACoD,CADpF;IAEA,MAAMgK,MAAM,GAAGviB,MAAM,CAAC8N,MAAP,CAAc;MAC3BgW,UAAU,EAAEvQ,KADe;MAE3ByQ,WAAW,EAAE1Q,MAFc;MAG3ByR,OAH2B;MAI3BrC,cAJ2B;MAK3BG,eAL2B;MAM3BD,YAAY,EAAEF,cAAc,GAAG,CAAjB,GAAqB8C,uBANR;MAO3B7C,aAAa,EAAEE,eAAe,GAAG;IAPN,CAAd,CAAf;IASA,MAAMS,UAAU,GAAGtjB,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkB0iB,OAAlB,CAAnB;IACAxB,gBAAgB,CAACD,UAAD,EAAa5xB,SAAS,CAAC0zB,UAAD,CAAtB,CAAhB;IACA,MAAMrY,SAAS,GAAG/M,MAAM,CAACqC,MAAP,CAAc;MAC9BihB,UAD8B;MAE9BzyB,CAAC,EAAE6xB,cAF2B;MAG9BzzB,CAAC,EAAE4zB,eAH2B;MAI9B9xB,CAAC,EAAEg0B,OAAO,CAAC3hB,IAJmB;MAK9BnS,CAAC,EAAE8zB,OAAO,CAAC9hB;IALmB,CAAd,EAMf8hB,OANe,CAAlB;IAOA1C,aAAa,CAACgD,aAAa,CAAClV,MAAd,CAAqBmV,eAArB,CAAD,EAAwC/C,MAAxC,CAAb;IACAmC,QAAQ,CAACvC,KAAK,CAACM,QAAP,EAAiB1V,SAAjB,EAA4BwV,MAA5B,CAAR;IACAmC,QAAQ,CAACW,aAAD,EAAgBtY,SAAhB,EAA2BwV,MAA3B,CAAR;;IACA,IAAImC,QAAQ,CAACY,eAAD,EAAkBvY,SAAlB,EAA6BwV,MAA7B,CAAZ,EAAkD;MAChDmC,QAAQ,CAACW,aAAD,EAAgBtY,SAAhB,EAA2BwV,MAA3B,CAAR;IACD;;IACD4B,gBAAgB,CAACpX,SAAD,CAAhB;IACA8X,UAAU,CAAC1C,KAAK,CAACe,UAAP,EAAmBnW,SAAnB,EAA8BwV,MAA9B,CAAV;IACAxV,SAAS,CAAChc,CAAV,IAAegc,SAAS,CAAClc,CAAzB;IACAkc,SAAS,CAAC9b,CAAV,IAAe8b,SAAS,CAAC9d,CAAzB;IACA41B,UAAU,CAAC1C,KAAK,CAACgB,cAAP,EAAuBpW,SAAvB,EAAkCwV,MAAlC,CAAV;IACAzoB,KAAK,CAACiT,SAAN,GAAkB;MAChB3J,IAAI,EAAE2J,SAAS,CAAC3J,IADA;MAEhBH,GAAG,EAAE8J,SAAS,CAAC9J,GAFC;MAGhBC,KAAK,EAAE6J,SAAS,CAAC3J,IAAV,GAAiB2J,SAAS,CAAClc,CAHlB;MAIhBsS,MAAM,EAAE4J,SAAS,CAAC9J,GAAV,GAAgB8J,SAAS,CAAC9d,CAJlB;MAKhBqkB,MAAM,EAAEvG,SAAS,CAAC9d,CALF;MAMhBskB,KAAK,EAAExG,SAAS,CAAClc;IAND,CAAlB;IAQAe,IAAI,CAACuwB,KAAK,CAACpV,SAAP,EAAmByV,MAAD,IAAY;MAChC,MAAMV,GAAG,GAAGU,MAAM,CAACV,GAAnB;MACA9hB,MAAM,CAACqC,MAAP,CAAcyf,GAAd,EAAmBhoB,KAAK,CAACiT,SAAzB;MACA+U,GAAG,CAAC3iB,MAAJ,CAAW4N,SAAS,CAAClc,CAArB,EAAwBkc,SAAS,CAAC9d,CAAlC;IACD,CAJG,CAAJ;EAKD;;AAxFW,CAAd;;AA2FA,MAAMw2B,YAAN,CAAmB;EACjBC,cAAc,CAACC,MAAD,EAASjM,WAAT,EAAsB,CAAE;;EACtCkM,cAAc,CAACzY,OAAD,EAAU;IACtB,OAAO,KAAP;EACD;;EACD0Y,gBAAgB,CAAC/rB,KAAD,EAAQG,IAAR,EAAc6rB,QAAd,EAAwB,CAAE;;EAC1CC,mBAAmB,CAACjsB,KAAD,EAAQG,IAAR,EAAc6rB,QAAd,EAAwB,CAAE;;EAC7CE,mBAAmB,GAAG;IACpB,OAAO,CAAP;EACD;;EACDl0B,cAAc,CAAC+U,OAAD,EAAU0M,KAAV,EAAiBD,MAAjB,EAAyBoG,WAAzB,EAAsC;IAClDnG,KAAK,GAAG9Y,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY2W,KAAK,IAAI1M,OAAO,CAAC0M,KAA7B,CAAR;IACAD,MAAM,GAAGA,MAAM,IAAIzM,OAAO,CAACyM,MAA3B;IACA,OAAO;MACLC,KADK;MAELD,MAAM,EAAE7Y,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY8c,WAAW,GAAGjf,IAAI,CAACgE,KAAL,CAAW8U,KAAK,GAAGmG,WAAnB,CAAH,GAAqCpG,MAA5D;IAFH,CAAP;EAID;;EACD2S,UAAU,CAACN,MAAD,EAAS;IACjB,OAAO,IAAP;EACD;;AApBgB;;AAuBnB,MAAMO,aAAN,SAA4BT,YAA5B,CAAyC;EACvCC,cAAc,CAAClqB,IAAD,EAAO;IACnB,OAAOA,IAAI,IAAIA,IAAI,CAACkP,UAAb,IAA2BlP,IAAI,CAACkP,UAAL,CAAgB,IAAhB,CAA3B,IAAoD,IAA3D;EACD;;AAHsC;;AAMzC,MAAMyb,WAAW,GAAG,UAApB;AACA,MAAMC,WAAW,GAAG;EAClBC,UAAU,EAAE,WADM;EAElBC,SAAS,EAAE,WAFO;EAGlBC,QAAQ,EAAE,SAHQ;EAIlBC,YAAY,EAAE,YAJI;EAKlBC,WAAW,EAAE,WALK;EAMlBC,WAAW,EAAE,WANK;EAOlBC,SAAS,EAAE,SAPO;EAQlBC,YAAY,EAAE,UARI;EASlBC,UAAU,EAAE;AATM,CAApB;;AAWA,MAAMC,aAAa,GAAG3kB,KAAK,IAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAA3D;;AACA,SAAS4kB,UAAT,CAAoBpB,MAApB,EAA4BjM,WAA5B,EAAyC;EACvC,MAAMI,KAAK,GAAG6L,MAAM,CAAC7L,KAArB;EACA,MAAMkN,YAAY,GAAGrB,MAAM,CAACsB,YAAP,CAAoB,QAApB,CAArB;EACA,MAAMC,WAAW,GAAGvB,MAAM,CAACsB,YAAP,CAAoB,OAApB,CAApB;EACAtB,MAAM,CAACQ,WAAD,CAAN,GAAsB;IACpBgB,OAAO,EAAE;MACP7T,MAAM,EAAE0T,YADD;MAEPzT,KAAK,EAAE2T,WAFA;MAGPpN,KAAK,EAAE;QACLwD,OAAO,EAAExD,KAAK,CAACwD,OADV;QAELhK,MAAM,EAAEwG,KAAK,CAACxG,MAFT;QAGLC,KAAK,EAAEuG,KAAK,CAACvG;MAHR;IAHA;EADW,CAAtB;EAWAuG,KAAK,CAACwD,OAAN,GAAgBxD,KAAK,CAACwD,OAAN,IAAiB,OAAjC;EACAxD,KAAK,CAACsN,SAAN,GAAkBtN,KAAK,CAACsN,SAAN,IAAmB,YAArC;;EACA,IAAIN,aAAa,CAACI,WAAD,CAAjB,EAAgC;IAC9B,MAAMG,YAAY,GAAGn1B,YAAY,CAACyzB,MAAD,EAAS,OAAT,CAAjC;;IACA,IAAI0B,YAAY,KAAKztB,SAArB,EAAgC;MAC9B+rB,MAAM,CAACpS,KAAP,GAAe8T,YAAf;IACD;EACF;;EACD,IAAIP,aAAa,CAACE,YAAD,CAAjB,EAAiC;IAC/B,IAAIrB,MAAM,CAAC7L,KAAP,CAAaxG,MAAb,KAAwB,EAA5B,EAAgC;MAC9BqS,MAAM,CAACrS,MAAP,GAAgBqS,MAAM,CAACpS,KAAP,IAAgBmG,WAAW,IAAI,CAA/B,CAAhB;IACD,CAFD,MAEO;MACL,MAAM4N,aAAa,GAAGp1B,YAAY,CAACyzB,MAAD,EAAS,QAAT,CAAlC;;MACA,IAAI2B,aAAa,KAAK1tB,SAAtB,EAAiC;QAC/B+rB,MAAM,CAACrS,MAAP,GAAgBgU,aAAhB;MACD;IACF;EACF;;EACD,OAAO3B,MAAP;AACD;;AACD,MAAM4B,oBAAoB,GAAGj1B,4BAA4B,GAAG;EAACk1B,OAAO,EAAE;AAAV,CAAH,GAAqB,KAA9E;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2BztB,IAA3B,EAAiC6rB,QAAjC,EAA2C;EACzC4B,IAAI,CAAC7B,gBAAL,CAAsB5rB,IAAtB,EAA4B6rB,QAA5B,EAAsCyB,oBAAtC;AACD;;AACD,SAASI,cAAT,CAAwB7tB,KAAxB,EAA+BG,IAA/B,EAAqC6rB,QAArC,EAA+C;EAC7ChsB,KAAK,CAAC6rB,MAAN,CAAaI,mBAAb,CAAiC9rB,IAAjC,EAAuC6rB,QAAvC,EAAiDyB,oBAAjD;AACD;;AACD,SAASK,eAAT,CAAyBxrB,KAAzB,EAAgCtC,KAAhC,EAAuC;EACrC,MAAMG,IAAI,GAAGmsB,WAAW,CAAChqB,KAAK,CAACnC,IAAP,CAAX,IAA2BmC,KAAK,CAACnC,IAA9C;EACA,MAAM;IAAClJ,CAAD;IAAIE;EAAJ,IAASG,qBAAqB,CAACgL,KAAD,EAAQtC,KAAR,CAApC;EACA,OAAO;IACLG,IADK;IAELH,KAFK;IAGL+tB,MAAM,EAAEzrB,KAHH;IAILrL,CAAC,EAAEA,CAAC,KAAK6I,SAAN,GAAkB7I,CAAlB,GAAsB,IAJpB;IAKLE,CAAC,EAAEA,CAAC,KAAK2I,SAAN,GAAkB3I,CAAlB,GAAsB;EALpB,CAAP;AAOD;;AACD,SAAS62B,oBAAT,CAA8BhuB,KAA9B,EAAqCG,IAArC,EAA2C6rB,QAA3C,EAAqD;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAArB;;EACA,MAAMoC,SAAS,GAAGpC,MAAM,IAAI3zB,cAAc,CAAC2zB,MAAD,CAA1C;;EACA,MAAM9e,OAAO,GAAGkhB,SAAS,IAAIpC,MAA7B;EACA,MAAMqC,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBC,OAAO,IAAI;IAC/C,MAAMzhB,MAAM,GAAGzU,cAAc,CAAC6U,OAAD,CAA7B;;IACAqhB,OAAO,CAAC5tB,OAAR,CAAgBqX,KAAK,IAAI;MACvB,KAAK,IAAI1jB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0jB,KAAK,CAACwW,UAAN,CAAiB7sB,MAArC,EAA6CrN,CAAC,EAA9C,EAAkD;QAChD,MAAMm6B,KAAK,GAAGzW,KAAK,CAACwW,UAAN,CAAiBl6B,CAAjB,CAAd;;QACA,IAAIm6B,KAAK,KAAKvhB,OAAV,IAAqBuhB,KAAK,KAAK3hB,MAAnC,EAA2C;UACzCqf,QAAQ,CAACnU,KAAK,CAAC1T,MAAP,CAAR;QACD;MACF;IACF,CAPD;EAQD,CAVgB,CAAjB;EAWA+pB,QAAQ,CAACK,OAAT,CAAiBC,QAAjB,EAA2B;IAACC,SAAS,EAAE,IAAZ;IAAkBC,OAAO,EAAE;EAA3B,CAA3B;EACA,OAAOR,QAAP;AACD;;AACD,SAASS,oBAAT,CAA8B3uB,KAA9B,EAAqCG,IAArC,EAA2C6rB,QAA3C,EAAqD;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAArB;;EACA,MAAMoC,SAAS,GAAGpC,MAAM,IAAI3zB,cAAc,CAAC2zB,MAAD,CAA1C;;EACA,IAAI,CAACoC,SAAL,EAAgB;IACd;EACD;;EACD,MAAMC,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBC,OAAO,IAAI;IAC/CA,OAAO,CAAC5tB,OAAR,CAAgBqX,KAAK,IAAI;MACvB,KAAK,IAAI1jB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0jB,KAAK,CAAC+W,YAAN,CAAmBptB,MAAvC,EAA+CrN,CAAC,EAAhD,EAAoD;QAClD,IAAI0jB,KAAK,CAAC+W,YAAN,CAAmBz6B,CAAnB,MAA0B03B,MAA9B,EAAsC;UACpCG,QAAQ;UACR;QACD;MACF;IACF,CAPD;EAQD,CATgB,CAAjB;EAUAkC,QAAQ,CAACK,OAAT,CAAiBN,SAAjB,EAA4B;IAACQ,SAAS,EAAE;EAAZ,CAA5B;EACA,OAAOP,QAAP;AACD;;AACD,MAAMW,kBAAkB,GAAG,IAAIlvB,GAAJ,EAA3B;AACA,IAAImvB,mBAAmB,GAAG,CAA1B;;AACA,SAASC,cAAT,GAA0B;EACxB,MAAMC,GAAG,GAAG/tB,MAAM,CAACguB,gBAAnB;;EACA,IAAID,GAAG,KAAKF,mBAAZ,EAAiC;IAC/B;EACD;;EACDA,mBAAmB,GAAGE,GAAtB;EACAH,kBAAkB,CAACruB,OAAnB,CAA2B,CAACmG,MAAD,EAAS3G,KAAT,KAAmB;IAC5C,IAAIA,KAAK,CAACkvB,uBAAN,KAAkCF,GAAtC,EAA2C;MACzCroB,MAAM;IACP;EACF,CAJD;AAKD;;AACD,SAASwoB,6BAAT,CAAuCnvB,KAAvC,EAA8C2G,MAA9C,EAAsD;EACpD,IAAI,CAACkoB,kBAAkB,CAACvmB,IAAxB,EAA8B;IAC5BrH,MAAM,CAAC8qB,gBAAP,CAAwB,QAAxB,EAAkCgD,cAAlC;EACD;;EACDF,kBAAkB,CAACzsB,GAAnB,CAAuBpC,KAAvB,EAA8B2G,MAA9B;AACD;;AACD,SAASyoB,+BAAT,CAAyCpvB,KAAzC,EAAgD;EAC9C6uB,kBAAkB,CAAC1rB,MAAnB,CAA0BnD,KAA1B;;EACA,IAAI,CAAC6uB,kBAAkB,CAACvmB,IAAxB,EAA8B;IAC5BrH,MAAM,CAACgrB,mBAAP,CAA2B,QAA3B,EAAqC8C,cAArC;EACD;AACF;;AACD,SAASM,oBAAT,CAA8BrvB,KAA9B,EAAqCG,IAArC,EAA2C6rB,QAA3C,EAAqD;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAArB;;EACA,MAAMoC,SAAS,GAAGpC,MAAM,IAAI3zB,cAAc,CAAC2zB,MAAD,CAA1C;;EACA,IAAI,CAACoC,SAAL,EAAgB;IACd;EACD;;EACD,MAAMtnB,MAAM,GAAGrO,SAAS,CAAC,CAACmhB,KAAD,EAAQD,MAAR,KAAmB;IAC1C,MAAMziB,CAAC,GAAGk3B,SAAS,CAACqB,WAApB;IACAtD,QAAQ,CAACvS,KAAD,EAAQD,MAAR,CAAR;;IACA,IAAIziB,CAAC,GAAGk3B,SAAS,CAACqB,WAAlB,EAA+B;MAC7BtD,QAAQ;IACT;EACF,CANuB,EAMrB/qB,MANqB,CAAxB;EAOA,MAAMitB,QAAQ,GAAG,IAAIqB,cAAJ,CAAmBnB,OAAO,IAAI;IAC7C,MAAMvW,KAAK,GAAGuW,OAAO,CAAC,CAAD,CAArB;IACA,MAAM3U,KAAK,GAAG5B,KAAK,CAAC2X,WAAN,CAAkB/V,KAAhC;IACA,MAAMD,MAAM,GAAG3B,KAAK,CAAC2X,WAAN,CAAkBhW,MAAjC;;IACA,IAAIC,KAAK,KAAK,CAAV,IAAeD,MAAM,KAAK,CAA9B,EAAiC;MAC/B;IACD;;IACD7S,MAAM,CAAC8S,KAAD,EAAQD,MAAR,CAAN;EACD,CARgB,CAAjB;EASA0U,QAAQ,CAACK,OAAT,CAAiBN,SAAjB;EACAkB,6BAA6B,CAACnvB,KAAD,EAAQ2G,MAAR,CAA7B;EACA,OAAOunB,QAAP;AACD;;AACD,SAASuB,eAAT,CAAyBzvB,KAAzB,EAAgCG,IAAhC,EAAsC+tB,QAAtC,EAAgD;EAC9C,IAAIA,QAAJ,EAAc;IACZA,QAAQ,CAACwB,UAAT;EACD;;EACD,IAAIvvB,IAAI,KAAK,QAAb,EAAuB;IACrBivB,+BAA+B,CAACpvB,KAAD,CAA/B;EACD;AACF;;AACD,SAAS2vB,oBAAT,CAA8B3vB,KAA9B,EAAqCG,IAArC,EAA2C6rB,QAA3C,EAAqD;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAArB;EACA,MAAM+D,KAAK,GAAGt3B,SAAS,CAAEgK,KAAD,IAAW;IACjC,IAAItC,KAAK,CAAC0N,GAAN,KAAc,IAAlB,EAAwB;MACtBse,QAAQ,CAAC8B,eAAe,CAACxrB,KAAD,EAAQtC,KAAR,CAAhB,CAAR;IACD;EACF,CAJsB,EAIpBA,KAJoB,EAIZ6vB,IAAD,IAAU;IAClB,MAAMvtB,KAAK,GAAGutB,IAAI,CAAC,CAAD,CAAlB;IACA,OAAO,CAACvtB,KAAD,EAAQA,KAAK,CAAC+Z,OAAd,EAAuB/Z,KAAK,CAACga,OAA7B,CAAP;EACD,CAPsB,CAAvB;EAQAqR,WAAW,CAAC9B,MAAD,EAAS1rB,IAAT,EAAeyvB,KAAf,CAAX;EACA,OAAOA,KAAP;AACD;;AACD,MAAME,WAAN,SAA0BnE,YAA1B,CAAuC;EACrCC,cAAc,CAACC,MAAD,EAASjM,WAAT,EAAsB;IAClC,MAAMvM,OAAO,GAAGwY,MAAM,IAAIA,MAAM,CAACjb,UAAjB,IAA+Bib,MAAM,CAACjb,UAAP,CAAkB,IAAlB,CAA/C;;IACA,IAAIyC,OAAO,IAAIA,OAAO,CAACwY,MAAR,KAAmBA,MAAlC,EAA0C;MACxCoB,UAAU,CAACpB,MAAD,EAASjM,WAAT,CAAV;MACA,OAAOvM,OAAP;IACD;;IACD,OAAO,IAAP;EACD;;EACDyY,cAAc,CAACzY,OAAD,EAAU;IACtB,MAAMwY,MAAM,GAAGxY,OAAO,CAACwY,MAAvB;;IACA,IAAI,CAACA,MAAM,CAACQ,WAAD,CAAX,EAA0B;MACxB,OAAO,KAAP;IACD;;IACD,MAAMgB,OAAO,GAAGxB,MAAM,CAACQ,WAAD,CAAN,CAAoBgB,OAApC;IACA,CAAC,QAAD,EAAW,OAAX,EAAoB7sB,OAApB,CAA6B4D,IAAD,IAAU;MACpC,MAAMiE,KAAK,GAAGglB,OAAO,CAACjpB,IAAD,CAArB;;MACA,IAAI5O,aAAa,CAAC6S,KAAD,CAAjB,EAA0B;QACxBwjB,MAAM,CAACkE,eAAP,CAAuB3rB,IAAvB;MACD,CAFD,MAEO;QACLynB,MAAM,CAACmE,YAAP,CAAoB5rB,IAApB,EAA0BiE,KAA1B;MACD;IACF,CAPD;IAQA,MAAM2X,KAAK,GAAGqN,OAAO,CAACrN,KAAR,IAAiB,EAA/B;IACA9Z,MAAM,CAACC,IAAP,CAAY6Z,KAAZ,EAAmBxf,OAAnB,CAA4B+G,GAAD,IAAS;MAClCskB,MAAM,CAAC7L,KAAP,CAAazY,GAAb,IAAoByY,KAAK,CAACzY,GAAD,CAAzB;IACD,CAFD;IAGAskB,MAAM,CAACpS,KAAP,GAAeoS,MAAM,CAACpS,KAAtB;IACA,OAAOoS,MAAM,CAACQ,WAAD,CAAb;IACA,OAAO,IAAP;EACD;;EACDN,gBAAgB,CAAC/rB,KAAD,EAAQG,IAAR,EAAc6rB,QAAd,EAAwB;IACtC,KAAKC,mBAAL,CAAyBjsB,KAAzB,EAAgCG,IAAhC;IACA,MAAM8vB,OAAO,GAAGjwB,KAAK,CAACkwB,QAAN,KAAmBlwB,KAAK,CAACkwB,QAAN,GAAiB,EAApC,CAAhB;IACA,MAAMC,QAAQ,GAAG;MACfC,MAAM,EAAEpC,oBADO;MAEfqC,MAAM,EAAE1B,oBAFO;MAGfhoB,MAAM,EAAE0oB;IAHO,CAAjB;IAKA,MAAM/J,OAAO,GAAG6K,QAAQ,CAAChwB,IAAD,CAAR,IAAkBwvB,oBAAlC;IACAM,OAAO,CAAC9vB,IAAD,CAAP,GAAgBmlB,OAAO,CAACtlB,KAAD,EAAQG,IAAR,EAAc6rB,QAAd,CAAvB;EACD;;EACDC,mBAAmB,CAACjsB,KAAD,EAAQG,IAAR,EAAc;IAC/B,MAAM8vB,OAAO,GAAGjwB,KAAK,CAACkwB,QAAN,KAAmBlwB,KAAK,CAACkwB,QAAN,GAAiB,EAApC,CAAhB;IACA,MAAMN,KAAK,GAAGK,OAAO,CAAC9vB,IAAD,CAArB;;IACA,IAAI,CAACyvB,KAAL,EAAY;MACV;IACD;;IACD,MAAMO,QAAQ,GAAG;MACfC,MAAM,EAAEX,eADO;MAEfY,MAAM,EAAEZ,eAFO;MAGf9oB,MAAM,EAAE8oB;IAHO,CAAjB;IAKA,MAAMnK,OAAO,GAAG6K,QAAQ,CAAChwB,IAAD,CAAR,IAAkB0tB,cAAlC;IACAvI,OAAO,CAACtlB,KAAD,EAAQG,IAAR,EAAcyvB,KAAd,CAAP;IACAK,OAAO,CAAC9vB,IAAD,CAAP,GAAgBL,SAAhB;EACD;;EACDosB,mBAAmB,GAAG;IACpB,OAAOjrB,MAAM,CAACguB,gBAAd;EACD;;EACDj3B,cAAc,CAAC6zB,MAAD,EAASpS,KAAT,EAAgBD,MAAhB,EAAwBoG,WAAxB,EAAqC;IACjD,OAAO5nB,cAAc,CAAC6zB,MAAD,EAASpS,KAAT,EAAgBD,MAAhB,EAAwBoG,WAAxB,CAArB;EACD;;EACDuM,UAAU,CAACN,MAAD,EAAS;IACjB,MAAMoC,SAAS,GAAG/1B,cAAc,CAAC2zB,MAAD,CAAhC;;IACA,OAAO,CAAC,EAAEoC,SAAS,IAAI/1B,cAAc,CAAC+1B,SAAD,CAA7B,CAAR;EACD;;AAlEoC;;AAqEvC,MAAMqC,OAAN,CAAc;EACZ9wB,WAAW,GAAG;IACZ,KAAKvI,CAAL,GAAS6I,SAAT;IACA,KAAK3I,CAAL,GAAS2I,SAAT;IACA,KAAKsF,MAAL,GAAc,KAAd;IACA,KAAKwC,OAAL,GAAe9H,SAAf;IACA,KAAKmI,WAAL,GAAmBnI,SAAnB;EACD;;EACDywB,eAAe,CAAC3J,gBAAD,EAAmB;IAChC,MAAM;MAAC3vB,CAAD;MAAIE;IAAJ,IAAS,KAAKq5B,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0B5J,gBAA1B,CAAf;IACA,OAAO;MAAC3vB,CAAD;MAAIE;IAAJ,CAAP;EACD;;EACDs5B,QAAQ,GAAG;IACT,OAAOz5B,QAAQ,CAAC,KAAKC,CAAN,CAAR,IAAoBD,QAAQ,CAAC,KAAKG,CAAN,CAAnC;EACD;;EACDq5B,QAAQ,CAACroB,KAAD,EAAQuoB,KAAR,EAAe;IACrB,MAAM3vB,EAAE,GAAG,IAAX;IACA,MAAMd,KAAK,GAAG,KAAKgI,WAAnB;;IACA,IAAI,CAACyoB,KAAD,IAAU,CAACzwB,KAAf,EAAsB;MACpB,OAAOc,EAAP;IACD;;IACD,MAAM4vB,GAAG,GAAG,EAAZ;IACAxoB,KAAK,CAAC3H,OAAN,CAAc4D,IAAI,IAAI;MACpBusB,GAAG,CAACvsB,IAAD,CAAH,GAAYnE,KAAK,CAACmE,IAAD,CAAL,IAAenE,KAAK,CAACmE,IAAD,CAAL,CAAYgB,MAAZ,EAAf,GAAsCnF,KAAK,CAACmE,IAAD,CAAL,CAAYc,GAAlD,GAAwDnE,EAAE,CAACqD,IAAD,CAAtE;IACD,CAFD;IAGA,OAAOusB,GAAP;EACD;;AA1BW;;AA4BdL,OAAO,CAAC97B,QAAR,GAAmB,EAAnB;AACA87B,OAAO,CAACM,aAAR,GAAwB9wB,SAAxB;AAEA,MAAM+wB,UAAU,GAAG;EACjBnpB,MAAM,CAACW,KAAD,EAAQ;IACZ,OAAO/T,OAAO,CAAC+T,KAAD,CAAP,GAAiBA,KAAjB,GAAyB,KAAKA,KAArC;EACD,CAHgB;;EAIjByoB,OAAO,CAACC,SAAD,EAAYlnB,KAAZ,EAAmBgN,KAAnB,EAA0B;IAC/B,IAAIka,SAAS,KAAK,CAAlB,EAAqB;MACnB,OAAO,GAAP;IACD;;IACD,MAAM1R,MAAM,GAAG,KAAKrf,KAAL,CAAW4H,OAAX,CAAmByX,MAAlC;IACA,IAAI2R,QAAJ;IACA,IAAIC,KAAK,GAAGF,SAAZ;;IACA,IAAIla,KAAK,CAACrV,MAAN,GAAe,CAAnB,EAAsB;MACpB,MAAM0vB,OAAO,GAAGvwB,IAAI,CAACmC,GAAL,CAASnC,IAAI,CAACgW,GAAL,CAASE,KAAK,CAAC,CAAD,CAAL,CAASxO,KAAlB,CAAT,EAAmC1H,IAAI,CAACgW,GAAL,CAASE,KAAK,CAACA,KAAK,CAACrV,MAAN,GAAe,CAAhB,CAAL,CAAwB6G,KAAjC,CAAnC,CAAhB;;MACA,IAAI6oB,OAAO,GAAG,IAAV,IAAkBA,OAAO,GAAG,KAAhC,EAAuC;QACrCF,QAAQ,GAAG,YAAX;MACD;;MACDC,KAAK,GAAGE,cAAc,CAACJ,SAAD,EAAYla,KAAZ,CAAtB;IACD;;IACD,MAAMua,QAAQ,GAAG14B,KAAK,CAACiI,IAAI,CAACgW,GAAL,CAASsa,KAAT,CAAD,CAAtB;IACA,MAAMI,UAAU,GAAG1wB,IAAI,CAACmC,GAAL,CAASnC,IAAI,CAACC,GAAL,CAAS,CAAC,CAAD,GAAKD,IAAI,CAACgE,KAAL,CAAWysB,QAAX,CAAd,EAAoC,EAApC,CAAT,EAAkD,CAAlD,CAAnB;IACA,MAAMxpB,OAAO,GAAG;MAACopB,QAAD;MAAWM,qBAAqB,EAAED,UAAlC;MAA8CE,qBAAqB,EAAEF;IAArE,CAAhB;IACAnrB,MAAM,CAACqC,MAAP,CAAcX,OAAd,EAAuB,KAAKA,OAAL,CAAaiP,KAAb,CAAmB2N,MAA1C;IACA,OAAOhuB,YAAY,CAACu6B,SAAD,EAAY1R,MAAZ,EAAoBzX,OAApB,CAAnB;EACD,CAvBgB;;EAwBjB4pB,WAAW,CAACT,SAAD,EAAYlnB,KAAZ,EAAmBgN,KAAnB,EAA0B;IACnC,IAAIka,SAAS,KAAK,CAAlB,EAAqB;MACnB,OAAO,GAAP;IACD;;IACD,MAAMxrB,MAAM,GAAGwrB,SAAS,GAAIpwB,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAa/lB,IAAI,CAACgE,KAAL,CAAWjM,KAAK,CAACq4B,SAAD,CAAhB,CAAb,CAA5B;;IACA,IAAIxrB,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,CAA3B,IAAgCA,MAAM,KAAK,CAA/C,EAAkD;MAChD,OAAOsrB,UAAU,CAACC,OAAX,CAAmB9vB,IAAnB,CAAwB,IAAxB,EAA8B+vB,SAA9B,EAAyClnB,KAAzC,EAAgDgN,KAAhD,CAAP;IACD;;IACD,OAAO,EAAP;EACD;;AAjCgB,CAAnB;;AAmCA,SAASsa,cAAT,CAAwBJ,SAAxB,EAAmCla,KAAnC,EAA0C;EACxC,IAAIoa,KAAK,GAAGpa,KAAK,CAACrV,MAAN,GAAe,CAAf,GAAmBqV,KAAK,CAAC,CAAD,CAAL,CAASxO,KAAT,GAAiBwO,KAAK,CAAC,CAAD,CAAL,CAASxO,KAA7C,GAAqDwO,KAAK,CAAC,CAAD,CAAL,CAASxO,KAAT,GAAiBwO,KAAK,CAAC,CAAD,CAAL,CAASxO,KAA3F;;EACA,IAAI1H,IAAI,CAACgW,GAAL,CAASsa,KAAT,IAAkB,CAAlB,IAAuBF,SAAS,KAAKpwB,IAAI,CAACgE,KAAL,CAAWosB,SAAX,CAAzC,EAAgE;IAC9DE,KAAK,GAAGF,SAAS,GAAGpwB,IAAI,CAACgE,KAAL,CAAWosB,SAAX,CAApB;EACD;;EACD,OAAOE,KAAP;AACD;;AACD,IAAIQ,KAAK,GAAG;EAACZ;AAAD,CAAZ;AAEAr8B,QAAQ,CAAC4N,GAAT,CAAa,OAAb,EAAsB;EACpBohB,OAAO,EAAE,IADW;EAEpBtI,MAAM,EAAE,KAFY;EAGpBpS,OAAO,EAAE,KAHW;EAIpBuS,WAAW,EAAE,KAJO;EAKpBqW,MAAM,EAAE,OALY;EAMpBC,KAAK,EAAE,CANa;EAOpBxW,IAAI,EAAE;IACJqI,OAAO,EAAE,IADL;IAEJlD,SAAS,EAAE,CAFP;IAGJsR,UAAU,EAAE,IAHR;IAIJC,eAAe,EAAE,IAJb;IAKJC,SAAS,EAAE,IALP;IAMJC,UAAU,EAAE,CANR;IAOJC,SAAS,EAAE,CAACvkB,IAAD,EAAO7F,OAAP,KAAmBA,OAAO,CAAC0Y,SAPlC;IAQJ2R,SAAS,EAAE,CAACxkB,IAAD,EAAO7F,OAAP,KAAmBA,OAAO,CAAC1T,KARlC;IASJgnB,MAAM,EAAE,KATJ;IAUJgX,UAAU,EAAE,EAVR;IAWJC,gBAAgB,EAAE,GAXd;IAYJ9R,WAAW,EAAE,CAAC5S,IAAD,EAAO7F,OAAP,KAAmBA,OAAO,CAAC1T,KAZpC;IAaJqrB,WAAW,EAAE,CAAC9R,IAAD,EAAO7F,OAAP,KAAmBA,OAAO,CAAC0Y;EAbpC,CAPc;EAsBpBxE,KAAK,EAAE;IACL0H,OAAO,EAAE,KADJ;IAELvD,IAAI,EAAE,EAFD;IAGLgL,OAAO,EAAE;MACP9hB,GAAG,EAAE,CADE;MAEPE,MAAM,EAAE;IAFD;EAHJ,CAtBa;EA8BpBwN,KAAK,EAAE;IACLub,WAAW,EAAE,CADR;IAELC,WAAW,EAAE,EAFR;IAGLC,MAAM,EAAE,KAHH;IAILC,eAAe,EAAE,CAJZ;IAKLC,eAAe,EAAE,EALZ;IAMLvH,OAAO,EAAE,CANJ;IAOLzH,OAAO,EAAE,IAPJ;IAQLiP,QAAQ,EAAE,IARL;IASLC,eAAe,EAAE,CATZ;IAULC,WAAW,EAAE,CAVR;IAWL35B,QAAQ,EAAEy4B,KAAK,CAACZ,UAAN,CAAiBnpB,MAXtB;IAYLkrB,KAAK,EAAE,EAZF;IAaLC,KAAK,EAAE,EAbF;IAcLC,KAAK,EAAE,QAdF;IAeLC,UAAU,EAAE;EAfP;AA9Ba,CAAtB;AAgDAv+B,QAAQ,CAACw+B,KAAT,CAAe,aAAf,EAA8B,OAA9B,EAAuC,EAAvC,EAA2C,OAA3C;AACAx+B,QAAQ,CAACw+B,KAAT,CAAe,YAAf,EAA6B,OAA7B,EAAsC,EAAtC,EAA0C,aAA1C;AACAx+B,QAAQ,CAACw+B,KAAT,CAAe,aAAf,EAA8B,OAA9B,EAAuC,EAAvC,EAA2C,OAA3C;AACAx+B,QAAQ,CAAC6R,QAAT,CAAkB,OAAlB,EAA2B;EACzBC,SAAS,EAAE,KADc;EAEzBE,WAAW,EAAGC,IAAD,IAAU,CAACA,IAAI,CAACwsB,UAAL,CAAgB,QAAhB,CAAD,IAA8B,CAACxsB,IAAI,CAACwsB,UAAL,CAAgB,OAAhB,CAA/B,IAA2DxsB,IAAI,KAAK,UAApE,IAAkFA,IAAI,KAAK,QAFzF;EAGzBF,UAAU,EAAGE,IAAD,IAAUA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK;AAH/B,CAA3B;AAKAjS,QAAQ,CAAC6R,QAAT,CAAkB,QAAlB,EAA4B;EAC1BC,SAAS,EAAE;AADe,CAA5B;;AAIA,SAASmsB,QAAT,CAAkB9pB,KAAlB,EAAyBkO,KAAzB,EAAgC;EAC9B,MAAMqc,QAAQ,GAAGvqB,KAAK,CAACf,OAAN,CAAciP,KAA/B;EACA,MAAMsc,UAAU,GAAGD,QAAQ,CAACE,aAAT,IAA0BC,iBAAiB,CAAC1qB,KAAD,CAA9D;EACA,MAAM2qB,YAAY,GAAGJ,QAAQ,CAACL,KAAT,CAAeU,OAAf,GAAyBC,eAAe,CAAC3c,KAAD,CAAxC,GAAkD,EAAvE;EACA,MAAM4c,eAAe,GAAGH,YAAY,CAAC9xB,MAArC;EACA,MAAMkyB,KAAK,GAAGJ,YAAY,CAAC,CAAD,CAA1B;EACA,MAAM3Z,IAAI,GAAG2Z,YAAY,CAACG,eAAe,GAAG,CAAnB,CAAzB;EACA,MAAME,QAAQ,GAAG,EAAjB;;EACA,IAAIF,eAAe,GAAGN,UAAtB,EAAkC;IAChCS,UAAU,CAAC/c,KAAD,EAAQ8c,QAAR,EAAkBL,YAAlB,EAAgCG,eAAe,GAAGN,UAAlD,CAAV;IACA,OAAOQ,QAAP;EACD;;EACD,MAAM7V,OAAO,GAAG+V,gBAAgB,CAACP,YAAD,EAAezc,KAAf,EAAsBsc,UAAtB,CAAhC;;EACA,IAAIM,eAAe,GAAG,CAAtB,EAAyB;IACvB,IAAIt/B,CAAJ,EAAOyV,IAAP;IACA,MAAMkqB,eAAe,GAAGL,eAAe,GAAG,CAAlB,GAAsB9yB,IAAI,CAACozB,KAAL,CAAW,CAACpa,IAAI,GAAG+Z,KAAR,KAAkBD,eAAe,GAAG,CAApC,CAAX,CAAtB,GAA2E,IAAnG;IACA/X,IAAI,CAAC7E,KAAD,EAAQ8c,QAAR,EAAkB7V,OAAlB,EAA2BtoB,aAAa,CAACs+B,eAAD,CAAb,GAAiC,CAAjC,GAAqCJ,KAAK,GAAGI,eAAxE,EAAyFJ,KAAzF,CAAJ;;IACA,KAAKv/B,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAG6pB,eAAe,GAAG,CAArC,EAAwCt/B,CAAC,GAAGyV,IAA5C,EAAkDzV,CAAC,EAAnD,EAAuD;MACrDunB,IAAI,CAAC7E,KAAD,EAAQ8c,QAAR,EAAkB7V,OAAlB,EAA2BwV,YAAY,CAACn/B,CAAD,CAAvC,EAA4Cm/B,YAAY,CAACn/B,CAAC,GAAG,CAAL,CAAxD,CAAJ;IACD;;IACDunB,IAAI,CAAC7E,KAAD,EAAQ8c,QAAR,EAAkB7V,OAAlB,EAA2BnE,IAA3B,EAAiCnkB,aAAa,CAACs+B,eAAD,CAAb,GAAiCjd,KAAK,CAACrV,MAAvC,GAAgDmY,IAAI,GAAGma,eAAxF,CAAJ;IACA,OAAOH,QAAP;EACD;;EACDjY,IAAI,CAAC7E,KAAD,EAAQ8c,QAAR,EAAkB7V,OAAlB,CAAJ;EACA,OAAO6V,QAAP;AACD;;AACD,SAASN,iBAAT,CAA2B1qB,KAA3B,EAAkC;EAChC,MAAMuS,MAAM,GAAGvS,KAAK,CAACf,OAAN,CAAcsT,MAA7B;;EACA,MAAM6W,UAAU,GAAGppB,KAAK,CAACqrB,SAAN,EAAnB;;EACA,MAAMC,QAAQ,GAAGtrB,KAAK,CAAC6N,OAAN,GAAgBub,UAAhB,IAA8B7W,MAAM,GAAG,CAAH,GAAO,CAA3C,CAAjB;EACA,MAAMgZ,QAAQ,GAAGvrB,KAAK,CAACwrB,UAAN,GAAmBpC,UAApC;EACA,OAAOpxB,IAAI,CAACgE,KAAL,CAAWhE,IAAI,CAACC,GAAL,CAASqzB,QAAT,EAAmBC,QAAnB,CAAX,CAAP;AACD;;AACD,SAASL,gBAAT,CAA0BP,YAA1B,EAAwCzc,KAAxC,EAA+Csc,UAA/C,EAA2D;EACzD,MAAMiB,gBAAgB,GAAGC,cAAc,CAACf,YAAD,CAAvC;EACA,MAAMxV,OAAO,GAAGjH,KAAK,CAACrV,MAAN,GAAe2xB,UAA/B;;EACA,IAAI,CAACiB,gBAAL,EAAuB;IACrB,OAAOzzB,IAAI,CAACmC,GAAL,CAASgb,OAAT,EAAkB,CAAlB,CAAP;EACD;;EACD,MAAMwW,OAAO,GAAG17B,UAAU,CAACw7B,gBAAD,CAA1B;;EACA,KAAK,IAAIjgC,CAAC,GAAG,CAAR,EAAWyV,IAAI,GAAG0qB,OAAO,CAAC9yB,MAAR,GAAiB,CAAxC,EAA2CrN,CAAC,GAAGyV,IAA/C,EAAqDzV,CAAC,EAAtD,EAA0D;IACxD,MAAMuP,MAAM,GAAG4wB,OAAO,CAACngC,CAAD,CAAtB;;IACA,IAAIuP,MAAM,GAAGoa,OAAb,EAAsB;MACpB,OAAOpa,MAAP;IACD;EACF;;EACD,OAAO/C,IAAI,CAACmC,GAAL,CAASgb,OAAT,EAAkB,CAAlB,CAAP;AACD;;AACD,SAAS0V,eAAT,CAAyB3c,KAAzB,EAAgC;EAC9B,MAAM0d,MAAM,GAAG,EAAf;EACA,IAAIpgC,CAAJ,EAAOyV,IAAP;;EACA,KAAKzV,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGiN,KAAK,CAACrV,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2CzV,CAAC,EAA5C,EAAgD;IAC9C,IAAI0iB,KAAK,CAAC1iB,CAAD,CAAL,CAAS0+B,KAAb,EAAoB;MAClB0B,MAAM,CAAC/xB,IAAP,CAAYrO,CAAZ;IACD;EACF;;EACD,OAAOogC,MAAP;AACD;;AACD,SAASX,UAAT,CAAoB/c,KAApB,EAA2B8c,QAA3B,EAAqCL,YAArC,EAAmDxV,OAAnD,EAA4D;EAC1D,IAAI/M,KAAK,GAAG,CAAZ;EACA,IAAI2G,IAAI,GAAG4b,YAAY,CAAC,CAAD,CAAvB;EACA,IAAIn/B,CAAJ;EACA2pB,OAAO,GAAGnd,IAAI,CAAC6zB,IAAL,CAAU1W,OAAV,CAAV;;EACA,KAAK3pB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0iB,KAAK,CAACrV,MAAtB,EAA8BrN,CAAC,EAA/B,EAAmC;IACjC,IAAIA,CAAC,KAAKujB,IAAV,EAAgB;MACdic,QAAQ,CAACnxB,IAAT,CAAcqU,KAAK,CAAC1iB,CAAD,CAAnB;MACA4c,KAAK;MACL2G,IAAI,GAAG4b,YAAY,CAACviB,KAAK,GAAG+M,OAAT,CAAnB;IACD;EACF;AACF;;AACD,SAASpC,IAAT,CAAc7E,KAAd,EAAqB8c,QAArB,EAA+B7V,OAA/B,EAAwC2W,UAAxC,EAAoDC,QAApD,EAA8D;EAC5D,MAAM7zB,KAAK,GAAGnM,cAAc,CAAC+/B,UAAD,EAAa,CAAb,CAA5B;EACA,MAAM1rB,GAAG,GAAGpI,IAAI,CAACC,GAAL,CAASlM,cAAc,CAACggC,QAAD,EAAW7d,KAAK,CAACrV,MAAjB,CAAvB,EAAiDqV,KAAK,CAACrV,MAAvD,CAAZ;EACA,IAAIuP,KAAK,GAAG,CAAZ;EACA,IAAIvP,MAAJ,EAAYrN,CAAZ,EAAeujB,IAAf;EACAoG,OAAO,GAAGnd,IAAI,CAAC6zB,IAAL,CAAU1W,OAAV,CAAV;;EACA,IAAI4W,QAAJ,EAAc;IACZlzB,MAAM,GAAGkzB,QAAQ,GAAGD,UAApB;IACA3W,OAAO,GAAGtc,MAAM,GAAGb,IAAI,CAACgE,KAAL,CAAWnD,MAAM,GAAGsc,OAApB,CAAnB;EACD;;EACDpG,IAAI,GAAG7W,KAAP;;EACA,OAAO6W,IAAI,GAAG,CAAd,EAAiB;IACf3G,KAAK;IACL2G,IAAI,GAAG/W,IAAI,CAACozB,KAAL,CAAWlzB,KAAK,GAAGkQ,KAAK,GAAG+M,OAA3B,CAAP;EACD;;EACD,KAAK3pB,CAAC,GAAGwM,IAAI,CAACmC,GAAL,CAASjC,KAAT,EAAgB,CAAhB,CAAT,EAA6B1M,CAAC,GAAG4U,GAAjC,EAAsC5U,CAAC,EAAvC,EAA2C;IACzC,IAAIA,CAAC,KAAKujB,IAAV,EAAgB;MACdic,QAAQ,CAACnxB,IAAT,CAAcqU,KAAK,CAAC1iB,CAAD,CAAnB;MACA4c,KAAK;MACL2G,IAAI,GAAG/W,IAAI,CAACozB,KAAL,CAAWlzB,KAAK,GAAGkQ,KAAK,GAAG+M,OAA3B,CAAP;IACD;EACF;AACF;;AACD,SAASuW,cAAT,CAAwBhf,GAAxB,EAA6B;EAC3B,MAAMsf,GAAG,GAAGtf,GAAG,CAAC7T,MAAhB;EACA,IAAIrN,CAAJ,EAAOywB,IAAP;;EACA,IAAI+P,GAAG,GAAG,CAAV,EAAa;IACX,OAAO,KAAP;EACD;;EACD,KAAK/P,IAAI,GAAGvP,GAAG,CAAC,CAAD,CAAV,EAAelhB,CAAC,GAAG,CAAxB,EAA2BA,CAAC,GAAGwgC,GAA/B,EAAoC,EAAExgC,CAAtC,EAAyC;IACvC,IAAIkhB,GAAG,CAAClhB,CAAD,CAAH,GAASkhB,GAAG,CAAClhB,CAAC,GAAG,CAAL,CAAZ,KAAwBywB,IAA5B,EAAkC;MAChC,OAAO,KAAP;IACD;EACF;;EACD,OAAOA,IAAP;AACD;;AAED,MAAMgQ,YAAY,GAAI9B,KAAD,IAAWA,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6BA,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6BA,KAA1F;;AACA,MAAM+B,cAAc,GAAG,CAAClsB,KAAD,EAAQmsB,IAAR,EAAc5Z,MAAd,KAAyB4Z,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,MAA3B,GAAoCnsB,KAAK,CAACmsB,IAAD,CAAL,GAAc5Z,MAAlD,GAA2DvS,KAAK,CAACmsB,IAAD,CAAL,GAAc5Z,MAAzH;;AACA,SAAS6Z,MAAT,CAAgB1f,GAAhB,EAAqB2f,QAArB,EAA+B;EAC7B,MAAMT,MAAM,GAAG,EAAf;EACA,MAAMU,SAAS,GAAG5f,GAAG,CAAC7T,MAAJ,GAAawzB,QAA/B;EACA,MAAML,GAAG,GAAGtf,GAAG,CAAC7T,MAAhB;EACA,IAAIrN,CAAC,GAAG,CAAR;;EACA,OAAOA,CAAC,GAAGwgC,GAAX,EAAgBxgC,CAAC,IAAI8gC,SAArB,EAAgC;IAC9BV,MAAM,CAAC/xB,IAAP,CAAY6S,GAAG,CAAC1U,IAAI,CAACgE,KAAL,CAAWxQ,CAAX,CAAD,CAAf;EACD;;EACD,OAAOogC,MAAP;AACD;;AACD,SAASW,mBAAT,CAA6BvsB,KAA7B,EAAoCkB,KAApC,EAA2CsrB,eAA3C,EAA4D;EAC1D,MAAM3zB,MAAM,GAAGmH,KAAK,CAACkO,KAAN,CAAYrV,MAA3B;EACA,MAAM4zB,UAAU,GAAGz0B,IAAI,CAACC,GAAL,CAASiJ,KAAT,EAAgBrI,MAAM,GAAG,CAAzB,CAAnB;EACA,MAAMX,KAAK,GAAG8H,KAAK,CAACsR,WAApB;EACA,MAAMlR,GAAG,GAAGJ,KAAK,CAACuR,SAAlB;EACA,MAAMmb,OAAO,GAAG,IAAhB;EACA,IAAIC,SAAS,GAAG3sB,KAAK,CAACmO,eAAN,CAAsBse,UAAtB,CAAhB;EACA,IAAIla,MAAJ;;EACA,IAAIia,eAAJ,EAAqB;IACnB,IAAI3zB,MAAM,KAAK,CAAf,EAAkB;MAChB0Z,MAAM,GAAGva,IAAI,CAACmC,GAAL,CAASwyB,SAAS,GAAGz0B,KAArB,EAA4BkI,GAAG,GAAGusB,SAAlC,CAAT;IACD,CAFD,MAEO,IAAIzrB,KAAK,KAAK,CAAd,EAAiB;MACtBqR,MAAM,GAAG,CAACvS,KAAK,CAACmO,eAAN,CAAsB,CAAtB,IAA2Bwe,SAA5B,IAAyC,CAAlD;IACD,CAFM,MAEA;MACLpa,MAAM,GAAG,CAACoa,SAAS,GAAG3sB,KAAK,CAACmO,eAAN,CAAsBse,UAAU,GAAG,CAAnC,CAAb,IAAsD,CAA/D;IACD;;IACDE,SAAS,IAAIF,UAAU,GAAGvrB,KAAb,GAAqBqR,MAArB,GAA8B,CAACA,MAA5C;;IACA,IAAIoa,SAAS,GAAGz0B,KAAK,GAAGw0B,OAApB,IAA+BC,SAAS,GAAGvsB,GAAG,GAAGssB,OAArD,EAA8D;MAC5D;IACD;EACF;;EACD,OAAOC,SAAP;AACD;;AACD,SAASC,cAAT,CAAwBC,MAAxB,EAAgCh0B,MAAhC,EAAwC;EACtC1J,IAAI,CAAC09B,MAAD,EAAU/hB,KAAD,IAAW;IACtB,MAAMgiB,EAAE,GAAGhiB,KAAK,CAACgiB,EAAjB;IACA,MAAMC,KAAK,GAAGD,EAAE,CAACj0B,MAAH,GAAY,CAA1B;IACA,IAAIrN,CAAJ;;IACA,IAAIuhC,KAAK,GAAGl0B,MAAZ,EAAoB;MAClB,KAAKrN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGuhC,KAAhB,EAAuB,EAAEvhC,CAAzB,EAA4B;QAC1B,OAAOsf,KAAK,CAACnJ,IAAN,CAAWmrB,EAAE,CAACthC,CAAD,CAAb,CAAP;MACD;;MACDshC,EAAE,CAACjgB,MAAH,CAAU,CAAV,EAAakgB,KAAb;IACD;EACF,CAVG,CAAJ;AAWD;;AACD,SAASC,iBAAT,CAA2B/tB,OAA3B,EAAoC;EAClC,OAAOA,OAAO,CAACkqB,SAAR,GAAoBlqB,OAAO,CAACmqB,UAA5B,GAAyC,CAAhD;AACD;;AACD,SAAS6D,cAAT,CAAwBhuB,OAAxB,EAAiCiuB,QAAjC,EAA2C;EACzC,IAAI,CAACjuB,OAAO,CAAC4b,OAAb,EAAsB;IACpB,OAAO,CAAP;EACD;;EACD,MAAMsS,IAAI,GAAGl8B,MAAM,CAACgO,OAAO,CAACkuB,IAAT,EAAeD,QAAf,CAAnB;EACA,MAAM5K,OAAO,GAAGrzB,SAAS,CAACgQ,OAAO,CAACqjB,OAAT,CAAzB;EACA,MAAM8K,KAAK,GAAGzhC,OAAO,CAACsT,OAAO,CAACqY,IAAT,CAAP,GAAwBrY,OAAO,CAACqY,IAAR,CAAaze,MAArC,GAA8C,CAA5D;EACA,OAAQu0B,KAAK,GAAGD,IAAI,CAACE,UAAd,GAA4B/K,OAAO,CAACzR,MAA3C;AACD;;AACD,SAASyc,kBAAT,CAA4BtpB,MAA5B,EAAoChE,KAApC,EAA2C;EACzC,OAAOzC,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAAC0G,MAAP,CAAcD,MAAd,CAAd,EAAqC;IAC1ChE,KAD0C;IAE1CxI,IAAI,EAAE;EAFoC,CAArC,CAAP;AAID;;AACD,SAAS+1B,iBAAT,CAA2BvpB,MAA3B,EAAmC9C,KAAnC,EAA0ChI,IAA1C,EAAgD;EAC9C,OAAOqE,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAAC0G,MAAP,CAAcD,MAAd,CAAd,EAAqC;IAC1C9K,IAD0C;IAE1CgI,KAF0C;IAG1C1J,IAAI,EAAE;EAHoC,CAArC,CAAP;AAKD;;AACD,SAASg2B,UAAT,CAAoBrD,KAApB,EAA2B7M,QAA3B,EAAqCnd,OAArC,EAA8C;EAC5C,IAAI6nB,GAAG,GAAG72B,kBAAkB,CAACg5B,KAAD,CAA5B;;EACA,IAAKhqB,OAAO,IAAImd,QAAQ,KAAK,OAAzB,IAAsC,CAACnd,OAAD,IAAYmd,QAAQ,KAAK,OAAnE,EAA6E;IAC3E0K,GAAG,GAAGiE,YAAY,CAACjE,GAAD,CAAlB;EACD;;EACD,OAAOA,GAAP;AACD;;AACD,SAASyF,SAAT,CAAmBztB,KAAnB,EAA0BuS,MAA1B,EAAkC+K,QAAlC,EAA4C6M,KAA5C,EAAmD;EACjD,MAAM;IAAC3pB,GAAD;IAAMG,IAAN;IAAYD,MAAZ;IAAoBD;EAApB,IAA6BT,KAAnC;EACA,IAAIqT,QAAQ,GAAG,CAAf;EACA,IAAIoC,QAAJ,EAAciY,MAAd,EAAsBC,MAAtB;;EACA,IAAI3tB,KAAK,CAACoQ,YAAN,EAAJ,EAA0B;IACxBsd,MAAM,GAAGr8B,cAAc,CAAC84B,KAAD,EAAQxpB,IAAR,EAAcF,KAAd,CAAvB;IACAktB,MAAM,GAAGzB,cAAc,CAAClsB,KAAD,EAAQsd,QAAR,EAAkB/K,MAAlB,CAAvB;IACAkD,QAAQ,GAAGhV,KAAK,GAAGE,IAAnB;EACD,CAJD,MAIO;IACL+sB,MAAM,GAAGxB,cAAc,CAAClsB,KAAD,EAAQsd,QAAR,EAAkB/K,MAAlB,CAAvB;IACAob,MAAM,GAAGt8B,cAAc,CAAC84B,KAAD,EAAQzpB,MAAR,EAAgBF,GAAhB,CAAvB;IACA6S,QAAQ,GAAGiK,QAAQ,KAAK,MAAb,GAAsB,CAACrvB,OAAvB,GAAiCA,OAA5C;EACD;;EACD,OAAO;IAACy/B,MAAD;IAASC,MAAT;IAAiBlY,QAAjB;IAA2BpC;EAA3B,CAAP;AACD;;AACD,MAAMua,KAAN,SAAoBjG,OAApB,CAA4B;EAC1B9wB,WAAW,CAAC0E,GAAD,EAAM;IACf;IACA,KAAK6G,EAAL,GAAU7G,GAAG,CAAC6G,EAAd;IACA,KAAK5K,IAAL,GAAY+D,GAAG,CAAC/D,IAAhB;IACA,KAAKyH,OAAL,GAAe9H,SAAf;IACA,KAAK4N,GAAL,GAAWxJ,GAAG,CAACwJ,GAAf;IACA,KAAK1N,KAAL,GAAakE,GAAG,CAAClE,KAAjB;IACA,KAAKmJ,GAAL,GAAWrJ,SAAX;IACA,KAAKuJ,MAAL,GAAcvJ,SAAd;IACA,KAAKwJ,IAAL,GAAYxJ,SAAZ;IACA,KAAKsJ,KAAL,GAAatJ,SAAb;IACA,KAAK2Z,KAAL,GAAa3Z,SAAb;IACA,KAAK0Z,MAAL,GAAc1Z,SAAd;IACA,KAAK02B,QAAL,GAAgB;MACdltB,IAAI,EAAE,CADQ;MAEdF,KAAK,EAAE,CAFO;MAGdD,GAAG,EAAE,CAHS;MAIdE,MAAM,EAAE;IAJM,CAAhB;IAMA,KAAK+U,QAAL,GAAgBte,SAAhB;IACA,KAAKue,SAAL,GAAiBve,SAAjB;IACA,KAAK22B,UAAL,GAAkB32B,SAAlB;IACA,KAAK42B,aAAL,GAAqB52B,SAArB;IACA,KAAK62B,WAAL,GAAmB72B,SAAnB;IACA,KAAK82B,YAAL,GAAoB92B,SAApB;IACA,KAAKqM,IAAL,GAAYrM,SAAZ;IACA,KAAK+2B,aAAL,GAAqB/2B,SAArB;IACA,KAAKc,GAAL,GAAWd,SAAX;IACA,KAAKgD,GAAL,GAAWhD,SAAX;IACA,KAAK+W,KAAL,GAAa,EAAb;IACA,KAAKigB,cAAL,GAAsB,IAAtB;IACA,KAAKC,WAAL,GAAmB,IAAnB;IACA,KAAKC,WAAL,GAAmB,IAAnB;IACA,KAAKxgB,OAAL,GAAe,CAAf;IACA,KAAK2d,UAAL,GAAkB,CAAlB;IACA,KAAK8C,iBAAL,GAAyB,EAAzB;IACA,KAAKhd,WAAL,GAAmBna,SAAnB;IACA,KAAKoa,SAAL,GAAiBpa,SAAjB;IACA,KAAK+lB,cAAL,GAAsB,KAAtB;IACA,KAAKqR,QAAL,GAAgBp3B,SAAhB;IACA,KAAKq3B,QAAL,GAAgBr3B,SAAhB;IACA,KAAKs3B,aAAL,GAAqBt3B,SAArB;IACA,KAAKu3B,aAAL,GAAqBv3B,SAArB;IACA,KAAKw3B,YAAL,GAAoB,CAApB;IACA,KAAKC,YAAL,GAAoB,CAApB;IACA,KAAKthB,MAAL,GAAc,EAAd;IACA,KAAKuhB,iBAAL,GAAyB,KAAzB;IACA,KAAKnpB,QAAL,GAAgBvO,SAAhB;EACD;;EACD23B,IAAI,CAAC7vB,OAAD,EAAU;IACZ,MAAM7G,EAAE,GAAG,IAAX;IACAA,EAAE,CAAC6G,OAAH,GAAaA,OAAb;IACA7G,EAAE,CAACoL,IAAH,GAAUvE,OAAO,CAACuE,IAAlB;IACApL,EAAE,CAACo2B,QAAH,GAAcp2B,EAAE,CAAC+P,KAAH,CAASlJ,OAAO,CAAChH,GAAjB,CAAd;IACAG,EAAE,CAACm2B,QAAH,GAAcn2B,EAAE,CAAC+P,KAAH,CAASlJ,OAAO,CAAC9E,GAAjB,CAAd;IACA/B,EAAE,CAACs2B,aAAH,GAAmBt2B,EAAE,CAAC+P,KAAH,CAASlJ,OAAO,CAAC8vB,YAAjB,CAAnB;IACA32B,EAAE,CAACq2B,aAAH,GAAmBr2B,EAAE,CAAC+P,KAAH,CAASlJ,OAAO,CAAC+vB,YAAjB,CAAnB;EACD;;EACD7mB,KAAK,CAAC7D,GAAD,EAAMpD,KAAN,EAAa;IAChB,OAAOoD,GAAP;EACD;;EACDjC,aAAa,GAAG;IACd,IAAI;MAACmsB,QAAD;MAAWD,QAAX;MAAqBG,aAArB;MAAoCD;IAApC,IAAqD,IAAzD;IACAD,QAAQ,GAAGr+B,eAAe,CAACq+B,QAAD,EAAWhsB,MAAM,CAACE,iBAAlB,CAA1B;IACA6rB,QAAQ,GAAGp+B,eAAe,CAACo+B,QAAD,EAAW/rB,MAAM,CAACC,iBAAlB,CAA1B;IACAisB,aAAa,GAAGv+B,eAAe,CAACu+B,aAAD,EAAgBlsB,MAAM,CAACE,iBAAvB,CAA/B;IACA+rB,aAAa,GAAGt+B,eAAe,CAACs+B,aAAD,EAAgBjsB,MAAM,CAACC,iBAAvB,CAA/B;IACA,OAAO;MACLxK,GAAG,EAAE9H,eAAe,CAACq+B,QAAD,EAAWE,aAAX,CADf;MAELv0B,GAAG,EAAEhK,eAAe,CAACo+B,QAAD,EAAWE,aAAX,CAFf;MAGLnsB,UAAU,EAAE/V,cAAc,CAACiiC,QAAD,CAHrB;MAILjsB,UAAU,EAAEhW,cAAc,CAACgiC,QAAD;IAJrB,CAAP;EAMD;;EACDhlB,SAAS,CAACC,QAAD,EAAW;IAClB,MAAMpR,EAAE,GAAG,IAAX;IACA,IAAI;MAACH,GAAD;MAAMkC,GAAN;MAAWmI,UAAX;MAAuBC;IAAvB,IAAqCnK,EAAE,CAACiK,aAAH,EAAzC;IACA,IAAI+G,KAAJ;;IACA,IAAI9G,UAAU,IAAIC,UAAlB,EAA8B;MAC5B,OAAO;QAACtK,GAAD;QAAMkC;MAAN,CAAP;IACD;;IACD,MAAMqT,KAAK,GAAGpV,EAAE,CAACqV,uBAAH,EAAd;;IACA,KAAK,IAAIjiB,CAAC,GAAG,CAAR,EAAWyV,IAAI,GAAGuM,KAAK,CAAC3U,MAA7B,EAAqCrN,CAAC,GAAGyV,IAAzC,EAA+C,EAAEzV,CAAjD,EAAoD;MAClD4d,KAAK,GAAGoE,KAAK,CAAChiB,CAAD,CAAL,CAASyX,UAAT,CAAoBsG,SAApB,CAA8BnR,EAA9B,EAAkCoR,QAAlC,CAAR;;MACA,IAAI,CAAClH,UAAL,EAAiB;QACfrK,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAcmR,KAAK,CAACnR,GAApB,CAAN;MACD;;MACD,IAAI,CAACsK,UAAL,EAAiB;QACfpI,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAciP,KAAK,CAACjP,GAApB,CAAN;MACD;IACF;;IACD,OAAO;MACLlC,GAAG,EAAE9H,eAAe,CAAC8H,GAAD,EAAM9H,eAAe,CAACgK,GAAD,EAAMlC,GAAN,CAArB,CADf;MAELkC,GAAG,EAAEhK,eAAe,CAACgK,GAAD,EAAMhK,eAAe,CAAC8H,GAAD,EAAMkC,GAAN,CAArB;IAFf,CAAP;EAID;;EACDgnB,UAAU,GAAG;IACX,MAAM/oB,EAAE,GAAG,IAAX;IACA,OAAO;MACLuI,IAAI,EAAEvI,EAAE,CAAC41B,WAAH,IAAkB,CADnB;MAELxtB,GAAG,EAAEpI,EAAE,CAAC01B,UAAH,IAAiB,CAFjB;MAGLrtB,KAAK,EAAErI,EAAE,CAAC61B,YAAH,IAAmB,CAHrB;MAILvtB,MAAM,EAAEtI,EAAE,CAAC21B,aAAH,IAAoB;IAJvB,CAAP;EAMD;;EACDkB,QAAQ,GAAG;IACT,OAAO,KAAK/gB,KAAZ;EACD;;EACDrF,SAAS,GAAG;IACV,MAAMlH,IAAI,GAAG,KAAKtK,KAAL,CAAWsK,IAAxB;IACA,OAAO,KAAK1C,OAAL,CAAa2J,MAAb,KAAwB,KAAKwH,YAAL,KAAsBzO,IAAI,CAACutB,OAA3B,GAAqCvtB,IAAI,CAACwtB,OAAlE,KAA8ExtB,IAAI,CAACiH,MAAnF,IAA6F,EAApG;EACD;;EACDka,YAAY,GAAG;IACb,KAAKxV,MAAL,GAAc,EAAd;IACA,KAAKuhB,iBAAL,GAAyB,KAAzB;EACD;;EACDO,YAAY,GAAG;IACb/+B,QAAQ,CAAC,KAAK4O,OAAL,CAAamwB,YAAd,EAA4B,CAAC,IAAD,CAA5B,CAAR;EACD;;EACD1yB,MAAM,CAAC+Y,QAAD,EAAWC,SAAX,EAAsB2Z,OAAtB,EAA+B;IACnC,MAAMj3B,EAAE,GAAG,IAAX;IACA,MAAMmyB,QAAQ,GAAGnyB,EAAE,CAAC6G,OAAH,CAAWiP,KAA5B;IACA,MAAMohB,UAAU,GAAG/E,QAAQ,CAAC+E,UAA5B;IACAl3B,EAAE,CAACg3B,YAAH;IACAh3B,EAAE,CAACqd,QAAH,GAAcA,QAAd;IACArd,EAAE,CAACsd,SAAH,GAAeA,SAAf;IACAtd,EAAE,CAACy1B,QAAH,GAAcwB,OAAO,GAAG9xB,MAAM,CAACqC,MAAP,CAAc;MACpCe,IAAI,EAAE,CAD8B;MAEpCF,KAAK,EAAE,CAF6B;MAGpCD,GAAG,EAAE,CAH+B;MAIpCE,MAAM,EAAE;IAJ4B,CAAd,EAKrB2uB,OALqB,CAAxB;IAMAj3B,EAAE,CAAC8V,KAAH,GAAW,IAAX;IACA9V,EAAE,CAACi2B,WAAH,GAAiB,IAAjB;IACAj2B,EAAE,CAAC+1B,cAAH,GAAoB,IAApB;IACA/1B,EAAE,CAACg2B,WAAH,GAAiB,IAAjB;IACAh2B,EAAE,CAACm3B,mBAAH;IACAn3B,EAAE,CAACo3B,aAAH;IACAp3B,EAAE,CAACq3B,kBAAH;IACAr3B,EAAE,CAACozB,UAAH,GAAgBpzB,EAAE,CAACgY,YAAH,KACZhY,EAAE,CAAC0Y,KAAH,GAAWue,OAAO,CAAC1uB,IAAnB,GAA0B0uB,OAAO,CAAC5uB,KADtB,GAEZrI,EAAE,CAACyY,MAAH,GAAYwe,OAAO,CAAC7uB,GAApB,GAA0B6uB,OAAO,CAAC3uB,MAFtC;;IAGA,IAAI,CAACtI,EAAE,CAACy2B,iBAAR,EAA2B;MACzBz2B,EAAE,CAACs3B,gBAAH;MACAt3B,EAAE,CAACu3B,mBAAH;MACAv3B,EAAE,CAACw3B,eAAH;MACAx3B,EAAE,CAACy2B,iBAAH,GAAuB,IAAvB;IACD;;IACDz2B,EAAE,CAACy3B,gBAAH;IACAz3B,EAAE,CAAC8V,KAAH,GAAW9V,EAAE,CAAC03B,UAAH,MAAmB,EAA9B;IACA13B,EAAE,CAAC23B,eAAH;IACA,MAAMC,eAAe,GAAGV,UAAU,GAAGl3B,EAAE,CAAC8V,KAAH,CAASrV,MAA9C;;IACAT,EAAE,CAAC63B,qBAAH,CAAyBD,eAAe,GAAG5D,MAAM,CAACh0B,EAAE,CAAC8V,KAAJ,EAAWohB,UAAX,CAAT,GAAkCl3B,EAAE,CAAC8V,KAA7E;;IACA9V,EAAE,CAACqG,SAAH;IACArG,EAAE,CAAC83B,4BAAH;IACA93B,EAAE,CAAC+3B,sBAAH;IACA/3B,EAAE,CAACg4B,2BAAH;;IACA,IAAI7F,QAAQ,CAAC1P,OAAT,KAAqB0P,QAAQ,CAACT,QAAT,IAAqBS,QAAQ,CAAC8F,MAAT,KAAoB,MAA9D,CAAJ,EAA2E;MACzEj4B,EAAE,CAAC8V,KAAH,GAAW4b,QAAQ,CAAC1xB,EAAD,EAAKA,EAAE,CAAC8V,KAAR,CAAnB;MACA9V,EAAE,CAACi2B,WAAH,GAAiB,IAAjB;IACD;;IACD,IAAI2B,eAAJ,EAAqB;MACnB53B,EAAE,CAAC63B,qBAAH,CAAyB73B,EAAE,CAAC8V,KAA5B;IACD;;IACD9V,EAAE,CAACk4B,SAAH;IACAl4B,EAAE,CAACm4B,GAAH;IACAn4B,EAAE,CAACo4B,QAAH;IACAp4B,EAAE,CAACq4B,WAAH;EACD;;EACDhyB,SAAS,GAAG;IACV,MAAMrG,EAAE,GAAG,IAAX;IACA,IAAIs4B,aAAa,GAAGt4B,EAAE,CAAC6G,OAAH,CAAWkB,OAA/B;IACA,IAAIwwB,UAAJ,EAAgBC,QAAhB;;IACA,IAAIx4B,EAAE,CAACgY,YAAH,EAAJ,EAAuB;MACrBugB,UAAU,GAAGv4B,EAAE,CAACuI,IAAhB;MACAiwB,QAAQ,GAAGx4B,EAAE,CAACqI,KAAd;IACD,CAHD,MAGO;MACLkwB,UAAU,GAAGv4B,EAAE,CAACoI,GAAhB;MACAowB,QAAQ,GAAGx4B,EAAE,CAACsI,MAAd;MACAgwB,aAAa,GAAG,CAACA,aAAjB;IACD;;IACDt4B,EAAE,CAACkZ,WAAH,GAAiBqf,UAAjB;IACAv4B,EAAE,CAACmZ,SAAH,GAAeqf,QAAf;IACAx4B,EAAE,CAAC8kB,cAAH,GAAoBwT,aAApB;IACAt4B,EAAE,CAACyV,OAAH,GAAa+iB,QAAQ,GAAGD,UAAxB;IACAv4B,EAAE,CAACy4B,cAAH,GAAoBz4B,EAAE,CAAC6G,OAAH,CAAW6xB,aAA/B;EACD;;EACDL,WAAW,GAAG;IACZpgC,QAAQ,CAAC,KAAK4O,OAAL,CAAawxB,WAAd,EAA2B,CAAC,IAAD,CAA3B,CAAR;EACD;;EACDlB,mBAAmB,GAAG;IACpBl/B,QAAQ,CAAC,KAAK4O,OAAL,CAAaswB,mBAAd,EAAmC,CAAC,IAAD,CAAnC,CAAR;EACD;;EACDC,aAAa,GAAG;IACd,MAAMp3B,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAACgY,YAAH,EAAJ,EAAuB;MACrBhY,EAAE,CAAC0Y,KAAH,GAAW1Y,EAAE,CAACqd,QAAd;MACArd,EAAE,CAACuI,IAAH,GAAU,CAAV;MACAvI,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAAC0Y,KAAd;IACD,CAJD,MAIO;MACL1Y,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAACsd,SAAf;MACAtd,EAAE,CAACoI,GAAH,GAAS,CAAT;MACApI,EAAE,CAACsI,MAAH,GAAYtI,EAAE,CAACyY,MAAf;IACD;;IACDzY,EAAE,CAAC41B,WAAH,GAAiB,CAAjB;IACA51B,EAAE,CAAC01B,UAAH,GAAgB,CAAhB;IACA11B,EAAE,CAAC61B,YAAH,GAAkB,CAAlB;IACA71B,EAAE,CAAC21B,aAAH,GAAmB,CAAnB;EACD;;EACD0B,kBAAkB,GAAG;IACnBp/B,QAAQ,CAAC,KAAK4O,OAAL,CAAawwB,kBAAd,EAAkC,CAAC,IAAD,CAAlC,CAAR;EACD;;EACDsB,UAAU,CAACjzB,IAAD,EAAO;IACf,MAAM1F,EAAE,GAAG,IAAX;IACAA,EAAE,CAACf,KAAH,CAAS25B,aAAT,CAAuBlzB,IAAvB,EAA6B1F,EAAE,CAAC6P,UAAH,EAA7B;IACA5X,QAAQ,CAAC+H,EAAE,CAAC6G,OAAH,CAAWnB,IAAX,CAAD,EAAmB,CAAC1F,EAAD,CAAnB,CAAR;EACD;;EACDs3B,gBAAgB,GAAG;IACjB,KAAKqB,UAAL,CAAgB,kBAAhB;EACD;;EACDpB,mBAAmB,GAAG,CAAE;;EACxBC,eAAe,GAAG;IAChB,KAAKmB,UAAL,CAAgB,iBAAhB;EACD;;EACDlB,gBAAgB,GAAG;IACjB,KAAKkB,UAAL,CAAgB,kBAAhB;EACD;;EACDjB,UAAU,GAAG;IACX,OAAO,EAAP;EACD;;EACDC,eAAe,GAAG;IAChB,KAAKgB,UAAL,CAAgB,iBAAhB;EACD;;EACDE,2BAA2B,GAAG;IAC5B5gC,QAAQ,CAAC,KAAK4O,OAAL,CAAagyB,2BAAd,EAA2C,CAAC,IAAD,CAA3C,CAAR;EACD;;EACDC,kBAAkB,CAAChjB,KAAD,EAAQ;IACxB,MAAM9V,EAAE,GAAG,IAAX;IACA,MAAMmyB,QAAQ,GAAGnyB,EAAE,CAAC6G,OAAH,CAAWiP,KAA5B;IACA,IAAI1iB,CAAJ,EAAOyV,IAAP,EAAa/H,IAAb;;IACA,KAAK1N,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGiN,KAAK,CAACrV,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2CzV,CAAC,EAA5C,EAAgD;MAC9C0N,IAAI,GAAGgV,KAAK,CAAC1iB,CAAD,CAAZ;MACA0N,IAAI,CAAC8Q,KAAL,GAAa3Z,QAAQ,CAACk6B,QAAQ,CAACl6B,QAAV,EAAoB,CAAC6I,IAAI,CAACwG,KAAN,EAAalU,CAAb,EAAgB0iB,KAAhB,CAApB,EAA4C9V,EAA5C,CAArB;IACD;EACF;;EACD+4B,0BAA0B,GAAG;IAC3B9gC,QAAQ,CAAC,KAAK4O,OAAL,CAAakyB,0BAAd,EAA0C,CAAC,IAAD,CAA1C,CAAR;EACD;;EACDjB,4BAA4B,GAAG;IAC7B7/B,QAAQ,CAAC,KAAK4O,OAAL,CAAaixB,4BAAd,EAA4C,CAAC,IAAD,CAA5C,CAAR;EACD;;EACDC,sBAAsB,GAAG;IACvB,MAAM/3B,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAMsrB,QAAQ,GAAGtrB,OAAO,CAACiP,KAAzB;IACA,MAAMkjB,QAAQ,GAAGh5B,EAAE,CAAC8V,KAAH,CAASrV,MAA1B;IACA,MAAM4wB,WAAW,GAAGc,QAAQ,CAACd,WAAT,IAAwB,CAA5C;IACA,MAAMC,WAAW,GAAGa,QAAQ,CAACb,WAA7B;IACA,IAAIwE,aAAa,GAAGzE,WAApB;IACA,IAAIJ,SAAJ,EAAe3T,SAAf,EAA0B2b,gBAA1B;;IACA,IAAI,CAACj5B,EAAE,CAACk5B,UAAH,EAAD,IAAoB,CAAC/G,QAAQ,CAAC1P,OAA9B,IAAyC4O,WAAW,IAAIC,WAAxD,IAAuE0H,QAAQ,IAAI,CAAnF,IAAwF,CAACh5B,EAAE,CAACgY,YAAH,EAA7F,EAAgH;MAC9GhY,EAAE,CAAC81B,aAAH,GAAmBzE,WAAnB;MACA;IACD;;IACD,MAAM8H,UAAU,GAAGn5B,EAAE,CAACo5B,cAAH,EAAnB;;IACA,MAAMC,aAAa,GAAGF,UAAU,CAACG,MAAX,CAAkB5gB,KAAxC;IACA,MAAM6gB,cAAc,GAAGJ,UAAU,CAACK,OAAX,CAAmB/gB,MAA1C;;IACA,MAAM4E,QAAQ,GAAGlnB,WAAW,CAAC6J,EAAE,CAACf,KAAH,CAASyZ,KAAT,GAAiB2gB,aAAlB,EAAiC,CAAjC,EAAoCr5B,EAAE,CAACqd,QAAvC,CAA5B;;IACA4T,SAAS,GAAGpqB,OAAO,CAACsT,MAAR,GAAiBna,EAAE,CAACqd,QAAH,GAAc2b,QAA/B,GAA0C3b,QAAQ,IAAI2b,QAAQ,GAAG,CAAf,CAA9D;;IACA,IAAIK,aAAa,GAAG,CAAhB,GAAoBpI,SAAxB,EAAmC;MACjCA,SAAS,GAAG5T,QAAQ,IAAI2b,QAAQ,IAAInyB,OAAO,CAACsT,MAAR,GAAiB,GAAjB,GAAuB,CAA3B,CAAZ,CAApB;MACAmD,SAAS,GAAGtd,EAAE,CAACsd,SAAH,GAAesX,iBAAiB,CAAC/tB,OAAO,CAACuT,IAAT,CAAhC,GACZ+X,QAAQ,CAACjI,OADG,GACO2K,cAAc,CAAChuB,OAAO,CAACkU,KAAT,EAAgB/a,EAAE,CAACf,KAAH,CAAS4H,OAAT,CAAiBkuB,IAAjC,CADjC;MAEAkE,gBAAgB,GAAGr5B,IAAI,CAAC8lB,IAAL,CAAU2T,aAAa,GAAGA,aAAhB,GAAgCE,cAAc,GAAGA,cAA3D,CAAnB;MACAzD,aAAa,GAAG39B,SAAS,CAACyH,IAAI,CAACC,GAAL,CACxBD,IAAI,CAAC65B,IAAL,CAAU75B,IAAI,CAACC,GAAL,CAAS,CAACs5B,UAAU,CAACK,OAAX,CAAmB/gB,MAAnB,GAA4B,CAA7B,IAAkCwY,SAA3C,EAAsD,CAAtD,CAAV,CADwB,EAExBrxB,IAAI,CAAC65B,IAAL,CAAU75B,IAAI,CAACC,GAAL,CAASyd,SAAS,GAAG2b,gBAArB,EAAuC,CAAvC,CAAV,IAAuDr5B,IAAI,CAAC65B,IAAL,CAAUF,cAAc,GAAGN,gBAA3B,CAF/B,CAAD,CAAzB;MAIAnD,aAAa,GAAGl2B,IAAI,CAACmC,GAAL,CAASsvB,WAAT,EAAsBzxB,IAAI,CAACC,GAAL,CAASyxB,WAAT,EAAsBwE,aAAtB,CAAtB,CAAhB;IACD;;IACD91B,EAAE,CAAC81B,aAAH,GAAmBA,aAAnB;EACD;;EACDkC,2BAA2B,GAAG;IAC5B//B,QAAQ,CAAC,KAAK4O,OAAL,CAAamxB,2BAAd,EAA2C,CAAC,IAAD,CAA3C,CAAR;EACD;;EACDE,SAAS,GAAG;IACVjgC,QAAQ,CAAC,KAAK4O,OAAL,CAAaqxB,SAAd,EAAyB,CAAC,IAAD,CAAzB,CAAR;EACD;;EACDC,GAAG,GAAG;IACJ,MAAMn4B,EAAE,GAAG,IAAX;IACA,MAAM6hB,OAAO,GAAG;MACdnJ,KAAK,EAAE,CADO;MAEdD,MAAM,EAAE;IAFM,CAAhB;IAIA,MAAM;MAACxZ,KAAD;MAAQ4H,OAAO,EAAE;QAACiP,KAAK,EAAEqc,QAAR;QAAkBpX,KAAK,EAAE2e,SAAzB;QAAoCtf,IAAI,EAAEuf;MAA1C;IAAjB,IAAwE35B,EAA9E;;IACA,MAAMyiB,OAAO,GAAGziB,EAAE,CAACk5B,UAAH,EAAhB;;IACA,MAAMlhB,YAAY,GAAGhY,EAAE,CAACgY,YAAH,EAArB;;IACA,IAAIyK,OAAJ,EAAa;MACX,MAAMmX,WAAW,GAAG/E,cAAc,CAAC6E,SAAD,EAAYz6B,KAAK,CAAC4H,OAAN,CAAckuB,IAA1B,CAAlC;;MACA,IAAI/c,YAAJ,EAAkB;QAChB6J,OAAO,CAACnJ,KAAR,GAAgB1Y,EAAE,CAACqd,QAAnB;QACAwE,OAAO,CAACpJ,MAAR,GAAiBmc,iBAAiB,CAAC+E,QAAD,CAAjB,GAA8BC,WAA/C;MACD,CAHD,MAGO;QACL/X,OAAO,CAACpJ,MAAR,GAAiBzY,EAAE,CAACsd,SAApB;QACAuE,OAAO,CAACnJ,KAAR,GAAgBkc,iBAAiB,CAAC+E,QAAD,CAAjB,GAA8BC,WAA9C;MACD;;MACD,IAAIzH,QAAQ,CAAC1P,OAAT,IAAoBziB,EAAE,CAAC8V,KAAH,CAASrV,MAAjC,EAAyC;QACvC,MAAM;UAACkyB,KAAD;UAAQ/Z,IAAR;UAAc0gB,MAAd;UAAsBE;QAAtB,IAAiCx5B,EAAE,CAACo5B,cAAH,EAAvC;;QACA,MAAMS,WAAW,GAAG1H,QAAQ,CAACjI,OAAT,GAAmB,CAAvC;QACA,MAAM4P,YAAY,GAAG7kC,SAAS,CAAC+K,EAAE,CAAC81B,aAAJ,CAA9B;QACA,MAAMna,GAAG,GAAG/b,IAAI,CAAC+b,GAAL,CAASme,YAAT,CAAZ;QACA,MAAMje,GAAG,GAAGjc,IAAI,CAACic,GAAL,CAASie,YAAT,CAAZ;;QACA,IAAI9hB,YAAJ,EAAkB;UAChB,MAAM+hB,WAAW,GAAGle,GAAG,GAAGyd,MAAM,CAAC5gB,KAAb,GAAqBiD,GAAG,GAAG6d,OAAO,CAAC/gB,MAAvD;UACAoJ,OAAO,CAACpJ,MAAR,GAAiB7Y,IAAI,CAACC,GAAL,CAASG,EAAE,CAACsd,SAAZ,EAAuBuE,OAAO,CAACpJ,MAAR,GAAiBshB,WAAjB,GAA+BF,WAAtD,CAAjB;QACD,CAHD,MAGO;UACL,MAAMG,UAAU,GAAG7H,QAAQ,CAACZ,MAAT,GAAkB,CAAlB,GAAsB5V,GAAG,GAAG2d,MAAM,CAAC5gB,KAAb,GAAqBmD,GAAG,GAAG2d,OAAO,CAAC/gB,MAA5E;UACAoJ,OAAO,CAACnJ,KAAR,GAAgB9Y,IAAI,CAACC,GAAL,CAASG,EAAE,CAACqd,QAAZ,EAAsBwE,OAAO,CAACnJ,KAAR,GAAgBshB,UAAhB,GAA6BH,WAAnD,CAAhB;QACD;;QACD75B,EAAE,CAACi6B,iBAAH,CAAqBtH,KAArB,EAA4B/Z,IAA5B,EAAkCiD,GAAlC,EAAuCF,GAAvC;MACD;IACF;;IACD3b,EAAE,CAACk6B,cAAH;;IACA,IAAIliB,YAAJ,EAAkB;MAChBhY,EAAE,CAAC0Y,KAAH,GAAW1Y,EAAE,CAACyV,OAAH,GAAaxW,KAAK,CAACyZ,KAAN,GAAc1Y,EAAE,CAACy1B,QAAH,CAAYltB,IAA1B,GAAiCvI,EAAE,CAACy1B,QAAH,CAAYptB,KAArE;MACArI,EAAE,CAACyY,MAAH,GAAYoJ,OAAO,CAACpJ,MAApB;IACD,CAHD,MAGO;MACLzY,EAAE,CAAC0Y,KAAH,GAAWmJ,OAAO,CAACnJ,KAAnB;MACA1Y,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAACyV,OAAH,GAAaxW,KAAK,CAACwZ,MAAN,GAAezY,EAAE,CAACy1B,QAAH,CAAYrtB,GAA3B,GAAiCpI,EAAE,CAACy1B,QAAH,CAAYntB,MAAtE;IACD;EACF;;EACD2xB,iBAAiB,CAACtH,KAAD,EAAQ/Z,IAAR,EAAciD,GAAd,EAAmBF,GAAnB,EAAwB;IACvC,MAAM3b,EAAE,GAAG,IAAX;IACA,MAAM;MAAC8V,KAAK,EAAE;QAACic,KAAD;QAAQ7H;MAAR,CAAR;MAA0BhF;IAA1B,IAAsCllB,EAAE,CAAC6G,OAA/C;IACA,MAAMszB,SAAS,GAAGn6B,EAAE,CAAC81B,aAAH,KAAqB,CAAvC;IACA,MAAMsE,gBAAgB,GAAGlV,QAAQ,KAAK,KAAb,IAAsBllB,EAAE,CAACoL,IAAH,KAAY,GAA3D;;IACA,IAAIpL,EAAE,CAACgY,YAAH,EAAJ,EAAuB;MACrB,MAAMqiB,UAAU,GAAGr6B,EAAE,CAAC+V,eAAH,CAAmB,CAAnB,IAAwB/V,EAAE,CAACuI,IAA9C;MACA,MAAM+xB,WAAW,GAAGt6B,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAAC+V,eAAH,CAAmB/V,EAAE,CAAC8V,KAAH,CAASrV,MAAT,GAAkB,CAArC,CAA/B;MACA,IAAIm1B,WAAW,GAAG,CAAlB;MACA,IAAIC,YAAY,GAAG,CAAnB;;MACA,IAAIsE,SAAJ,EAAe;QACb,IAAIC,gBAAJ,EAAsB;UACpBxE,WAAW,GAAGja,GAAG,GAAGgX,KAAK,CAACja,KAA1B;UACAmd,YAAY,GAAGha,GAAG,GAAGjD,IAAI,CAACH,MAA1B;QACD,CAHD,MAGO;UACLmd,WAAW,GAAG/Z,GAAG,GAAG8W,KAAK,CAACla,MAA1B;UACAod,YAAY,GAAGla,GAAG,GAAG/C,IAAI,CAACF,KAA1B;QACD;MACF,CARD,MAQO,IAAIqZ,KAAK,KAAK,OAAd,EAAuB;QAC5B8D,YAAY,GAAGjd,IAAI,CAACF,KAApB;MACD,CAFM,MAEA,IAAIqZ,KAAK,KAAK,KAAd,EAAqB;QAC1B6D,WAAW,GAAGjD,KAAK,CAACja,KAApB;MACD,CAFM,MAEA;QACLkd,WAAW,GAAGjD,KAAK,CAACja,KAAN,GAAc,CAA5B;QACAmd,YAAY,GAAGjd,IAAI,CAACF,KAAL,GAAa,CAA5B;MACD;;MACD1Y,EAAE,CAAC41B,WAAH,GAAiBh2B,IAAI,CAACmC,GAAL,CAAS,CAAC6zB,WAAW,GAAGyE,UAAd,GAA2BnQ,OAA5B,IAAuClqB,EAAE,CAAC0Y,KAA1C,IAAmD1Y,EAAE,CAAC0Y,KAAH,GAAW2hB,UAA9D,CAAT,EAAoF,CAApF,CAAjB;MACAr6B,EAAE,CAAC61B,YAAH,GAAkBj2B,IAAI,CAACmC,GAAL,CAAS,CAAC8zB,YAAY,GAAGyE,WAAf,GAA6BpQ,OAA9B,IAAyClqB,EAAE,CAAC0Y,KAA5C,IAAqD1Y,EAAE,CAAC0Y,KAAH,GAAW4hB,WAAhE,CAAT,EAAuF,CAAvF,CAAlB;IACD,CAvBD,MAuBO;MACL,IAAI5E,UAAU,GAAG9c,IAAI,CAACH,MAAL,GAAc,CAA/B;MACA,IAAIkd,aAAa,GAAGhD,KAAK,CAACla,MAAN,GAAe,CAAnC;;MACA,IAAIsZ,KAAK,KAAK,OAAd,EAAuB;QACrB2D,UAAU,GAAG,CAAb;QACAC,aAAa,GAAGhD,KAAK,CAACla,MAAtB;MACD,CAHD,MAGO,IAAIsZ,KAAK,KAAK,KAAd,EAAqB;QAC1B2D,UAAU,GAAG9c,IAAI,CAACH,MAAlB;QACAkd,aAAa,GAAG,CAAhB;MACD;;MACD31B,EAAE,CAAC01B,UAAH,GAAgBA,UAAU,GAAGxL,OAA7B;MACAlqB,EAAE,CAAC21B,aAAH,GAAmBA,aAAa,GAAGzL,OAAnC;IACD;EACF;;EACDgQ,cAAc,GAAG;IACf,MAAMl6B,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAACy1B,QAAP,EAAiB;MACfz1B,EAAE,CAACy1B,QAAH,CAAYltB,IAAZ,GAAmB3I,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAAC41B,WAAZ,EAAyB51B,EAAE,CAACy1B,QAAH,CAAYltB,IAArC,CAAnB;MACAvI,EAAE,CAACy1B,QAAH,CAAYrtB,GAAZ,GAAkBxI,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAAC01B,UAAZ,EAAwB11B,EAAE,CAACy1B,QAAH,CAAYrtB,GAApC,CAAlB;MACApI,EAAE,CAACy1B,QAAH,CAAYptB,KAAZ,GAAoBzI,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAAC61B,YAAZ,EAA0B71B,EAAE,CAACy1B,QAAH,CAAYptB,KAAtC,CAApB;MACArI,EAAE,CAACy1B,QAAH,CAAYntB,MAAZ,GAAqB1I,IAAI,CAACmC,GAAL,CAAS/B,EAAE,CAAC21B,aAAZ,EAA2B31B,EAAE,CAACy1B,QAAH,CAAYntB,MAAvC,CAArB;IACD;EACF;;EACD8vB,QAAQ,GAAG;IACTngC,QAAQ,CAAC,KAAK4O,OAAL,CAAauxB,QAAd,EAAwB,CAAC,IAAD,CAAxB,CAAR;EACD;;EACDpgB,YAAY,GAAG;IACb,MAAM;MAAC5M,IAAD;MAAO8Z;IAAP,IAAmB,KAAKre,OAA9B;IACA,OAAOqe,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAnC,IAA+C9Z,IAAI,KAAK,GAA/D;EACD;;EACDmvB,UAAU,GAAG;IACX,OAAO,KAAK1zB,OAAL,CAAa+gB,QAApB;EACD;;EACDiQ,qBAAqB,CAAC/hB,KAAD,EAAQ;IAC3B,MAAM9V,EAAE,GAAG,IAAX;IACAA,EAAE,CAAC64B,2BAAH;IACA74B,EAAE,CAAC84B,kBAAH,CAAsBhjB,KAAtB;IACA9V,EAAE,CAAC+4B,0BAAH;EACD;;EACDK,cAAc,GAAG;IACf,MAAMp5B,EAAE,GAAG,IAAX;IACA,IAAIm5B,UAAU,GAAGn5B,EAAE,CAACi2B,WAApB;;IACA,IAAI,CAACkD,UAAL,EAAiB;MACf,MAAMjC,UAAU,GAAGl3B,EAAE,CAAC6G,OAAH,CAAWiP,KAAX,CAAiBohB,UAApC;MACA,IAAIphB,KAAK,GAAG9V,EAAE,CAAC8V,KAAf;;MACA,IAAIohB,UAAU,GAAGphB,KAAK,CAACrV,MAAvB,EAA+B;QAC7BqV,KAAK,GAAGke,MAAM,CAACle,KAAD,EAAQohB,UAAR,CAAd;MACD;;MACDl3B,EAAE,CAACi2B,WAAH,GAAiBkD,UAAU,GAAGn5B,EAAE,CAACw6B,kBAAH,CAAsB1kB,KAAtB,EAA6BA,KAAK,CAACrV,MAAnC,CAA9B;IACD;;IACD,OAAO04B,UAAP;EACD;;EACDqB,kBAAkB,CAAC1kB,KAAD,EAAQrV,MAAR,EAAgB;IAChC,MAAM;MAACkM,GAAD;MAAMupB,iBAAiB,EAAEzB;IAAzB,IAAmC,IAAzC;IACA,MAAMgG,MAAM,GAAG,EAAf;IACA,MAAMC,OAAO,GAAG,EAAhB;IACA,IAAIC,eAAe,GAAG,CAAtB;IACA,IAAIC,gBAAgB,GAAG,CAAvB;IACA,IAAIxnC,CAAJ,EAAOoB,CAAP,EAAUiwB,IAAV,EAAgB7S,KAAhB,EAAuBipB,QAAvB,EAAiCC,UAAjC,EAA6CpoB,KAA7C,EAAoDuiB,UAApD,EAAgEvc,KAAhE,EAAuED,MAAvE,EAA+EsiB,WAA/E;;IACA,KAAK3nC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqN,MAAhB,EAAwB,EAAErN,CAA1B,EAA6B;MAC3Bwe,KAAK,GAAGkE,KAAK,CAAC1iB,CAAD,CAAL,CAASwe,KAAjB;MACAipB,QAAQ,GAAG,KAAKG,uBAAL,CAA6B5nC,CAA7B,CAAX;MACAuZ,GAAG,CAACooB,IAAJ,GAAW+F,UAAU,GAAGD,QAAQ,CAACI,MAAjC;MACAvoB,KAAK,GAAG+hB,MAAM,CAACqG,UAAD,CAAN,GAAqBrG,MAAM,CAACqG,UAAD,CAAN,IAAsB;QAACvxB,IAAI,EAAE,EAAP;QAAWmrB,EAAE,EAAE;MAAf,CAAnD;MACAO,UAAU,GAAG4F,QAAQ,CAAC5F,UAAtB;MACAvc,KAAK,GAAGD,MAAM,GAAG,CAAjB;;MACA,IAAI,CAAChkB,aAAa,CAACmd,KAAD,CAAd,IAAyB,CAACre,OAAO,CAACqe,KAAD,CAArC,EAA8C;QAC5C8G,KAAK,GAAGrgB,YAAY,CAACsU,GAAD,EAAM+F,KAAK,CAACnJ,IAAZ,EAAkBmJ,KAAK,CAACgiB,EAAxB,EAA4Bhc,KAA5B,EAAmC9G,KAAnC,CAApB;QACA6G,MAAM,GAAGwc,UAAT;MACD,CAHD,MAGO,IAAI1hC,OAAO,CAACqe,KAAD,CAAX,EAAoB;QACzB,KAAKpd,CAAC,GAAG,CAAJ,EAAOiwB,IAAI,GAAG7S,KAAK,CAACnR,MAAzB,EAAiCjM,CAAC,GAAGiwB,IAArC,EAA2C,EAAEjwB,CAA7C,EAAgD;UAC9CumC,WAAW,GAAGnpB,KAAK,CAACpd,CAAD,CAAnB;;UACA,IAAI,CAACC,aAAa,CAACsmC,WAAD,CAAd,IAA+B,CAACxnC,OAAO,CAACwnC,WAAD,CAA3C,EAA0D;YACxDriB,KAAK,GAAGrgB,YAAY,CAACsU,GAAD,EAAM+F,KAAK,CAACnJ,IAAZ,EAAkBmJ,KAAK,CAACgiB,EAAxB,EAA4Bhc,KAA5B,EAAmCqiB,WAAnC,CAApB;YACAtiB,MAAM,IAAIwc,UAAV;UACD;QACF;MACF;;MACDwF,MAAM,CAACh5B,IAAP,CAAYiX,KAAZ;MACAgiB,OAAO,CAACj5B,IAAR,CAAagX,MAAb;MACAkiB,eAAe,GAAG/6B,IAAI,CAACmC,GAAL,CAAS2W,KAAT,EAAgBiiB,eAAhB,CAAlB;MACAC,gBAAgB,GAAGh7B,IAAI,CAACmC,GAAL,CAAS0W,MAAT,EAAiBmiB,gBAAjB,CAAnB;IACD;;IACDpG,cAAc,CAACC,MAAD,EAASh0B,MAAT,CAAd;IACA,MAAM64B,MAAM,GAAGmB,MAAM,CAAC1hB,OAAP,CAAe4hB,eAAf,CAAf;IACA,MAAMnB,OAAO,GAAGkB,OAAO,CAAC3hB,OAAR,CAAgB6hB,gBAAhB,CAAhB;;IACA,MAAMM,OAAO,GAAIC,GAAD,KAAU;MAACziB,KAAK,EAAE+hB,MAAM,CAACU,GAAD,CAAN,IAAe,CAAvB;MAA0B1iB,MAAM,EAAEiiB,OAAO,CAACS,GAAD,CAAP,IAAgB;IAAlD,CAAV,CAAhB;;IACA,OAAO;MACLxI,KAAK,EAAEuI,OAAO,CAAC,CAAD,CADT;MAELtiB,IAAI,EAAEsiB,OAAO,CAACz6B,MAAM,GAAG,CAAV,CAFR;MAGL64B,MAAM,EAAE4B,OAAO,CAAC5B,MAAD,CAHV;MAILE,OAAO,EAAE0B,OAAO,CAAC1B,OAAD;IAJX,CAAP;EAMD;;EACD3nB,gBAAgB,CAACvK,KAAD,EAAQ;IACtB,OAAOA,KAAP;EACD;;EACDuO,gBAAgB,CAACvO,KAAD,EAAQwB,KAAR,EAAe;IAC7B,OAAOoI,GAAP;EACD;;EACDkqB,gBAAgB,CAACC,KAAD,EAAQ,CAAE;;EAC1BtlB,eAAe,CAACjN,KAAD,EAAQ;IACrB,MAAMgN,KAAK,GAAG,KAAKA,KAAnB;;IACA,IAAIhN,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGgN,KAAK,CAACrV,MAAN,GAAe,CAAxC,EAA2C;MACzC,OAAO,IAAP;IACD;;IACD,OAAO,KAAKoV,gBAAL,CAAsBC,KAAK,CAAChN,KAAD,CAAL,CAAaxB,KAAnC,CAAP;EACD;;EACDoT,kBAAkB,CAAC4gB,OAAD,EAAU;IAC1B,MAAMt7B,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAAC8kB,cAAP,EAAuB;MACrBwW,OAAO,GAAG,IAAIA,OAAd;IACD;;IACD,MAAMD,KAAK,GAAGr7B,EAAE,CAACkZ,WAAH,GAAiBoiB,OAAO,GAAGt7B,EAAE,CAACyV,OAA5C;IACA,OAAOld,WAAW,CAACyH,EAAE,CAACy4B,cAAH,GAAoBhgC,WAAW,CAACuH,EAAE,CAACf,KAAJ,EAAWo8B,KAAX,EAAkB,CAAlB,CAA/B,GAAsDA,KAAvD,CAAlB;EACD;;EACDE,kBAAkB,CAACF,KAAD,EAAQ;IACxB,MAAMC,OAAO,GAAG,CAACD,KAAK,GAAG,KAAKniB,WAAd,IAA6B,KAAKzD,OAAlD;IACA,OAAO,KAAKqP,cAAL,GAAsB,IAAIwW,OAA1B,GAAoCA,OAA3C;EACD;;EACDxjB,YAAY,GAAG;IACb,OAAO,KAAKjC,gBAAL,CAAsB,KAAK2lB,YAAL,EAAtB,CAAP;EACD;;EACDA,YAAY,GAAG;IACb,MAAM;MAAC37B,GAAD;MAAMkC;IAAN,IAAa,IAAnB;IACA,OAAOlC,GAAG,GAAG,CAAN,IAAWkC,GAAG,GAAG,CAAjB,GAAqBA,GAArB,GACLlC,GAAG,GAAG,CAAN,IAAWkC,GAAG,GAAG,CAAjB,GAAqBlC,GAArB,GACA,CAFF;EAGD;;EACDgQ,UAAU,CAAC/G,KAAD,EAAQ;IAChB,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAM8V,KAAK,GAAG9V,EAAE,CAAC8V,KAAH,IAAY,EAA1B;;IACA,IAAIhN,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGgN,KAAK,CAACrV,MAAhC,EAAwC;MACtC,MAAMK,IAAI,GAAGgV,KAAK,CAAChN,KAAD,CAAlB;MACA,OAAOhI,IAAI,CAACwM,QAAL,KACRxM,IAAI,CAACwM,QAAL,GAAgB6nB,iBAAiB,CAACn1B,EAAE,CAAC6P,UAAH,EAAD,EAAkB/G,KAAlB,EAAyBhI,IAAzB,CADzB,CAAP;IAED;;IACD,OAAOd,EAAE,CAACsN,QAAH,KACPtN,EAAE,CAACsN,QAAH,GAAc4nB,kBAAkB,CAACl1B,EAAE,CAACf,KAAH,CAAS4Q,UAAT,EAAD,EAAwB7P,EAAxB,CADzB,CAAP;EAED;;EACDizB,SAAS,GAAG;IACV,MAAMjzB,EAAE,GAAG,IAAX;IACA,MAAMy7B,WAAW,GAAGz7B,EAAE,CAAC6G,OAAH,CAAWiP,KAA/B;IACA,MAAM4lB,GAAG,GAAGzmC,SAAS,CAAC+K,EAAE,CAAC81B,aAAJ,CAArB;IACA,MAAMna,GAAG,GAAG/b,IAAI,CAACgW,GAAL,CAAShW,IAAI,CAAC+b,GAAL,CAAS+f,GAAT,CAAT,CAAZ;IACA,MAAM7f,GAAG,GAAGjc,IAAI,CAACgW,GAAL,CAAShW,IAAI,CAACic,GAAL,CAAS6f,GAAT,CAAT,CAAZ;;IACA,MAAMvC,UAAU,GAAGn5B,EAAE,CAACo5B,cAAH,EAAnB;;IACA,MAAMlP,OAAO,GAAGuR,WAAW,CAAC9J,eAAZ,IAA+B,CAA/C;IACA,MAAM37B,CAAC,GAAGmjC,UAAU,GAAGA,UAAU,CAACG,MAAX,CAAkB5gB,KAAlB,GAA0BwR,OAA7B,GAAuC,CAA3D;IACA,MAAM91B,CAAC,GAAG+kC,UAAU,GAAGA,UAAU,CAACK,OAAX,CAAmB/gB,MAAnB,GAA4ByR,OAA/B,GAAyC,CAA7D;IACA,OAAOlqB,EAAE,CAACgY,YAAH,KACH5jB,CAAC,GAAGunB,GAAJ,GAAU3lB,CAAC,GAAG6lB,GAAd,GAAoB7lB,CAAC,GAAG2lB,GAAxB,GAA8BvnB,CAAC,GAAGynB,GAD/B,GAEHznB,CAAC,GAAGynB,GAAJ,GAAU7lB,CAAC,GAAG2lB,GAAd,GAAoBvnB,CAAC,GAAGunB,GAAxB,GAA8B3lB,CAAC,GAAG6lB,GAFtC;EAGD;;EACDqd,UAAU,GAAG;IACX,MAAMzW,OAAO,GAAG,KAAK5b,OAAL,CAAa4b,OAA7B;;IACA,IAAIA,OAAO,KAAK,MAAhB,EAAwB;MACtB,OAAO,CAAC,CAACA,OAAT;IACD;;IACD,OAAO,KAAKpN,uBAAL,GAA+B5U,MAA/B,GAAwC,CAA/C;EACD;;EACDk7B,qBAAqB,CAACzpB,SAAD,EAAY;IAC/B,MAAMlS,EAAE,GAAG,IAAX;IACA,MAAMoL,IAAI,GAAGpL,EAAE,CAACoL,IAAhB;IACA,MAAMnM,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAM4H,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAM;MAACuT,IAAD;MAAO8K;IAAP,IAAmBre,OAAzB;IACA,MAAMsT,MAAM,GAAGC,IAAI,CAACD,MAApB;IACA,MAAMnC,YAAY,GAAGhY,EAAE,CAACgY,YAAH,EAArB;IACA,MAAMlC,KAAK,GAAG9V,EAAE,CAAC8V,KAAjB;IACA,MAAM8lB,WAAW,GAAG9lB,KAAK,CAACrV,MAAN,IAAgB0Z,MAAM,GAAG,CAAH,GAAO,CAA7B,CAApB;IACA,MAAM0hB,EAAE,GAAGjH,iBAAiB,CAACxa,IAAD,CAA5B;IACA,MAAM5Z,KAAK,GAAG,EAAd;IACA,MAAMs7B,UAAU,GAAG1hB,IAAI,CAAC2hB,UAAL,CAAgB/7B,EAAE,CAAC6P,UAAH,CAAc,CAAd,CAAhB,CAAnB;IACA,MAAMmsB,SAAS,GAAGF,UAAU,CAACjL,UAAX,GAAwBiL,UAAU,CAACtd,WAAnC,GAAiD,CAAnE;IACA,MAAMyd,aAAa,GAAGD,SAAS,GAAG,CAAlC;;IACA,MAAME,gBAAgB,GAAG,UAASb,KAAT,EAAgB;MACvC,OAAO5iC,WAAW,CAACwG,KAAD,EAAQo8B,KAAR,EAAeW,SAAf,CAAlB;IACD,CAFD;;IAGA,IAAIG,WAAJ,EAAiB/oC,CAAjB,EAAoBmhC,SAApB,EAA+B6H,gBAA/B;IACA,IAAIC,GAAJ,EAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC;;IACA,IAAI1X,QAAQ,KAAK,KAAjB,EAAwB;MACtBiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACsI,MAAJ,CAA9B;MACAg0B,GAAG,GAAGt8B,EAAE,CAACsI,MAAH,GAAYuzB,EAAlB;MACAW,GAAG,GAAGL,WAAW,GAAGF,aAApB;MACAS,EAAE,GAAGR,gBAAgB,CAAChqB,SAAS,CAAC9J,GAAX,CAAhB,GAAkC6zB,aAAvC;MACAW,EAAE,GAAG1qB,SAAS,CAAC5J,MAAf;IACD,CAND,MAMO,IAAI4c,QAAQ,KAAK,QAAjB,EAA2B;MAChCiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACoI,GAAJ,CAA9B;MACAs0B,EAAE,GAAGxqB,SAAS,CAAC9J,GAAf;MACAw0B,EAAE,GAAGV,gBAAgB,CAAChqB,SAAS,CAAC5J,MAAX,CAAhB,GAAqC2zB,aAA1C;MACAK,GAAG,GAAGH,WAAW,GAAGF,aAApB;MACAO,GAAG,GAAGx8B,EAAE,CAACoI,GAAH,GAASyzB,EAAf;IACD,CANM,MAMA,IAAI3W,QAAQ,KAAK,MAAjB,EAAyB;MAC9BiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACqI,KAAJ,CAA9B;MACAg0B,GAAG,GAAGr8B,EAAE,CAACqI,KAAH,GAAWwzB,EAAjB;MACAU,GAAG,GAAGJ,WAAW,GAAGF,aAApB;MACAQ,EAAE,GAAGP,gBAAgB,CAAChqB,SAAS,CAAC3J,IAAX,CAAhB,GAAmC0zB,aAAxC;MACAU,EAAE,GAAGzqB,SAAS,CAAC7J,KAAf;IACD,CANM,MAMA,IAAI6c,QAAQ,KAAK,OAAjB,EAA0B;MAC/BiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACuI,IAAJ,CAA9B;MACAk0B,EAAE,GAAGvqB,SAAS,CAAC3J,IAAf;MACAo0B,EAAE,GAAGT,gBAAgB,CAAChqB,SAAS,CAAC7J,KAAX,CAAhB,GAAoC4zB,aAAzC;MACAI,GAAG,GAAGF,WAAW,GAAGF,aAApB;MACAM,GAAG,GAAGv8B,EAAE,CAACuI,IAAH,GAAUszB,EAAhB;IACD,CANM,MAMA,IAAIzwB,IAAI,KAAK,GAAb,EAAkB;MACvB,IAAI8Z,QAAQ,KAAK,QAAjB,EAA2B;QACzBiX,WAAW,GAAGD,gBAAgB,CAAC,CAAChqB,SAAS,CAAC9J,GAAV,GAAgB8J,SAAS,CAAC5J,MAA3B,IAAqC,CAArC,GAAyC,GAA1C,CAA9B;MACD,CAFD,MAEO,IAAIjV,QAAQ,CAAC6xB,QAAD,CAAZ,EAAwB;QAC7B,MAAM2X,cAAc,GAAG13B,MAAM,CAACC,IAAP,CAAY8f,QAAZ,EAAsB,CAAtB,CAAvB;QACA,MAAM5d,KAAK,GAAG4d,QAAQ,CAAC2X,cAAD,CAAtB;QACAV,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACf,KAAH,CAASuM,MAAT,CAAgBqxB,cAAhB,EAAgChnB,gBAAhC,CAAiDvO,KAAjD,CAAD,CAA9B;MACD;;MACDo1B,EAAE,GAAGxqB,SAAS,CAAC9J,GAAf;MACAw0B,EAAE,GAAG1qB,SAAS,CAAC5J,MAAf;MACAg0B,GAAG,GAAGH,WAAW,GAAGF,aAApB;MACAO,GAAG,GAAGF,GAAG,GAAGT,EAAZ;IACD,CAZM,MAYA,IAAIzwB,IAAI,KAAK,GAAb,EAAkB;MACvB,IAAI8Z,QAAQ,KAAK,QAAjB,EAA2B;QACzBiX,WAAW,GAAGD,gBAAgB,CAAC,CAAChqB,SAAS,CAAC3J,IAAV,GAAiB2J,SAAS,CAAC7J,KAA5B,IAAqC,CAAtC,CAA9B;MACD,CAFD,MAEO,IAAIhV,QAAQ,CAAC6xB,QAAD,CAAZ,EAAwB;QAC7B,MAAM2X,cAAc,GAAG13B,MAAM,CAACC,IAAP,CAAY8f,QAAZ,EAAsB,CAAtB,CAAvB;QACA,MAAM5d,KAAK,GAAG4d,QAAQ,CAAC2X,cAAD,CAAtB;QACAV,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACf,KAAH,CAASuM,MAAT,CAAgBqxB,cAAhB,EAAgChnB,gBAAhC,CAAiDvO,KAAjD,CAAD,CAA9B;MACD;;MACD+0B,GAAG,GAAGF,WAAW,GAAGF,aAApB;MACAM,GAAG,GAAGF,GAAG,GAAGR,EAAZ;MACAY,EAAE,GAAGvqB,SAAS,CAAC3J,IAAf;MACAo0B,EAAE,GAAGzqB,SAAS,CAAC7J,KAAf;IACD;;IACD,KAAKjV,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwoC,WAAhB,EAA6B,EAAExoC,CAA/B,EAAkC;MAChC,MAAM0pC,WAAW,GAAG1iB,IAAI,CAAC2hB,UAAL,CAAgB/7B,EAAE,CAAC6P,UAAH,CAAczc,CAAd,CAAhB,CAApB;MACA,MAAMmsB,SAAS,GAAGud,WAAW,CAACvd,SAA9B;MACA,MAAMwd,SAAS,GAAGD,WAAW,CAAC3pC,KAA9B;MACA,MAAMg+B,UAAU,GAAG/W,IAAI,CAAC+W,UAAL,IAAmB,EAAtC;MACA,MAAMC,gBAAgB,GAAG0L,WAAW,CAAC1L,gBAArC;MACA,MAAMH,SAAS,GAAG6L,WAAW,CAAC7L,SAA9B;MACA,MAAMC,SAAS,GAAG4L,WAAW,CAAC5L,SAA9B;MACA,MAAM8L,cAAc,GAAGF,WAAW,CAACE,cAAZ,IAA8B,EAArD;MACA,MAAMC,oBAAoB,GAAGH,WAAW,CAACG,oBAAzC;MACA1I,SAAS,GAAGJ,mBAAmB,CAACn0B,EAAD,EAAK5M,CAAL,EAAQ+mB,MAAR,CAA/B;;MACA,IAAIoa,SAAS,KAAKx1B,SAAlB,EAA6B;QAC3B;MACD;;MACDq9B,gBAAgB,GAAG3jC,WAAW,CAACwG,KAAD,EAAQs1B,SAAR,EAAmBhV,SAAnB,CAA9B;;MACA,IAAIvH,YAAJ,EAAkB;QAChBqkB,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGP,gBAAtB;MACD,CAFD,MAEO;QACLE,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGR,gBAAtB;MACD;;MACD57B,KAAK,CAACiB,IAAN,CAAW;QACT46B,GADS;QAETC,GAFS;QAGTC,GAHS;QAITC,GAJS;QAKTC,EALS;QAMTC,EANS;QAOTC,EAPS;QAQTC,EARS;QASTlkB,KAAK,EAAE6G,SATE;QAUTpsB,KAAK,EAAE4pC,SAVE;QAWT5L,UAXS;QAYTC,gBAZS;QAaTH,SAbS;QAcTC,SAdS;QAeT8L,cAfS;QAgBTC;MAhBS,CAAX;IAkBD;;IACDj9B,EAAE,CAACu2B,YAAH,GAAkBqF,WAAlB;IACA57B,EAAE,CAACw2B,YAAH,GAAkB2F,WAAlB;IACA,OAAO37B,KAAP;EACD;;EACD08B,kBAAkB,CAAChrB,SAAD,EAAY;IAC5B,MAAMlS,EAAE,GAAG,IAAX;IACA,MAAMoL,IAAI,GAAGpL,EAAE,CAACoL,IAAhB;IACA,MAAMvE,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAM;MAACqe,QAAD;MAAWpP,KAAK,EAAE2lB;IAAlB,IAAiC50B,OAAvC;IACA,MAAMmR,YAAY,GAAGhY,EAAE,CAACgY,YAAH,EAArB;IACA,MAAMlC,KAAK,GAAG9V,EAAE,CAAC8V,KAAjB;IACA,MAAM;MAACic,KAAD;MAAQC,UAAR;MAAoB9H;IAApB,IAA+BuR,WAArC;IACA,MAAMI,EAAE,GAAGjH,iBAAiB,CAAC/tB,OAAO,CAACuT,IAAT,CAA5B;IACA,MAAM+iB,cAAc,GAAGtB,EAAE,GAAG3R,OAA5B;IACA,MAAMjP,QAAQ,GAAG,CAAChmB,SAAS,CAAC+K,EAAE,CAAC81B,aAAJ,CAA3B;IACA,MAAMt1B,KAAK,GAAG,EAAd;IACA,IAAIpN,CAAJ,EAAOyV,IAAP,EAAa/H,IAAb,EAAmB8Q,KAAnB,EAA0B1b,CAA1B,EAA6BE,CAA7B,EAAgCgnC,SAAhC,EAA2C/B,KAA3C,EAAkDtG,IAAlD,EAAwDE,UAAxD,EAAoEoI,SAApE,EAA+EC,UAA/E;IACA,IAAIC,YAAY,GAAG,QAAnB;;IACA,IAAIrY,QAAQ,KAAK,KAAjB,EAAwB;MACtB9uB,CAAC,GAAG4J,EAAE,CAACsI,MAAH,GAAY60B,cAAhB;MACAC,SAAS,GAAGp9B,EAAE,CAACw9B,uBAAH,EAAZ;IACD,CAHD,MAGO,IAAItY,QAAQ,KAAK,QAAjB,EAA2B;MAChC9uB,CAAC,GAAG4J,EAAE,CAACoI,GAAH,GAAS+0B,cAAb;MACAC,SAAS,GAAGp9B,EAAE,CAACw9B,uBAAH,EAAZ;IACD,CAHM,MAGA,IAAItY,QAAQ,KAAK,MAAjB,EAAyB;MAC9B,MAAM0K,GAAG,GAAG,KAAK6N,uBAAL,CAA6B5B,EAA7B,CAAZ;;MACAuB,SAAS,GAAGxN,GAAG,CAACwN,SAAhB;MACAlnC,CAAC,GAAG05B,GAAG,CAAC15B,CAAR;IACD,CAJM,MAIA,IAAIgvB,QAAQ,KAAK,OAAjB,EAA0B;MAC/B,MAAM0K,GAAG,GAAG,KAAK6N,uBAAL,CAA6B5B,EAA7B,CAAZ;;MACAuB,SAAS,GAAGxN,GAAG,CAACwN,SAAhB;MACAlnC,CAAC,GAAG05B,GAAG,CAAC15B,CAAR;IACD,CAJM,MAIA,IAAIkV,IAAI,KAAK,GAAb,EAAkB;MACvB,IAAI8Z,QAAQ,KAAK,QAAjB,EAA2B;QACzB9uB,CAAC,GAAI,CAAC8b,SAAS,CAAC9J,GAAV,GAAgB8J,SAAS,CAAC5J,MAA3B,IAAqC,CAAtC,GAA2C60B,cAA/C;MACD,CAFD,MAEO,IAAI9pC,QAAQ,CAAC6xB,QAAD,CAAZ,EAAwB;QAC7B,MAAM2X,cAAc,GAAG13B,MAAM,CAACC,IAAP,CAAY8f,QAAZ,EAAsB,CAAtB,CAAvB;QACA,MAAM5d,KAAK,GAAG4d,QAAQ,CAAC2X,cAAD,CAAtB;QACAzmC,CAAC,GAAG4J,EAAE,CAACf,KAAH,CAASuM,MAAT,CAAgBqxB,cAAhB,EAAgChnB,gBAAhC,CAAiDvO,KAAjD,IAA0D61B,cAA9D;MACD;;MACDC,SAAS,GAAGp9B,EAAE,CAACw9B,uBAAH,EAAZ;IACD,CATM,MASA,IAAIpyB,IAAI,KAAK,GAAb,EAAkB;MACvB,IAAI8Z,QAAQ,KAAK,QAAjB,EAA2B;QACzBhvB,CAAC,GAAI,CAACgc,SAAS,CAAC3J,IAAV,GAAiB2J,SAAS,CAAC7J,KAA5B,IAAqC,CAAtC,GAA2C80B,cAA/C;MACD,CAFD,MAEO,IAAI9pC,QAAQ,CAAC6xB,QAAD,CAAZ,EAAwB;QAC7B,MAAM2X,cAAc,GAAG13B,MAAM,CAACC,IAAP,CAAY8f,QAAZ,EAAsB,CAAtB,CAAvB;QACA,MAAM5d,KAAK,GAAG4d,QAAQ,CAAC2X,cAAD,CAAtB;QACA3mC,CAAC,GAAG8J,EAAE,CAACf,KAAH,CAASuM,MAAT,CAAgBqxB,cAAhB,EAAgChnB,gBAAhC,CAAiDvO,KAAjD,CAAJ;MACD;;MACD81B,SAAS,GAAG,KAAKK,uBAAL,CAA6B5B,EAA7B,EAAiCuB,SAA7C;IACD;;IACD,IAAIhyB,IAAI,KAAK,GAAb,EAAkB;MAChB,IAAI2mB,KAAK,KAAK,OAAd,EAAuB;QACrBwL,YAAY,GAAG,KAAf;MACD,CAFD,MAEO,IAAIxL,KAAK,KAAK,KAAd,EAAqB;QAC1BwL,YAAY,GAAG,QAAf;MACD;IACF;;IACD,MAAMpE,UAAU,GAAGn5B,EAAE,CAACo5B,cAAH,EAAnB;;IACA,KAAKhmC,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGiN,KAAK,CAACrV,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2C,EAAEzV,CAA7C,EAAgD;MAC9C0N,IAAI,GAAGgV,KAAK,CAAC1iB,CAAD,CAAZ;MACAwe,KAAK,GAAG9Q,IAAI,CAAC8Q,KAAb;MACA,MAAMkrB,WAAW,GAAGrB,WAAW,CAACM,UAAZ,CAAuB/7B,EAAE,CAAC6P,UAAH,CAAczc,CAAd,CAAvB,CAApB;MACAioC,KAAK,GAAGr7B,EAAE,CAAC+V,eAAH,CAAmB3iB,CAAnB,IAAwBqoC,WAAW,CAAC7J,WAA5C;MACAmD,IAAI,GAAG/0B,EAAE,CAACg7B,uBAAH,CAA2B5nC,CAA3B,CAAP;MACA6hC,UAAU,GAAGF,IAAI,CAACE,UAAlB;MACAoI,SAAS,GAAG9pC,OAAO,CAACqe,KAAD,CAAP,GAAiBA,KAAK,CAACnR,MAAvB,GAAgC,CAA5C;MACA,MAAMi9B,SAAS,GAAGL,SAAS,GAAG,CAA9B;MACA,MAAMlqC,KAAK,GAAG2pC,WAAW,CAAC3pC,KAA1B;MACA,MAAMwqC,WAAW,GAAGb,WAAW,CAACrL,eAAhC;MACA,MAAMmM,WAAW,GAAGd,WAAW,CAACtL,eAAhC;;MACA,IAAIxZ,YAAJ,EAAkB;QAChB9hB,CAAC,GAAGmlC,KAAJ;;QACA,IAAInW,QAAQ,KAAK,KAAjB,EAAwB;UACtB,IAAI8M,UAAU,KAAK,MAAf,IAAyB/W,QAAQ,KAAK,CAA1C,EAA6C;YAC3CqiB,UAAU,GAAG,CAACD,SAAD,GAAapI,UAAb,GAA0BA,UAAU,GAAG,CAApD;UACD,CAFD,MAEO,IAAIjD,UAAU,KAAK,QAAnB,EAA6B;YAClCsL,UAAU,GAAG,CAACnE,UAAU,CAACK,OAAX,CAAmB/gB,MAApB,GAA6B,CAA7B,GAAiCilB,SAAS,GAAGzI,UAA7C,GAA0DA,UAAvE;UACD,CAFM,MAEA;YACLqI,UAAU,GAAG,CAACnE,UAAU,CAACK,OAAX,CAAmB/gB,MAApB,GAA6Bwc,UAAU,GAAG,CAAvD;UACD;QACF,CARD,MAQO;UACL,IAAIjD,UAAU,KAAK,MAAf,IAAyB/W,QAAQ,KAAK,CAA1C,EAA6C;YAC3CqiB,UAAU,GAAGrI,UAAU,GAAG,CAA1B;UACD,CAFD,MAEO,IAAIjD,UAAU,KAAK,QAAnB,EAA6B;YAClCsL,UAAU,GAAGnE,UAAU,CAACK,OAAX,CAAmB/gB,MAAnB,GAA4B,CAA5B,GAAgCilB,SAAS,GAAGzI,UAAzD;UACD,CAFM,MAEA;YACLqI,UAAU,GAAGnE,UAAU,CAACK,OAAX,CAAmB/gB,MAAnB,GAA4B4kB,SAAS,GAAGpI,UAArD;UACD;QACF;MACF,CAnBD,MAmBO;QACL7+B,CAAC,GAAGilC,KAAJ;QACAiC,UAAU,GAAG,CAAC,IAAID,SAAL,IAAkBpI,UAAlB,GAA+B,CAA5C;MACD;;MACDz0B,KAAK,CAACiB,IAAN,CAAW;QACTwZ,QADS;QAETrJ,KAFS;QAGTmjB,IAHS;QAIT5hC,KAJS;QAKTwqC,WALS;QAMTC,WANS;QAOTN,UAPS;QAQTF,SARS;QASTG,YATS;QAUTM,WAAW,EAAE,CAAC3nC,CAAD,EAAIE,CAAJ;MAVJ,CAAX;IAYD;;IACD,OAAOoK,KAAP;EACD;;EACDg9B,uBAAuB,GAAG;IACxB,MAAMx9B,EAAE,GAAG,IAAX;IACA,MAAM;MAACklB,QAAD;MAAWpP;IAAX,IAAoB9V,EAAE,CAAC6G,OAA7B;IACA,MAAMoU,QAAQ,GAAG,CAAChmB,SAAS,CAAC+K,EAAE,CAAC81B,aAAJ,CAA3B;;IACA,IAAI7a,QAAJ,EAAc;MACZ,OAAOiK,QAAQ,KAAK,KAAb,GAAqB,MAArB,GAA8B,OAArC;IACD;;IACD,IAAI6M,KAAK,GAAG,QAAZ;;IACA,IAAIjc,KAAK,CAACic,KAAN,KAAgB,OAApB,EAA6B;MAC3BA,KAAK,GAAG,MAAR;IACD,CAFD,MAEO,IAAIjc,KAAK,CAACic,KAAN,KAAgB,KAApB,EAA2B;MAChCA,KAAK,GAAG,OAAR;IACD;;IACD,OAAOA,KAAP;EACD;;EACD0L,uBAAuB,CAAC5B,EAAD,EAAK;IAC1B,MAAM77B,EAAE,GAAG,IAAX;IACA,MAAM;MAACklB,QAAD;MAAWpP,KAAK,EAAE;QAACkc,UAAD;QAAaT,MAAb;QAAqBrH;MAArB;IAAlB,IAAmDlqB,EAAE,CAAC6G,OAA5D;;IACA,MAAMsyB,UAAU,GAAGn5B,EAAE,CAACo5B,cAAH,EAAnB;;IACA,MAAM+D,cAAc,GAAGtB,EAAE,GAAG3R,OAA5B;IACA,MAAMoP,MAAM,GAAGH,UAAU,CAACG,MAAX,CAAkB5gB,KAAjC;IACA,IAAI0kB,SAAJ;IACA,IAAIlnC,CAAJ;;IACA,IAAIgvB,QAAQ,KAAK,MAAjB,EAAyB;MACvB,IAAIqM,MAAJ,EAAY;QACV6L,SAAS,GAAG,MAAZ;QACAlnC,CAAC,GAAG8J,EAAE,CAACqI,KAAH,GAAW6hB,OAAf;MACD,CAHD,MAGO;QACLh0B,CAAC,GAAG8J,EAAE,CAACqI,KAAH,GAAW80B,cAAf;;QACA,IAAInL,UAAU,KAAK,MAAnB,EAA2B;UACzBoL,SAAS,GAAG,OAAZ;QACD,CAFD,MAEO,IAAIpL,UAAU,KAAK,QAAnB,EAA6B;UAClCoL,SAAS,GAAG,QAAZ;UACAlnC,CAAC,IAAKojC,MAAM,GAAG,CAAf;QACD,CAHM,MAGA;UACL8D,SAAS,GAAG,MAAZ;UACAlnC,CAAC,GAAG8J,EAAE,CAACuI,IAAP;QACD;MACF;IACF,CAhBD,MAgBO,IAAI2c,QAAQ,KAAK,OAAjB,EAA0B;MAC/B,IAAIqM,MAAJ,EAAY;QACV6L,SAAS,GAAG,OAAZ;QACAlnC,CAAC,GAAG8J,EAAE,CAACuI,IAAH,GAAU2hB,OAAd;MACD,CAHD,MAGO;QACLh0B,CAAC,GAAG8J,EAAE,CAACuI,IAAH,GAAU40B,cAAd;;QACA,IAAInL,UAAU,KAAK,MAAnB,EAA2B;UACzBoL,SAAS,GAAG,MAAZ;QACD,CAFD,MAEO,IAAIpL,UAAU,KAAK,QAAnB,EAA6B;UAClCoL,SAAS,GAAG,QAAZ;UACAlnC,CAAC,IAAIojC,MAAM,GAAG,CAAd;QACD,CAHM,MAGA;UACL8D,SAAS,GAAG,OAAZ;UACAlnC,CAAC,GAAG8J,EAAE,CAACqI,KAAP;QACD;MACF;IACF,CAhBM,MAgBA;MACL+0B,SAAS,GAAG,OAAZ;IACD;;IACD,OAAO;MAACA,SAAD;MAAYlnC;IAAZ,CAAP;EACD;;EACD4nC,iBAAiB,GAAG;IAClB,MAAM99B,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAAC6G,OAAH,CAAWiP,KAAX,CAAiByb,MAArB,EAA6B;MAC3B;IACD;;IACD,MAAMtyB,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAMimB,QAAQ,GAAGllB,EAAE,CAAC6G,OAAH,CAAWqe,QAA5B;;IACA,IAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;MAC/C,OAAO;QAAC9c,GAAG,EAAE,CAAN;QAASG,IAAI,EAAEvI,EAAE,CAACuI,IAAlB;QAAwBD,MAAM,EAAErJ,KAAK,CAACwZ,MAAtC;QAA8CpQ,KAAK,EAAErI,EAAE,CAACqI;MAAxD,CAAP;IACD;;IAAC,IAAI6c,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAvC,EAAiD;MACjD,OAAO;QAAC9c,GAAG,EAAEpI,EAAE,CAACoI,GAAT;QAAcG,IAAI,EAAE,CAApB;QAAuBD,MAAM,EAAEtI,EAAE,CAACsI,MAAlC;QAA0CD,KAAK,EAAEpJ,KAAK,CAACyZ;MAAvD,CAAP;IACD;EACF;;EACDqlB,cAAc,GAAG;IACf,MAAM;MAACpxB,GAAD;MAAM9F,OAAO,EAAE;QAACuY;MAAD,CAAf;MAAkC7W,IAAlC;MAAwCH,GAAxC;MAA6CsQ,KAA7C;MAAoDD;IAApD,IAA8D,IAApE;;IACA,IAAI2G,eAAJ,EAAqB;MACnBzS,GAAG,CAACqxB,IAAJ;MACArxB,GAAG,CAACwS,SAAJ,GAAgBC,eAAhB;MACAzS,GAAG,CAACsxB,QAAJ,CAAa11B,IAAb,EAAmBH,GAAnB,EAAwBsQ,KAAxB,EAA+BD,MAA/B;MACA9L,GAAG,CAACuxB,OAAJ;IACD;EACF;;EACDvkB,oBAAoB,CAACrS,KAAD,EAAQ;IAC1B,MAAMtH,EAAE,GAAG,IAAX;IACA,MAAMoa,IAAI,GAAGpa,EAAE,CAAC6G,OAAH,CAAWuT,IAAxB;;IACA,IAAI,CAACpa,EAAE,CAACk5B,UAAH,EAAD,IAAoB,CAAC9e,IAAI,CAACqI,OAA9B,EAAuC;MACrC,OAAO,CAAP;IACD;;IACD,MAAM3M,KAAK,GAAG9V,EAAE,CAAC8V,KAAjB;IACA,MAAMhN,KAAK,GAAGgN,KAAK,CAACqoB,SAAN,CAAgBnpC,CAAC,IAAIA,CAAC,CAACsS,KAAF,KAAYA,KAAjC,CAAd;;IACA,IAAIwB,KAAK,IAAI,CAAb,EAAgB;MACd,MAAMhB,IAAI,GAAGsS,IAAI,CAAC2hB,UAAL,CAAgB/7B,EAAE,CAAC6P,UAAH,CAAc/G,KAAd,CAAhB,CAAb;MACA,OAAOhB,IAAI,CAACyX,SAAZ;IACD;;IACD,OAAO,CAAP;EACD;;EACD6e,QAAQ,CAAClsB,SAAD,EAAY;IAClB,MAAMlS,EAAE,GAAG,IAAX;IACA,MAAMoa,IAAI,GAAGpa,EAAE,CAAC6G,OAAH,CAAWuT,IAAxB;IACA,MAAMzN,GAAG,GAAG3M,EAAE,CAAC2M,GAAf;IACA,MAAM1N,KAAK,GAAGe,EAAE,CAACf,KAAjB;IACA,MAAM68B,UAAU,GAAG1hB,IAAI,CAAC2hB,UAAL,CAAgB/7B,EAAE,CAAC6P,UAAH,CAAc,CAAd,CAAhB,CAAnB;IACA,MAAMmsB,SAAS,GAAG5hB,IAAI,CAACyW,UAAL,GAAkBiL,UAAU,CAACtd,WAA7B,GAA2C,CAA7D;;IACA,MAAMhe,KAAK,GAAGR,EAAE,CAAC+1B,cAAH,KAAsB/1B,EAAE,CAAC+1B,cAAH,GAAoB/1B,EAAE,CAAC27B,qBAAH,CAAyBzpB,SAAzB,CAA1C,CAAd;;IACA,IAAI9e,CAAJ,EAAOyV,IAAP;;IACA,MAAMw1B,QAAQ,GAAG,CAACC,EAAD,EAAKC,EAAL,EAAStf,KAAT,KAAmB;MAClC,IAAI,CAACA,KAAK,CAACvG,KAAP,IAAgB,CAACuG,KAAK,CAAC9rB,KAA3B,EAAkC;QAChC;MACD;;MACDwZ,GAAG,CAACqxB,IAAJ;MACArxB,GAAG,CAAC4S,SAAJ,GAAgBN,KAAK,CAACvG,KAAtB;MACA/L,GAAG,CAAC0S,WAAJ,GAAkBJ,KAAK,CAAC9rB,KAAxB;MACAwZ,GAAG,CAAC6xB,WAAJ,CAAgBvf,KAAK,CAACkS,UAAN,IAAoB,EAApC;MACAxkB,GAAG,CAAC8xB,cAAJ,GAAqBxf,KAAK,CAACmS,gBAA3B;MACAzkB,GAAG,CAAC+xB,SAAJ;MACA/xB,GAAG,CAACgyB,MAAJ,CAAWL,EAAE,CAACpoC,CAAd,EAAiBooC,EAAE,CAACloC,CAApB;MACAuW,GAAG,CAACiyB,MAAJ,CAAWL,EAAE,CAACroC,CAAd,EAAiBqoC,EAAE,CAACnoC,CAApB;MACAuW,GAAG,CAACkyB,MAAJ;MACAlyB,GAAG,CAACuxB,OAAJ;IACD,CAdD;;IAeA,IAAI9jB,IAAI,CAACqI,OAAT,EAAkB;MAChB,KAAKrvB,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGrI,KAAK,CAACC,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2C,EAAEzV,CAA7C,EAAgD;QAC9C,MAAMuN,IAAI,GAAGH,KAAK,CAACpN,CAAD,CAAlB;;QACA,IAAIgnB,IAAI,CAAC0W,eAAT,EAA0B;UACxBuN,QAAQ,CACN;YAACnoC,CAAC,EAAEyK,IAAI,CAAC87B,EAAT;YAAarmC,CAAC,EAAEuK,IAAI,CAAC+7B;UAArB,CADM,EAEN;YAACxmC,CAAC,EAAEyK,IAAI,CAACg8B,EAAT;YAAavmC,CAAC,EAAEuK,IAAI,CAACi8B;UAArB,CAFM,EAGNj8B,IAHM,CAAR;QAKD;;QACD,IAAIyZ,IAAI,CAAC2W,SAAT,EAAoB;UAClBsN,QAAQ,CACN;YAACnoC,CAAC,EAAEyK,IAAI,CAAC07B,GAAT;YAAcjmC,CAAC,EAAEuK,IAAI,CAAC27B;UAAtB,CADM,EAEN;YAACpmC,CAAC,EAAEyK,IAAI,CAAC47B,GAAT;YAAcnmC,CAAC,EAAEuK,IAAI,CAAC67B;UAAtB,CAFM,EAGN;YACErpC,KAAK,EAAEwN,IAAI,CAACuwB,SADd;YAEExY,KAAK,EAAE/X,IAAI,CAACswB,SAFd;YAGEE,UAAU,EAAExwB,IAAI,CAACq8B,cAHnB;YAIE5L,gBAAgB,EAAEzwB,IAAI,CAACs8B;UAJzB,CAHM,CAAR;QAUD;MACF;IACF;;IACD,IAAIjB,SAAJ,EAAe;MACb,MAAM8C,QAAQ,GAAG1kB,IAAI,CAAC2hB,UAAL,CAAgB/7B,EAAE,CAAC6P,UAAH,CAAc7P,EAAE,CAACu2B,YAAH,GAAkB,CAAhC,CAAhB,CAAjB;MACA,MAAMwI,aAAa,GAAGD,QAAQ,CAACvf,SAA/B;MACA,MAAM4c,WAAW,GAAGn8B,EAAE,CAACw2B,YAAvB;MACA,IAAIiG,EAAJ,EAAQE,EAAR,EAAYD,EAAZ,EAAgBE,EAAhB;;MACA,IAAI58B,EAAE,CAACgY,YAAH,EAAJ,EAAuB;QACrBykB,EAAE,GAAGhkC,WAAW,CAACwG,KAAD,EAAQe,EAAE,CAACuI,IAAX,EAAiByzB,SAAjB,CAAX,GAAyCA,SAAS,GAAG,CAA1D;QACAW,EAAE,GAAGlkC,WAAW,CAACwG,KAAD,EAAQe,EAAE,CAACqI,KAAX,EAAkB02B,aAAlB,CAAX,GAA8CA,aAAa,GAAG,CAAnE;QACArC,EAAE,GAAGE,EAAE,GAAGT,WAAV;MACD,CAJD,MAIO;QACLO,EAAE,GAAGjkC,WAAW,CAACwG,KAAD,EAAQe,EAAE,CAACoI,GAAX,EAAgB4zB,SAAhB,CAAX,GAAwCA,SAAS,GAAG,CAAzD;QACAY,EAAE,GAAGnkC,WAAW,CAACwG,KAAD,EAAQe,EAAE,CAACsI,MAAX,EAAmBy2B,aAAnB,CAAX,GAA+CA,aAAa,GAAG,CAApE;QACAtC,EAAE,GAAGE,EAAE,GAAGR,WAAV;MACD;;MACDkC,QAAQ,CACN;QAACnoC,CAAC,EAAEumC,EAAJ;QAAQrmC,CAAC,EAAEsmC;MAAX,CADM,EAEN;QAACxmC,CAAC,EAAEymC,EAAJ;QAAQvmC,CAAC,EAAEwmC;MAAX,CAFM,EAGN;QAAClkB,KAAK,EAAEsjB,SAAR;QAAmB7oC,KAAK,EAAE2rC,QAAQ,CAACxf;MAAnC,CAHM,CAAR;IAID;EACF;;EACD0f,UAAU,CAAC9sB,SAAD,EAAY;IACpB,MAAMlS,EAAE,GAAG,IAAX;IACA,MAAMy7B,WAAW,GAAGz7B,EAAE,CAAC6G,OAAH,CAAWiP,KAA/B;;IACA,IAAI,CAAC2lB,WAAW,CAAChZ,OAAjB,EAA0B;MACxB;IACD;;IACD,MAAM9V,GAAG,GAAG3M,EAAE,CAAC2M,GAAf;;IACA,MAAMsF,IAAI,GAAGjS,EAAE,CAAC89B,iBAAH,EAAb;;IACA,IAAI7rB,IAAJ,EAAU;MACRtd,QAAQ,CAACgY,GAAD,EAAMsF,IAAN,CAAR;IACD;;IACD,MAAMzR,KAAK,GAAGR,EAAE,CAACg2B,WAAH,KAAmBh2B,EAAE,CAACg2B,WAAH,GAAiBh2B,EAAE,CAACk9B,kBAAH,CAAsBhrB,SAAtB,CAApC,CAAd;;IACA,IAAI9e,CAAJ,EAAOyV,IAAP;;IACA,KAAKzV,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGrI,KAAK,CAACC,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2C,EAAEzV,CAA7C,EAAgD;MAC9C,MAAMuN,IAAI,GAAGH,KAAK,CAACpN,CAAD,CAAlB;MACA,MAAMynC,QAAQ,GAAGl6B,IAAI,CAACo0B,IAAtB;MACA,MAAMnjB,KAAK,GAAGjR,IAAI,CAACiR,KAAnB;MACA,IAAIxb,CAAC,GAAGuK,IAAI,CAAC28B,UAAb;MACA3kC,UAAU,CAACgU,GAAD,EAAMiF,KAAN,EAAa,CAAb,EAAgBxb,CAAhB,EAAmBykC,QAAnB,EAA6Bl6B,IAA7B,CAAV;IACD;;IACD,IAAIsR,IAAJ,EAAU;MACRpd,UAAU,CAAC8X,GAAD,CAAV;IACD;EACF;;EACDsyB,SAAS,GAAG;IACV,MAAM;MAACtyB,GAAD;MAAM9F,OAAO,EAAE;QAACqe,QAAD;QAAWnK,KAAX;QAAkBhT;MAAlB;IAAf,IAA6C,IAAnD;;IACA,IAAI,CAACgT,KAAK,CAAC0H,OAAX,EAAoB;MAClB;IACD;;IACD,MAAMsS,IAAI,GAAGl8B,MAAM,CAACkiB,KAAK,CAACga,IAAP,CAAnB;IACA,MAAM7K,OAAO,GAAGrzB,SAAS,CAACkkB,KAAK,CAACmP,OAAP,CAAzB;IACA,MAAM6H,KAAK,GAAGhX,KAAK,CAACgX,KAApB;IACA,IAAI5X,MAAM,GAAG4a,IAAI,CAACE,UAAL,GAAkB,CAA/B;;IACA,IAAI/P,QAAQ,KAAK,QAAjB,EAA2B;MACzB/K,MAAM,IAAI+P,OAAO,CAAC5hB,MAAlB;;MACA,IAAI/U,OAAO,CAACwnB,KAAK,CAACmE,IAAP,CAAX,EAAyB;QACvB/E,MAAM,IAAI4a,IAAI,CAACE,UAAL,IAAmBla,KAAK,CAACmE,IAAN,CAAWze,MAAX,GAAoB,CAAvC,CAAV;MACD;IACF,CALD,MAKO;MACL0Z,MAAM,IAAI+P,OAAO,CAAC9hB,GAAlB;IACD;;IACD,MAAM;MAACktB,MAAD;MAASC,MAAT;MAAiBlY,QAAjB;MAA2BpC;IAA3B,IAAuCoa,SAAS,CAAC,IAAD,EAAOlb,MAAP,EAAe+K,QAAf,EAAyB6M,KAAzB,CAAtD;IACAp5B,UAAU,CAACgU,GAAD,EAAMoO,KAAK,CAACmE,IAAZ,EAAkB,CAAlB,EAAqB,CAArB,EAAwB6V,IAAxB,EAA8B;MACtC5hC,KAAK,EAAE4nB,KAAK,CAAC5nB,KADyB;MAEtCkqB,QAFsC;MAGtCpC,QAHsC;MAItCmiB,SAAS,EAAEhI,UAAU,CAACrD,KAAD,EAAQ7M,QAAR,EAAkBnd,OAAlB,CAJiB;MAKtCw1B,YAAY,EAAE,QALwB;MAMtCM,WAAW,EAAE,CAACvI,MAAD,EAASC,MAAT;IANyB,CAA9B,CAAV;EAQD;;EACD70B,IAAI,CAACwR,SAAD,EAAY;IACd,MAAMlS,EAAE,GAAG,IAAX;;IACA,IAAI,CAACA,EAAE,CAACk5B,UAAH,EAAL,EAAsB;MACpB;IACD;;IACDl5B,EAAE,CAAC+9B,cAAH;IACA/9B,EAAE,CAACo+B,QAAH,CAAYlsB,SAAZ;IACAlS,EAAE,CAACi/B,SAAH;IACAj/B,EAAE,CAACg/B,UAAH,CAAc9sB,SAAd;EACD;;EACDkY,OAAO,GAAG;IACR,MAAMpqB,EAAE,GAAG,IAAX;IACA,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;IACA,MAAMq4B,EAAE,GAAGp3B,IAAI,CAACgO,KAAL,IAAchO,IAAI,CAACgO,KAAL,CAAWxf,CAAzB,IAA8B,CAAzC;IACA,MAAM6oC,EAAE,GAAGr3B,IAAI,CAACsS,IAAL,IAAatS,IAAI,CAACsS,IAAL,CAAU9jB,CAAvB,IAA4B,CAAvC;;IACA,IAAI,CAAC0J,EAAE,CAACk5B,UAAH,EAAD,IAAoBgG,EAAE,KAAKC,EAA3B,IAAiCn/B,EAAE,CAACU,IAAH,KAAY80B,KAAK,CAACxgB,SAAN,CAAgBtU,IAAjE,EAAuE;MACrE,OAAO,CAAC;QACNpK,CAAC,EAAE4oC,EADG;;QAENx+B,IAAI,CAACwR,SAAD,EAAY;UACdlS,EAAE,CAACU,IAAH,CAAQwR,SAAR;QACD;;MAJK,CAAD,CAAP;IAMD;;IACD,OAAO,CAAC;MACN5b,CAAC,EAAE6oC,EADG;;MAENz+B,IAAI,CAACwR,SAAD,EAAY;QACdlS,EAAE,CAAC+9B,cAAH;QACA/9B,EAAE,CAACo+B,QAAH,CAAYlsB,SAAZ;QACAlS,EAAE,CAACi/B,SAAH;MACD;;IANK,CAAD,EAOJ;MACD3oC,CAAC,EAAE4oC,EADF;;MAEDx+B,IAAI,CAACwR,SAAD,EAAY;QACdlS,EAAE,CAACg/B,UAAH,CAAc9sB,SAAd;MACD;;IAJA,CAPI,CAAP;EAaD;;EACDmD,uBAAuB,CAACjW,IAAD,EAAO;IAC5B,MAAMY,EAAE,GAAG,IAAX;IACA,MAAMoV,KAAK,GAAGpV,EAAE,CAACf,KAAH,CAASulB,4BAAT,EAAd;IACA,MAAM4a,MAAM,GAAGp/B,EAAE,CAACoL,IAAH,GAAU,QAAzB;IACA,MAAMooB,MAAM,GAAG,EAAf;IACA,IAAIpgC,CAAJ,EAAOyV,IAAP;;IACA,KAAKzV,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGuM,KAAK,CAAC3U,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2C,EAAEzV,CAA7C,EAAgD;MAC9C,MAAMuW,IAAI,GAAGyL,KAAK,CAAChiB,CAAD,CAAlB;;MACA,IAAIuW,IAAI,CAACy1B,MAAD,CAAJ,KAAiBp/B,EAAE,CAACgK,EAApB,KAA2B,CAAC5K,IAAD,IAASuK,IAAI,CAACvK,IAAL,KAAcA,IAAlD,CAAJ,EAA6D;QAC3Do0B,MAAM,CAAC/xB,IAAP,CAAYkI,IAAZ;MACD;IACF;;IACD,OAAO6pB,MAAP;EACD;;EACDwH,uBAAuB,CAAClyB,KAAD,EAAQ;IAC7B,MAAMhB,IAAI,GAAG,KAAKjB,OAAL,CAAaiP,KAAb,CAAmBimB,UAAnB,CAA8B,KAAKlsB,UAAL,CAAgB/G,KAAhB,CAA9B,CAAb;IACA,OAAOjQ,MAAM,CAACiP,IAAI,CAACitB,IAAN,CAAb;EACD;;AA/+ByB;;AAk/B5B,MAAMsK,aAAN,CAAoB;EAClB5gC,WAAW,CAACW,IAAD,EAAOkgC,KAAP,EAAcrb,QAAd,EAAwB;IACjC,KAAK7kB,IAAL,GAAYA,IAAZ;IACA,KAAKkgC,KAAL,GAAaA,KAAb;IACA,KAAKrb,QAAL,GAAgBA,QAAhB;IACA,KAAKzjB,KAAL,GAAa2E,MAAM,CAAC0G,MAAP,CAAc,IAAd,CAAb;EACD;;EACD0zB,SAAS,CAACngC,IAAD,EAAO;IACd,OAAO+F,MAAM,CAAC6P,SAAP,CAAiBwqB,aAAjB,CAA+Bv/B,IAA/B,CAAoC,KAAKb,IAAL,CAAU4V,SAA9C,EAAyD5V,IAAI,CAAC4V,SAA9D,CAAP;EACD;;EACDyqB,QAAQ,CAAC9+B,IAAD,EAAO;IACb,MAAMX,EAAE,GAAG,IAAX;IACA,MAAM0/B,KAAK,GAAGv6B,MAAM,CAACw6B,cAAP,CAAsBh/B,IAAtB,CAAd;IACA,IAAIi/B,WAAJ;;IACA,IAAIC,iBAAiB,CAACH,KAAD,CAArB,EAA8B;MAC5BE,WAAW,GAAG5/B,EAAE,CAACy/B,QAAH,CAAYC,KAAZ,CAAd;IACD;;IACD,MAAMl/B,KAAK,GAAGR,EAAE,CAACQ,KAAjB;IACA,MAAMwJ,EAAE,GAAGrJ,IAAI,CAACqJ,EAAhB;IACA,MAAMs1B,KAAK,GAAGt/B,EAAE,CAACs/B,KAAH,GAAW,GAAX,GAAiBt1B,EAA/B;;IACA,IAAI,CAACA,EAAL,EAAS;MACP,MAAM,IAAIsZ,KAAJ,CAAU,6BAA6B3iB,IAAvC,CAAN;IACD;;IACD,IAAIqJ,EAAE,IAAIxJ,KAAV,EAAiB;MACf,OAAO8+B,KAAP;IACD;;IACD9+B,KAAK,CAACwJ,EAAD,CAAL,GAAYrJ,IAAZ;IACAm/B,gBAAgB,CAACn/B,IAAD,EAAO2+B,KAAP,EAAcM,WAAd,CAAhB;;IACA,IAAI5/B,EAAE,CAACikB,QAAP,EAAiB;MACfxwB,QAAQ,CAACwwB,QAAT,CAAkBtjB,IAAI,CAACqJ,EAAvB,EAA2BrJ,IAAI,CAACxH,SAAhC;IACD;;IACD,OAAOmmC,KAAP;EACD;;EACDp+B,GAAG,CAAC8I,EAAD,EAAK;IACN,OAAO,KAAKxJ,KAAL,CAAWwJ,EAAX,CAAP;EACD;;EACD+1B,UAAU,CAACp/B,IAAD,EAAO;IACf,MAAMH,KAAK,GAAG,KAAKA,KAAnB;IACA,MAAMwJ,EAAE,GAAGrJ,IAAI,CAACqJ,EAAhB;IACA,MAAMs1B,KAAK,GAAG,KAAKA,KAAnB;;IACA,IAAIt1B,EAAE,IAAIxJ,KAAV,EAAiB;MACf,OAAOA,KAAK,CAACwJ,EAAD,CAAZ;IACD;;IACD,IAAIs1B,KAAK,IAAIt1B,EAAE,IAAIvW,QAAQ,CAAC6rC,KAAD,CAA3B,EAAoC;MAClC,OAAO7rC,QAAQ,CAAC6rC,KAAD,CAAR,CAAgBt1B,EAAhB,CAAP;;MACA,IAAI,KAAKia,QAAT,EAAmB;QACjB,OAAO9qB,SAAS,CAAC6Q,EAAD,CAAhB;MACD;IACF;EACF;;AAjDiB;;AAmDpB,SAAS81B,gBAAT,CAA0Bn/B,IAA1B,EAAgC2+B,KAAhC,EAAuCM,WAAvC,EAAoD;EAClD,MAAMI,YAAY,GAAG3mC,KAAK,CAAC8L,MAAM,CAAC0G,MAAP,CAAc,IAAd,CAAD,EAAsB,CAC9C+zB,WAAW,GAAGnsC,QAAQ,CAACyN,GAAT,CAAa0+B,WAAb,CAAH,GAA+B,EADI,EAE9CnsC,QAAQ,CAACyN,GAAT,CAAao+B,KAAb,CAF8C,EAG9C3+B,IAAI,CAAClN,QAHyC,CAAtB,CAA1B;EAKAA,QAAQ,CAAC4N,GAAT,CAAai+B,KAAb,EAAoBU,YAApB;;EACA,IAAIr/B,IAAI,CAACkvB,aAAT,EAAwB;IACtBoQ,aAAa,CAACX,KAAD,EAAQ3+B,IAAI,CAACkvB,aAAb,CAAb;EACD;;EACD,IAAIlvB,IAAI,CAAClH,WAAT,EAAsB;IACpBhG,QAAQ,CAAC6R,QAAT,CAAkBg6B,KAAlB,EAAyB3+B,IAAI,CAAClH,WAA9B;EACD;AACF;;AACD,SAASwmC,aAAT,CAAuBX,KAAvB,EAA8BY,MAA9B,EAAsC;EACpC/6B,MAAM,CAACC,IAAP,CAAY86B,MAAZ,EAAoBzgC,OAApB,CAA4B0gC,QAAQ,IAAI;IACtC,MAAMC,aAAa,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAtB;IACA,MAAMC,UAAU,GAAGF,aAAa,CAACr/B,GAAd,EAAnB;IACA,MAAMw/B,WAAW,GAAG,CAACjB,KAAD,EAAQhqB,MAAR,CAAe8qB,aAAf,EAA8BI,IAA9B,CAAmC,GAAnC,CAApB;IACA,MAAMC,KAAK,GAAGP,MAAM,CAACC,QAAD,CAAN,CAAiBE,KAAjB,CAAuB,GAAvB,CAAd;IACA,MAAMK,UAAU,GAAGD,KAAK,CAAC1/B,GAAN,EAAnB;IACA,MAAM4/B,WAAW,GAAGF,KAAK,CAACD,IAAN,CAAW,GAAX,CAApB;IACA/sC,QAAQ,CAACw+B,KAAT,CAAesO,WAAf,EAA4BD,UAA5B,EAAwCK,WAAxC,EAAqDD,UAArD;EACD,CARD;AASD;;AACD,SAASb,iBAAT,CAA2BH,KAA3B,EAAkC;EAChC,OAAO,QAAQA,KAAR,IAAiB,cAAcA,KAAtC;AACD;;AAED,MAAMkB,QAAN,CAAe;EACbniC,WAAW,GAAG;IACZ,KAAK0kB,WAAL,GAAmB,IAAIkc,aAAJ,CAAkB5yB,iBAAlB,EAAqC,UAArC,EAAiD,IAAjD,CAAnB;IACA,KAAKuF,QAAL,GAAgB,IAAIqtB,aAAJ,CAAkB9P,OAAlB,EAA2B,UAA3B,CAAhB;IACA,KAAK1U,OAAL,GAAe,IAAIwkB,aAAJ,CAAkBl6B,MAAlB,EAA0B,SAA1B,CAAf;IACA,KAAKqG,MAAL,GAAc,IAAI6zB,aAAJ,CAAkB7J,KAAlB,EAAyB,QAAzB,CAAd;IACA,KAAKqL,gBAAL,GAAwB,CAAC,KAAK1d,WAAN,EAAmB,KAAK3X,MAAxB,EAAgC,KAAKwG,QAArC,CAAxB;EACD;;EACDtQ,GAAG,GAAU;IAAA,kCAANotB,IAAM;MAANA,IAAM;IAAA;;IACX,KAAKgS,KAAL,CAAW,UAAX,EAAuBhS,IAAvB;EACD;;EACD3sB,MAAM,GAAU;IAAA,mCAAN2sB,IAAM;MAANA,IAAM;IAAA;;IACd,KAAKgS,KAAL,CAAW,YAAX,EAAyBhS,IAAzB;EACD;;EACDiS,cAAc,GAAU;IAAA,mCAANjS,IAAM;MAANA,IAAM;IAAA;;IACtB,KAAKgS,KAAL,CAAW,UAAX,EAAuBhS,IAAvB,EAA6B,KAAK3L,WAAlC;EACD;;EACDzV,WAAW,GAAU;IAAA,mCAANohB,IAAM;MAANA,IAAM;IAAA;;IACnB,KAAKgS,KAAL,CAAW,UAAX,EAAuBhS,IAAvB,EAA6B,KAAK9c,QAAlC;EACD;;EACDgvB,UAAU,GAAU;IAAA,mCAANlS,IAAM;MAANA,IAAM;IAAA;;IAClB,KAAKgS,KAAL,CAAW,UAAX,EAAuBhS,IAAvB,EAA6B,KAAKjU,OAAlC;EACD;;EACDomB,SAAS,GAAU;IAAA,mCAANnS,IAAM;MAANA,IAAM;IAAA;;IACjB,KAAKgS,KAAL,CAAW,UAAX,EAAuBhS,IAAvB,EAA6B,KAAKtjB,MAAlC;EACD;;EACD01B,aAAa,CAACl3B,EAAD,EAAK;IAChB,OAAO,KAAKm3B,IAAL,CAAUn3B,EAAV,EAAc,KAAKmZ,WAAnB,EAAgC,YAAhC,CAAP;EACD;;EACDie,UAAU,CAACp3B,EAAD,EAAK;IACb,OAAO,KAAKm3B,IAAL,CAAUn3B,EAAV,EAAc,KAAKgI,QAAnB,EAA6B,SAA7B,CAAP;EACD;;EACDqvB,SAAS,CAACr3B,EAAD,EAAK;IACZ,OAAO,KAAKm3B,IAAL,CAAUn3B,EAAV,EAAc,KAAK6Q,OAAnB,EAA4B,QAA5B,CAAP;EACD;;EACDymB,QAAQ,CAACt3B,EAAD,EAAK;IACX,OAAO,KAAKm3B,IAAL,CAAUn3B,EAAV,EAAc,KAAKwB,MAAnB,EAA2B,OAA3B,CAAP;EACD;;EACD+1B,iBAAiB,GAAU;IAAA,mCAANzS,IAAM;MAANA,IAAM;IAAA;;IACzB,KAAKgS,KAAL,CAAW,YAAX,EAAyBhS,IAAzB,EAA+B,KAAK3L,WAApC;EACD;;EACDqe,cAAc,GAAU;IAAA,mCAAN1S,IAAM;MAANA,IAAM;IAAA;;IACtB,KAAKgS,KAAL,CAAW,YAAX,EAAyBhS,IAAzB,EAA+B,KAAK9c,QAApC;EACD;;EACDyvB,aAAa,GAAU;IAAA,mCAAN3S,IAAM;MAANA,IAAM;IAAA;;IACrB,KAAKgS,KAAL,CAAW,YAAX,EAAyBhS,IAAzB,EAA+B,KAAKjU,OAApC;EACD;;EACD6mB,YAAY,GAAU;IAAA,oCAAN5S,IAAM;MAANA,IAAM;IAAA;;IACpB,KAAKgS,KAAL,CAAW,YAAX,EAAyBhS,IAAzB,EAA+B,KAAKtjB,MAApC;EACD;;EACDs1B,KAAK,CAAC/7B,MAAD,EAAS+pB,IAAT,EAAe6S,aAAf,EAA8B;IACjC,MAAM3hC,EAAE,GAAG,IAAX;IACA,CAAC,GAAG8uB,IAAJ,EAAUrvB,OAAV,CAAkBmiC,GAAG,IAAI;MACvB,MAAMC,GAAG,GAAGF,aAAa,IAAI3hC,EAAE,CAAC8hC,mBAAH,CAAuBF,GAAvB,CAA7B;;MACA,IAAID,aAAa,IAAIE,GAAG,CAACtC,SAAJ,CAAcqC,GAAd,CAAjB,IAAwCC,GAAG,KAAK7hC,EAAE,CAAC6a,OAAX,IAAsB+mB,GAAG,CAAC53B,EAAtE,EAA2E;QACzEhK,EAAE,CAAC+hC,KAAH,CAASh9B,MAAT,EAAiB88B,GAAjB,EAAsBD,GAAtB;MACD,CAFD,MAEO;QACL7qC,IAAI,CAAC6qC,GAAD,EAAMjhC,IAAI,IAAI;UAChB,MAAMqhC,OAAO,GAAGL,aAAa,IAAI3hC,EAAE,CAAC8hC,mBAAH,CAAuBnhC,IAAvB,CAAjC;;UACAX,EAAE,CAAC+hC,KAAH,CAASh9B,MAAT,EAAiBi9B,OAAjB,EAA0BrhC,IAA1B;QACD,CAHG,CAAJ;MAID;IACF,CAVD;EAWD;;EACDohC,KAAK,CAACh9B,MAAD,EAASk9B,QAAT,EAAmBC,SAAnB,EAA8B;IACjC,MAAMC,WAAW,GAAG5oC,WAAW,CAACwL,MAAD,CAA/B;;IACA9M,QAAQ,CAACiqC,SAAS,CAAC,WAAWC,WAAZ,CAAV,EAAoC,EAApC,EAAwCD,SAAxC,CAAR;IACAD,QAAQ,CAACl9B,MAAD,CAAR,CAAiBm9B,SAAjB;IACAjqC,QAAQ,CAACiqC,SAAS,CAAC,UAAUC,WAAX,CAAV,EAAmC,EAAnC,EAAuCD,SAAvC,CAAR;EACD;;EACDJ,mBAAmB,CAAC1iC,IAAD,EAAO;IACxB,KAAK,IAAIhM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKytC,gBAAL,CAAsBpgC,MAA1C,EAAkDrN,CAAC,EAAnD,EAAuD;MACrD,MAAMyuC,GAAG,GAAG,KAAKhB,gBAAL,CAAsBztC,CAAtB,CAAZ;;MACA,IAAIyuC,GAAG,CAACtC,SAAJ,CAAcngC,IAAd,CAAJ,EAAyB;QACvB,OAAOyiC,GAAP;MACD;IACF;;IACD,OAAO,KAAKhnB,OAAZ;EACD;;EACDsmB,IAAI,CAACn3B,EAAD,EAAK23B,aAAL,EAAoBviC,IAApB,EAA0B;IAC5B,MAAMuB,IAAI,GAAGghC,aAAa,CAACzgC,GAAd,CAAkB8I,EAAlB,CAAb;;IACA,IAAIrJ,IAAI,KAAK5B,SAAb,EAAwB;MACtB,MAAM,IAAIukB,KAAJ,CAAU,MAAMtZ,EAAN,GAAW,wBAAX,GAAsC5K,IAAtC,GAA6C,GAAvD,CAAN;IACD;;IACD,OAAOuB,IAAP;EACD;;AArFY;;AAuFf,IAAIshC,QAAQ,GAAG,IAAIrB,QAAJ,EAAf;;AAEA,MAAMwB,aAAN,CAAoB;EAClB3jC,WAAW,GAAG;IACZ,KAAK4jC,KAAL,GAAa,EAAb;EACD;;EACDC,MAAM,CAACrjC,KAAD,EAAQsjC,IAAR,EAAczT,IAAd,EAAoB;IACxB,MAAM9uB,EAAE,GAAG,IAAX;;IACA,IAAIuiC,IAAI,KAAK,YAAb,EAA2B;MACzBviC,EAAE,CAACqiC,KAAH,GAAWriC,EAAE,CAACwiC,kBAAH,CAAsBvjC,KAAtB,EAA6B,IAA7B,CAAX;;MACAe,EAAE,CAAChB,OAAH,CAAWgB,EAAE,CAACqiC,KAAd,EAAqBpjC,KAArB,EAA4B,SAA5B;IACD;;IACD,MAAMxF,WAAW,GAAGuG,EAAE,CAAC/F,YAAH,CAAgBgF,KAAhB,CAApB;;IACA,MAAMu0B,MAAM,GAAGxzB,EAAE,CAAChB,OAAH,CAAWvF,WAAX,EAAwBwF,KAAxB,EAA+BsjC,IAA/B,EAAqCzT,IAArC,CAAf;;IACA,IAAIyT,IAAI,KAAK,SAAb,EAAwB;MACtBviC,EAAE,CAAChB,OAAH,CAAWvF,WAAX,EAAwBwF,KAAxB,EAA+B,MAA/B;;MACAe,EAAE,CAAChB,OAAH,CAAWgB,EAAE,CAACqiC,KAAd,EAAqBpjC,KAArB,EAA4B,WAA5B;IACD;;IACD,OAAOu0B,MAAP;EACD;;EACDx0B,OAAO,CAACvF,WAAD,EAAcwF,KAAd,EAAqBsjC,IAArB,EAA2BzT,IAA3B,EAAiC;IACtCA,IAAI,GAAGA,IAAI,IAAI,EAAf;;IACA,KAAK,MAAM2T,UAAX,IAAyBhpC,WAAzB,EAAsC;MACpC,MAAMipC,MAAM,GAAGD,UAAU,CAACC,MAA1B;MACA,MAAM39B,MAAM,GAAG29B,MAAM,CAACH,IAAD,CAArB;MACA,MAAM7a,MAAM,GAAG,CAACzoB,KAAD,EAAQ6vB,IAAR,EAAc2T,UAAU,CAAC57B,OAAzB,CAAf;;MACA,IAAI5O,QAAQ,CAAC8M,MAAD,EAAS2iB,MAAT,EAAiBgb,MAAjB,CAAR,KAAqC,KAArC,IAA8C5T,IAAI,CAAC6T,UAAvD,EAAmE;QACjE,OAAO,KAAP;MACD;IACF;;IACD,OAAO,IAAP;EACD;;EACDC,UAAU,GAAG;IACX,IAAI,CAACnuC,aAAa,CAAC,KAAKygB,MAAN,CAAlB,EAAiC;MAC/B,KAAK2tB,SAAL,GAAiB,KAAK3tB,MAAtB;MACA,KAAKA,MAAL,GAAcnW,SAAd;IACD;EACF;;EACD9E,YAAY,CAACgF,KAAD,EAAQ;IAClB,IAAI,KAAKiW,MAAT,EAAiB;MACf,OAAO,KAAKA,MAAZ;IACD;;IACD,MAAMzb,WAAW,GAAG,KAAKyb,MAAL,GAAc,KAAKstB,kBAAL,CAAwBvjC,KAAxB,CAAlC;;IACA,KAAK6jC,mBAAL,CAAyB7jC,KAAzB;;IACA,OAAOxF,WAAP;EACD;;EACD+oC,kBAAkB,CAACvjC,KAAD,EAAQyI,GAAR,EAAa;IAC7B,MAAMxB,MAAM,GAAGjH,KAAK,IAAIA,KAAK,CAACiH,MAA9B;IACA,MAAMW,OAAO,GAAGlT,cAAc,CAACuS,MAAM,CAACW,OAAP,IAAkBX,MAAM,CAACW,OAAP,CAAegU,OAAlC,EAA2C,EAA3C,CAA9B;IACA,MAAMA,OAAO,GAAGkoB,UAAU,CAAC78B,MAAD,CAA1B;IACA,OAAOW,OAAO,KAAK,KAAZ,IAAqB,CAACa,GAAtB,GAA4B,EAA5B,GAAiCs7B,iBAAiB,CAAC/jC,KAAD,EAAQ4b,OAAR,EAAiBhU,OAAjB,EAA0Ba,GAA1B,CAAzD;EACD;;EACDo7B,mBAAmB,CAAC7jC,KAAD,EAAQ;IACzB,MAAMgkC,mBAAmB,GAAG,KAAKJ,SAAL,IAAkB,EAA9C;IACA,MAAMppC,WAAW,GAAG,KAAKyb,MAAzB;;IACA,MAAM2O,IAAI,GAAG,CAAC/wB,CAAD,EAAIQ,CAAJ,KAAUR,CAAC,CAAC2Y,MAAF,CAASvV,CAAC,IAAI,CAAC5C,CAAC,CAAC4vC,IAAF,CAAO9sC,CAAC,IAAIF,CAAC,CAACwsC,MAAF,CAAS14B,EAAT,KAAgB5T,CAAC,CAACssC,MAAF,CAAS14B,EAArC,CAAf,CAAvB;;IACA,KAAKhL,OAAL,CAAa6kB,IAAI,CAACof,mBAAD,EAAsBxpC,WAAtB,CAAjB,EAAqDwF,KAArD,EAA4D,MAA5D;;IACA,KAAKD,OAAL,CAAa6kB,IAAI,CAACpqB,WAAD,EAAcwpC,mBAAd,CAAjB,EAAqDhkC,KAArD,EAA4D,OAA5D;EACD;;AAxDiB;;AA0DpB,SAAS8jC,UAAT,CAAoB78B,MAApB,EAA4B;EAC1B,MAAM2U,OAAO,GAAG,EAAhB;EACA,MAAMzV,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY68B,QAAQ,CAACpnB,OAAT,CAAiBra,KAA7B,CAAb;;EACA,KAAK,IAAIpN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgS,IAAI,CAAC3E,MAAzB,EAAiCrN,CAAC,EAAlC,EAAsC;IACpCynB,OAAO,CAACpZ,IAAR,CAAawgC,QAAQ,CAACZ,SAAT,CAAmBj8B,IAAI,CAAChS,CAAD,CAAvB,CAAb;EACD;;EACD,MAAM+vC,KAAK,GAAGj9B,MAAM,CAAC2U,OAAP,IAAkB,EAAhC;;EACA,KAAK,IAAIznB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+vC,KAAK,CAAC1iC,MAA1B,EAAkCrN,CAAC,EAAnC,EAAuC;IACrC,MAAMsvC,MAAM,GAAGS,KAAK,CAAC/vC,CAAD,CAApB;;IACA,IAAIynB,OAAO,CAAC9B,OAAR,CAAgB2pB,MAAhB,MAA4B,CAAC,CAAjC,EAAoC;MAClC7nB,OAAO,CAACpZ,IAAR,CAAaihC,MAAb;IACD;EACF;;EACD,OAAO7nB,OAAP;AACD;;AACD,SAASuoB,OAAT,CAAiBv8B,OAAjB,EAA0Ba,GAA1B,EAA+B;EAC7B,IAAI,CAACA,GAAD,IAAQb,OAAO,KAAK,KAAxB,EAA+B;IAC7B,OAAO,IAAP;EACD;;EACD,IAAIA,OAAO,KAAK,IAAhB,EAAsB;IACpB,OAAO,EAAP;EACD;;EACD,OAAOA,OAAP;AACD;;AACD,SAASm8B,iBAAT,CAA2B/jC,KAA3B,EAAkC4b,OAAlC,EAA2ChU,OAA3C,EAAoDa,GAApD,EAAyD;EACvD,MAAM8rB,MAAM,GAAG,EAAf;EACA,MAAMlhB,OAAO,GAAGrT,KAAK,CAAC4Q,UAAN,EAAhB;;EACA,KAAK,IAAIzc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGynB,OAAO,CAACpa,MAA5B,EAAoCrN,CAAC,EAArC,EAAyC;IACvC,MAAMsvC,MAAM,GAAG7nB,OAAO,CAACznB,CAAD,CAAtB;IACA,MAAM4W,EAAE,GAAG04B,MAAM,CAAC14B,EAAlB;IACA,MAAMlC,IAAI,GAAGs7B,OAAO,CAACv8B,OAAO,CAACmD,EAAD,CAAR,EAActC,GAAd,CAApB;;IACA,IAAII,IAAI,KAAK,IAAb,EAAmB;MACjB;IACD;;IACD0rB,MAAM,CAAC/xB,IAAP,CAAY;MACVihC,MADU;MAEV77B,OAAO,EAAEw8B,UAAU,CAACpkC,KAAK,CAACiH,MAAP,EAAew8B,MAAf,EAAuB56B,IAAvB,EAA6BwK,OAA7B;IAFT,CAAZ;EAID;;EACD,OAAOkhB,MAAP;AACD;;AACD,SAAS6P,UAAT,CAAoBn9B,MAApB,EAA4Bw8B,MAA5B,EAAoC56B,IAApC,EAA0CwK,OAA1C,EAAmD;EACjD,MAAMlN,IAAI,GAAGc,MAAM,CAACo9B,eAAP,CAAuBZ,MAAvB,CAAb;EACA,MAAMhzB,MAAM,GAAGxJ,MAAM,CAACyJ,eAAP,CAAuB7H,IAAvB,EAA6B1C,IAA7B,CAAf;EACA,OAAOc,MAAM,CAAC0J,cAAP,CAAsBF,MAAtB,EAA8B4C,OAA9B,EAAuC,CAAC,EAAD,CAAvC,EAA6C;IAACixB,UAAU,EAAE,KAAb;IAAoBC,SAAS,EAAE,KAA/B;IAAsCC,OAAO,EAAE;EAA/C,CAA7C,CAAP;AACD;;AAED,SAASC,YAAT,CAAsBtkC,IAAtB,EAA4ByH,OAA5B,EAAqC;EACnC,MAAM88B,eAAe,GAAGlwC,QAAQ,CAACkb,QAAT,CAAkBvP,IAAlB,KAA2B,EAAnD;EACA,MAAMwkC,cAAc,GAAG,CAAC/8B,OAAO,CAAC8H,QAAR,IAAoB,EAArB,EAAyBvP,IAAzB,KAAkC,EAAzD;EACA,OAAOwkC,cAAc,CAACx1B,SAAf,IAA4BvH,OAAO,CAACuH,SAApC,IAAiDu1B,eAAe,CAACv1B,SAAjE,IAA8E,GAArF;AACD;;AACD,SAASy1B,yBAAT,CAAmC75B,EAAnC,EAAuCoE,SAAvC,EAAkD;EAChD,IAAIhD,IAAI,GAAGpB,EAAX;;EACA,IAAIA,EAAE,KAAK,SAAX,EAAsB;IACpBoB,IAAI,GAAGgD,SAAP;EACD,CAFD,MAEO,IAAIpE,EAAE,KAAK,SAAX,EAAsB;IAC3BoB,IAAI,GAAGgD,SAAS,KAAK,GAAd,GAAoB,GAApB,GAA0B,GAAjC;EACD;;EACD,OAAOhD,IAAP;AACD;;AACD,SAAS04B,yBAAT,CAAmC14B,IAAnC,EAAyCgD,SAAzC,EAAoD;EAClD,OAAOhD,IAAI,KAAKgD,SAAT,GAAqB,SAArB,GAAiC,SAAxC;AACD;;AACD,SAAS21B,gBAAT,CAA0B7e,QAA1B,EAAoC;EAClC,IAAIA,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAvC,EAAiD;IAC/C,OAAO,GAAP;EACD;;EACD,IAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;IAC/C,OAAO,GAAP;EACD;AACF;;AACD,SAAS8e,aAAT,CAAuBh6B,EAAvB,EAA2Bi6B,YAA3B,EAAyC;EACvC,IAAIj6B,EAAE,KAAK,GAAP,IAAcA,EAAE,KAAK,GAAzB,EAA8B;IAC5B,OAAOA,EAAP;EACD;;EACD,OAAOi6B,YAAY,CAAC74B,IAAb,IAAqB24B,gBAAgB,CAACE,YAAY,CAAC/e,QAAd,CAArC,IAAgElb,EAAE,CAAC3C,MAAH,CAAU,CAAV,EAAa68B,WAAb,EAAvE;AACD;;AACD,SAASC,gBAAT,CAA0Bj+B,MAA1B,EAAkCW,OAAlC,EAA2C;EACzC,MAAMu9B,aAAa,GAAGjrC,SAAS,CAAC+M,MAAM,CAAC9G,IAAR,CAAT,IAA0B;IAACoM,MAAM,EAAE;EAAT,CAAhD;EACA,MAAM64B,YAAY,GAAGx9B,OAAO,CAAC2E,MAAR,IAAkB,EAAvC;EACA,MAAM84B,cAAc,GAAGZ,YAAY,CAACx9B,MAAM,CAAC9G,IAAR,EAAcyH,OAAd,CAAnC;EACA,MAAM09B,QAAQ,GAAGp/B,MAAM,CAAC0G,MAAP,CAAc,IAAd,CAAjB;EACA,MAAML,MAAM,GAAGrG,MAAM,CAAC0G,MAAP,CAAc,IAAd,CAAf;EACA1G,MAAM,CAACC,IAAP,CAAYi/B,YAAZ,EAA0B5kC,OAA1B,CAAkCuK,EAAE,IAAI;IACtC,MAAMw6B,SAAS,GAAGH,YAAY,CAACr6B,EAAD,CAA9B;IACA,MAAMoB,IAAI,GAAG44B,aAAa,CAACh6B,EAAD,EAAKw6B,SAAL,CAA1B;IACA,MAAMC,SAAS,GAAGX,yBAAyB,CAAC14B,IAAD,EAAOk5B,cAAP,CAA3C;IACA,MAAMI,mBAAmB,GAAGN,aAAa,CAAC54B,MAAd,IAAwB,EAApD;IACA+4B,QAAQ,CAACn5B,IAAD,CAAR,GAAiBm5B,QAAQ,CAACn5B,IAAD,CAAR,IAAkBpB,EAAnC;IACAwB,MAAM,CAACxB,EAAD,CAAN,GAAa7P,OAAO,CAACgL,MAAM,CAAC0G,MAAP,CAAc,IAAd,CAAD,EAAsB,CAAC;MAACT;IAAD,CAAD,EAASo5B,SAAT,EAAoBE,mBAAmB,CAACt5B,IAAD,CAAvC,EAA+Cs5B,mBAAmB,CAACD,SAAD,CAAlE,CAAtB,CAApB;EACD,CAPD;EAQAv+B,MAAM,CAACqD,IAAP,CAAYoF,QAAZ,CAAqBlP,OAArB,CAA6BqM,OAAO,IAAI;IACtC,MAAM1M,IAAI,GAAG0M,OAAO,CAAC1M,IAAR,IAAgB8G,MAAM,CAAC9G,IAApC;IACA,MAAMgP,SAAS,GAAGtC,OAAO,CAACsC,SAAR,IAAqBs1B,YAAY,CAACtkC,IAAD,EAAOyH,OAAP,CAAnD;IACA,MAAM88B,eAAe,GAAGxqC,SAAS,CAACiG,IAAD,CAAT,IAAmB,EAA3C;IACA,MAAMslC,mBAAmB,GAAGf,eAAe,CAACn4B,MAAhB,IAA0B,EAAtD;IACArG,MAAM,CAACC,IAAP,CAAYs/B,mBAAZ,EAAiCjlC,OAAjC,CAAyCklC,SAAS,IAAI;MACpD,MAAMv5B,IAAI,GAAGy4B,yBAAyB,CAACc,SAAD,EAAYv2B,SAAZ,CAAtC;MACA,MAAMpE,EAAE,GAAG8B,OAAO,CAACV,IAAI,GAAG,QAAR,CAAP,IAA4Bm5B,QAAQ,CAACn5B,IAAD,CAApC,IAA8CA,IAAzD;MACAI,MAAM,CAACxB,EAAD,CAAN,GAAawB,MAAM,CAACxB,EAAD,CAAN,IAAc7E,MAAM,CAAC0G,MAAP,CAAc,IAAd,CAA3B;MACA1R,OAAO,CAACqR,MAAM,CAACxB,EAAD,CAAP,EAAa,CAAC;QAACoB;MAAD,CAAD,EAASi5B,YAAY,CAACr6B,EAAD,CAArB,EAA2B06B,mBAAmB,CAACC,SAAD,CAA9C,CAAb,CAAP;IACD,CALD;EAMD,CAXD;EAYAx/B,MAAM,CAACC,IAAP,CAAYoG,MAAZ,EAAoB/L,OAApB,CAA4B+G,GAAG,IAAI;IACjC,MAAMoB,KAAK,GAAG4D,MAAM,CAAChF,GAAD,CAApB;IACArM,OAAO,CAACyN,KAAD,EAAQ,CAACnU,QAAQ,CAAC+X,MAAT,CAAgB5D,KAAK,CAACxI,IAAtB,CAAD,EAA8B3L,QAAQ,CAACmU,KAAvC,CAAR,CAAP;EACD,CAHD;EAIA,OAAO4D,MAAP;AACD;;AACD,SAASo5B,WAAT,CAAqB1+B,MAArB,EAA6B;EAC3B,MAAMW,OAAO,GAAGX,MAAM,CAACW,OAAP,KAAmBX,MAAM,CAACW,OAAP,GAAiB,EAApC,CAAhB;EACAA,OAAO,CAACgU,OAAR,GAAkBlnB,cAAc,CAACkT,OAAO,CAACgU,OAAT,EAAkB,EAAlB,CAAhC;EACAhU,OAAO,CAAC2E,MAAR,GAAiB24B,gBAAgB,CAACj+B,MAAD,EAASW,OAAT,CAAjC;AACD;;AACD,SAASg+B,UAAT,CAAoB3+B,MAApB,EAA4B;EAC1BA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EACA,MAAMqD,IAAI,GAAGrD,MAAM,CAACqD,IAAP,GAAcrD,MAAM,CAACqD,IAAP,IAAe;IAACoF,QAAQ,EAAE,EAAX;IAAe6B,MAAM,EAAE;EAAvB,CAA1C;EACAjH,IAAI,CAACoF,QAAL,GAAgBpF,IAAI,CAACoF,QAAL,IAAiB,EAAjC;EACApF,IAAI,CAACiH,MAAL,GAAcjH,IAAI,CAACiH,MAAL,IAAe,EAA7B;EACAo0B,WAAW,CAAC1+B,MAAD,CAAX;EACA,OAAOA,MAAP;AACD;;AACD,MAAM4+B,QAAQ,GAAG,IAAIlmC,GAAJ,EAAjB;AACA,MAAMmmC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;;AACA,SAASC,UAAT,CAAoBtyB,QAApB,EAA8BuyB,QAA9B,EAAwC;EACtC,IAAI9/B,IAAI,GAAG0/B,QAAQ,CAAC5jC,GAAT,CAAayR,QAAb,CAAX;;EACA,IAAI,CAACvN,IAAL,EAAW;IACTA,IAAI,GAAG8/B,QAAQ,EAAf;IACAJ,QAAQ,CAACzjC,GAAT,CAAasR,QAAb,EAAuBvN,IAAvB;IACA2/B,UAAU,CAACrjC,GAAX,CAAe0D,IAAf;EACD;;EACD,OAAOA,IAAP;AACD;;AACD,MAAM+/B,UAAU,GAAG,CAAC9jC,GAAD,EAAMsW,GAAN,EAAWnR,GAAX,KAAmB;EACpC,MAAMsB,IAAI,GAAG7T,gBAAgB,CAAC0jB,GAAD,EAAMnR,GAAN,CAA7B;;EACA,IAAIsB,IAAI,KAAK/I,SAAb,EAAwB;IACtBsC,GAAG,CAACK,GAAJ,CAAQoG,IAAR;EACD;AACF,CALD;;AAMA,MAAMs9B,MAAN,CAAa;EACX3mC,WAAW,CAACyH,MAAD,EAAS;IAClB,KAAKm/B,OAAL,GAAeR,UAAU,CAAC3+B,MAAD,CAAzB;IACA,KAAKo/B,WAAL,GAAmB,IAAI1mC,GAAJ,EAAnB;IACA,KAAK2mC,cAAL,GAAsB,IAAI3mC,GAAJ,EAAtB;EACD;;EACO,IAAJQ,IAAI,GAAG;IACT,OAAO,KAAKimC,OAAL,CAAajmC,IAApB;EACD;;EACO,IAAJA,IAAI,CAACA,IAAD,EAAO;IACb,KAAKimC,OAAL,CAAajmC,IAAb,GAAoBA,IAApB;EACD;;EACO,IAAJmK,IAAI,GAAG;IACT,OAAO,KAAK87B,OAAL,CAAa97B,IAApB;EACD;;EACO,IAAJA,IAAI,CAACA,IAAD,EAAO;IACb,KAAK87B,OAAL,CAAa97B,IAAb,GAAoBA,IAApB;EACD;;EACU,IAAP1C,OAAO,GAAG;IACZ,OAAO,KAAKw+B,OAAL,CAAax+B,OAApB;EACD;;EACU,IAAPA,OAAO,CAACA,OAAD,EAAU;IACnB,KAAKw+B,OAAL,CAAax+B,OAAb,GAAuBA,OAAvB;EACD;;EACU,IAAPgU,OAAO,GAAG;IACZ,OAAO,KAAKwqB,OAAL,CAAaxqB,OAApB;EACD;;EACDvW,MAAM,GAAG;IACP,MAAM4B,MAAM,GAAG,KAAKm/B,OAApB;IACA,KAAKG,UAAL;IACAZ,WAAW,CAAC1+B,MAAD,CAAX;EACD;;EACDs/B,UAAU,GAAG;IACX,KAAKF,WAAL,CAAiBG,KAAjB;;IACA,KAAKF,cAAL,CAAoBE,KAApB;EACD;;EACDh2B,gBAAgB,CAACi2B,WAAD,EAAc;IAC5B,OAAOT,UAAU,CAACS,WAAD,EACf,MAAM,CAAC,CACJ,YAAWA,WAAY,EADnB,EAEL,EAFK,CAAD,CADS,CAAjB;EAKD;;EACDtyB,yBAAyB,CAACsyB,WAAD,EAAcvyB,UAAd,EAA0B;IACjD,OAAO8xB,UAAU,CAAE,GAAES,WAAY,eAAcvyB,UAAW,EAAzC,EACf,MAAM,CACJ,CACG,YAAWuyB,WAAY,gBAAevyB,UAAW,EADpD,EAEG,eAAcA,UAAW,EAF5B,CADI,EAKJ,CACG,YAAWuyB,WAAY,EAD1B,EAEE,EAFF,CALI,CADS,CAAjB;EAWD;;EACD7yB,uBAAuB,CAAC6yB,WAAD,EAAcjzB,WAAd,EAA2B;IAChD,OAAOwyB,UAAU,CAAE,GAAES,WAAY,IAAGjzB,WAAY,EAA/B,EACf,MAAM,CAAC,CACJ,YAAWizB,WAAY,aAAYjzB,WAAY,EAD3C,EAEJ,YAAWizB,WAAY,EAFnB,EAGJ,YAAWjzB,WAAY,EAHnB,EAIL,EAJK,CAAD,CADS,CAAjB;EAOD;;EACD6wB,eAAe,CAACZ,MAAD,EAAS;IACtB,MAAM14B,EAAE,GAAG04B,MAAM,CAAC14B,EAAlB;IACA,MAAM5K,IAAI,GAAG,KAAKA,IAAlB;IACA,OAAO6lC,UAAU,CAAE,GAAE7lC,IAAK,WAAU4K,EAAG,EAAtB,EACf,MAAM,CAAC,CACJ,WAAUA,EAAG,EADT,EAEL,IAAG04B,MAAM,CAACiD,sBAAP,IAAiC,EAApC,CAFK,CAAD,CADS,CAAjB;EAKD;;EACDC,aAAa,CAACC,SAAD,EAAYC,UAAZ,EAAwB;IACnC,MAAMR,WAAW,GAAG,KAAKA,WAAzB;;IACA,IAAI5yB,KAAK,GAAG4yB,WAAW,CAACpkC,GAAZ,CAAgB2kC,SAAhB,CAAZ;;IACA,IAAI,CAACnzB,KAAD,IAAUozB,UAAd,EAA0B;MACxBpzB,KAAK,GAAG,IAAI9T,GAAJ,EAAR;;MACA0mC,WAAW,CAACjkC,GAAZ,CAAgBwkC,SAAhB,EAA2BnzB,KAA3B;IACD;;IACD,OAAOA,KAAP;EACD;;EACD/C,eAAe,CAACk2B,SAAD,EAAYE,QAAZ,EAAsBD,UAAtB,EAAkC;IAC/C,MAAM;MAACj/B,OAAD;MAAUzH;IAAV,IAAkB,IAAxB;;IACA,MAAMsT,KAAK,GAAG,KAAKkzB,aAAL,CAAmBC,SAAnB,EAA8BC,UAA9B,CAAd;;IACA,MAAMv5B,MAAM,GAAGmG,KAAK,CAACxR,GAAN,CAAU6kC,QAAV,CAAf;;IACA,IAAIx5B,MAAJ,EAAY;MACV,OAAOA,MAAP;IACD;;IACD,MAAMmD,MAAM,GAAG,IAAIs1B,GAAJ,EAAf;IACAe,QAAQ,CAACtmC,OAAT,CAAiB2F,IAAI,IAAI;MACvB,IAAIygC,SAAJ,EAAe;QACbn2B,MAAM,CAAChO,GAAP,CAAWmkC,SAAX;QACAzgC,IAAI,CAAC3F,OAAL,CAAa+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAD,EAASm2B,SAAT,EAAoBr/B,GAApB,CAA9B;MACD;;MACDpB,IAAI,CAAC3F,OAAL,CAAa+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAD,EAAS7I,OAAT,EAAkBL,GAAlB,CAA9B;MACApB,IAAI,CAAC3F,OAAL,CAAa+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAD,EAASvW,SAAS,CAACiG,IAAD,CAAT,IAAmB,EAA5B,EAAgCoH,GAAhC,CAA9B;MACApB,IAAI,CAAC3F,OAAL,CAAa+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAD,EAASjc,QAAT,EAAmB+S,GAAnB,CAA9B;MACApB,IAAI,CAAC3F,OAAL,CAAa+G,GAAG,IAAI2+B,UAAU,CAACz1B,MAAD,EAASjW,WAAT,EAAsB+M,GAAtB,CAA9B;IACD,CATD;IAUA,MAAMsgB,KAAK,GAAG,CAAC,GAAGpX,MAAJ,CAAd;;IACA,IAAIq1B,UAAU,CAACpjC,GAAX,CAAeokC,QAAf,CAAJ,EAA8B;MAC5BrzB,KAAK,CAACrR,GAAN,CAAU0kC,QAAV,EAAoBjf,KAApB;IACD;;IACD,OAAOA,KAAP;EACD;;EACDkf,iBAAiB,GAAG;IAClB,MAAM;MAACn/B,OAAD;MAAUzH;IAAV,IAAkB,IAAxB;IACA,OAAO,CACLyH,OADK,EAEL1N,SAAS,CAACiG,IAAD,CAAT,IAAmB,EAFd,EAGL3L,QAAQ,CAACkb,QAAT,CAAkBvP,IAAlB,KAA2B,EAHtB,EAIL;MAACA;IAAD,CAJK,EAKL3L,QALK,EAMLgG,WANK,CAAP;EAQD;;EACDuZ,mBAAmB,CAACtD,MAAD,EAASqD,KAAT,EAAgBT,OAAhB,EAA0C;IAAA,IAAjBQ,QAAiB,uEAAN,CAAC,EAAD,CAAM;IAC3D,MAAM0gB,MAAM,GAAG;MAACxsB,OAAO,EAAE;IAAV,CAAf;IACA,MAAM;MAACi/B,QAAD;MAAWC;IAAX,IAA0BC,WAAW,CAAC,KAAKZ,cAAN,EAAsB71B,MAAtB,EAA8BoD,QAA9B,CAA3C;IACA,IAAIjM,OAAO,GAAGo/B,QAAd;;IACA,IAAIG,WAAW,CAACH,QAAD,EAAWlzB,KAAX,CAAf,EAAkC;MAChCygB,MAAM,CAACxsB,OAAP,GAAiB,KAAjB;MACAsL,OAAO,GAAG3Y,UAAU,CAAC2Y,OAAD,CAAV,GAAsBA,OAAO,EAA7B,GAAkCA,OAA5C;MACA,MAAM+zB,WAAW,GAAG,KAAKz2B,cAAL,CAAoBF,MAApB,EAA4B4C,OAA5B,EAAqC4zB,WAArC,CAApB;MACAr/B,OAAO,GAAGhN,cAAc,CAACosC,QAAD,EAAW3zB,OAAX,EAAoB+zB,WAApB,CAAxB;IACD;;IACD,KAAK,MAAMhjC,IAAX,IAAmB0P,KAAnB,EAA0B;MACxBygB,MAAM,CAACnwB,IAAD,CAAN,GAAewD,OAAO,CAACxD,IAAD,CAAtB;IACD;;IACD,OAAOmwB,MAAP;EACD;;EACD5jB,cAAc,CAACF,MAAD,EAAS4C,OAAT,EAAuD;IAAA,IAArCQ,QAAqC,uEAA1B,CAAC,EAAD,CAA0B;IAAA,IAApBwzB,kBAAoB;IACnE,MAAM;MAACL;IAAD,IAAaE,WAAW,CAAC,KAAKZ,cAAN,EAAsB71B,MAAtB,EAA8BoD,QAA9B,CAA9B;IACA,OAAOzf,QAAQ,CAACif,OAAD,CAAR,GACHzY,cAAc,CAACosC,QAAD,EAAW3zB,OAAX,EAAoBvT,SAApB,EAA+BunC,kBAA/B,CADX,GAEHL,QAFJ;EAGD;;AA1IU;;AA4Ib,SAASE,WAAT,CAAqBI,aAArB,EAAoC72B,MAApC,EAA4CoD,QAA5C,EAAsD;EACpD,IAAIJ,KAAK,GAAG6zB,aAAa,CAACrlC,GAAd,CAAkBwO,MAAlB,CAAZ;;EACA,IAAI,CAACgD,KAAL,EAAY;IACVA,KAAK,GAAG,IAAI9T,GAAJ,EAAR;IACA2nC,aAAa,CAACllC,GAAd,CAAkBqO,MAAlB,EAA0BgD,KAA1B;EACD;;EACD,MAAMC,QAAQ,GAAGG,QAAQ,CAAC0tB,IAAT,EAAjB;EACA,IAAIj0B,MAAM,GAAGmG,KAAK,CAACxR,GAAN,CAAUyR,QAAV,CAAb;;EACA,IAAI,CAACpG,MAAL,EAAa;IACX,MAAM05B,QAAQ,GAAGlsC,eAAe,CAAC2V,MAAD,EAASoD,QAAT,CAAhC;;IACAvG,MAAM,GAAG;MACP05B,QADO;MAEPC,WAAW,EAAEpzB,QAAQ,CAACrH,MAAT,CAAgBjW,CAAC,IAAI,CAACA,CAAC,CAAC0uC,WAAF,GAAgBsC,QAAhB,CAAyB,OAAzB,CAAtB;IAFN,CAAT;IAIA9zB,KAAK,CAACrR,GAAN,CAAUsR,QAAV,EAAoBpG,MAApB;EACD;;EACD,OAAOA,MAAP;AACD;;AACD,SAAS65B,WAAT,CAAqBvX,KAArB,EAA4B9b,KAA5B,EAAmC;EACjC,MAAM;IAAC0zB,YAAD;IAAeC;EAAf,IAA8BzsC,YAAY,CAAC40B,KAAD,CAAhD;;EACA,KAAK,MAAMxrB,IAAX,IAAmB0P,KAAnB,EAA0B;IACxB,IAAK0zB,YAAY,CAACpjC,IAAD,CAAZ,IAAsB1J,UAAU,CAACk1B,KAAK,CAACxrB,IAAD,CAAN,CAAjC,IACEqjC,WAAW,CAACrjC,IAAD,CAAX,IAAqB9P,OAAO,CAACs7B,KAAK,CAACxrB,IAAD,CAAN,CADlC,EACkD;MAChD,OAAO,IAAP;IACD;EACF;;EACD,OAAO,KAAP;AACD;;AAED,IAAIsjC,OAAO,GAAG,OAAd;AAEA,MAAMC,eAAe,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,WAAnC,CAAxB;;AACA,SAASC,oBAAT,CAA8B3hB,QAA9B,EAAwC9Z,IAAxC,EAA8C;EAC5C,OAAO8Z,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAnC,IAAgD0hB,eAAe,CAAC7tB,OAAhB,CAAwBmM,QAAxB,MAAsC,CAAC,CAAvC,IAA4C9Z,IAAI,KAAK,GAA5G;AACD;;AACD,SAAS07B,aAAT,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+B;EAC7B,OAAO,UAASl0C,CAAT,EAAYQ,CAAZ,EAAe;IACpB,OAAOR,CAAC,CAACi0C,EAAD,CAAD,KAAUzzC,CAAC,CAACyzC,EAAD,CAAX,GACHj0C,CAAC,CAACk0C,EAAD,CAAD,GAAQ1zC,CAAC,CAAC0zC,EAAD,CADN,GAEHl0C,CAAC,CAACi0C,EAAD,CAAD,GAAQzzC,CAAC,CAACyzC,EAAD,CAFb;EAGD,CAJD;AAKD;;AACD,SAASE,oBAAT,CAA8B30B,OAA9B,EAAuC;EACrC,MAAMrT,KAAK,GAAGqT,OAAO,CAACrT,KAAtB;EACA,MAAMiG,gBAAgB,GAAGjG,KAAK,CAAC4H,OAAN,CAAcxB,SAAvC;EACApG,KAAK,CAAC25B,aAAN,CAAoB,aAApB;EACA3gC,QAAQ,CAACiN,gBAAgB,IAAIA,gBAAgB,CAACgiC,UAAtC,EAAkD,CAAC50B,OAAD,CAAlD,EAA6DrT,KAA7D,CAAR;AACD;;AACD,SAASkoC,mBAAT,CAA6B70B,OAA7B,EAAsC;EACpC,MAAMrT,KAAK,GAAGqT,OAAO,CAACrT,KAAtB;EACA,MAAMiG,gBAAgB,GAAGjG,KAAK,CAAC4H,OAAN,CAAcxB,SAAvC;EACApN,QAAQ,CAACiN,gBAAgB,IAAIA,gBAAgB,CAACkiC,UAAtC,EAAkD,CAAC90B,OAAD,CAAlD,EAA6DrT,KAA7D,CAAR;AACD;;AACD,SAASooC,cAAT,GAA0B;EACxB,OAAO,OAAOnnC,MAAP,KAAkB,WAAlB,IAAiC,OAAOutB,QAAP,KAAoB,WAA5D;AACD;;AACD,SAAS6Z,SAAT,CAAmB3mC,IAAnB,EAAyB;EACvB,IAAI0mC,cAAc,MAAM,OAAO1mC,IAAP,KAAgB,QAAxC,EAAkD;IAChDA,IAAI,GAAG8sB,QAAQ,CAAC8Z,cAAT,CAAwB5mC,IAAxB,CAAP;EACD,CAFD,MAEO,IAAIA,IAAI,IAAIA,IAAI,CAACF,MAAjB,EAAyB;IAC9BE,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;EACD;;EACD,IAAIA,IAAI,IAAIA,IAAI,CAACmqB,MAAjB,EAAyB;IACvBnqB,IAAI,GAAGA,IAAI,CAACmqB,MAAZ;EACD;;EACD,OAAOnqB,IAAP;AACD;;AACD,MAAM6mC,SAAS,GAAG,EAAlB;;AACA,MAAMC,QAAQ,GAAIjhC,GAAD,IAAS;EACxB,MAAMskB,MAAM,GAAGwc,SAAS,CAAC9gC,GAAD,CAAxB;EACA,OAAOrB,MAAM,CAACwB,MAAP,CAAc6gC,SAAd,EAAyB/7B,MAAzB,CAAiCvY,CAAD,IAAOA,CAAC,CAAC43B,MAAF,KAAaA,MAApD,EAA4D/pB,GAA5D,EAAP;AACD,CAHD;;AAIA,MAAM2mC,KAAN,CAAY;EACVjpC,WAAW,CAACkC,IAAD,EAAOuF,MAAP,EAAe;IACxB,MAAMlG,EAAE,GAAG,IAAX;IACA,KAAKkG,MAAL,GAAcA,MAAM,GAAG,IAAIk/B,MAAJ,CAAWl/B,MAAX,CAAvB;IACA,MAAMyhC,aAAa,GAAGL,SAAS,CAAC3mC,IAAD,CAA/B;IACA,MAAMinC,aAAa,GAAGH,QAAQ,CAACE,aAAD,CAA9B;;IACA,IAAIC,aAAJ,EAAmB;MACjB,MAAM,IAAItkB,KAAJ,CACJ,+CAA+CskB,aAAa,CAAC59B,EAA7D,GAAkE,IAAlE,GACJ,qDAFQ,CAAN;IAID;;IACD,MAAMnD,OAAO,GAAGX,MAAM,CAAC0J,cAAP,CAAsB1J,MAAM,CAAC8/B,iBAAP,EAAtB,EAAkDhmC,EAAE,CAAC6P,UAAH,EAAlD,CAAhB;IACA,KAAKg4B,QAAL,GAAgB7nC,EAAE,CAAC8nC,mBAAH,CAAuBH,aAAvB,EAAsCzhC,MAAtC,CAAhB;IACA,MAAMoM,OAAO,GAAGtS,EAAE,CAAC6nC,QAAH,CAAYhd,cAAZ,CAA2B8c,aAA3B,EAA0C9gC,OAAO,CAACgY,WAAlD,CAAhB;IACA,MAAMiM,MAAM,GAAGxY,OAAO,IAAIA,OAAO,CAACwY,MAAlC;IACA,MAAMrS,MAAM,GAAGqS,MAAM,IAAIA,MAAM,CAACrS,MAAhC;IACA,MAAMC,KAAK,GAAGoS,MAAM,IAAIA,MAAM,CAACpS,KAA/B;IACA,KAAK1O,EAAL,GAAU3P,GAAG,EAAb;IACA,KAAKsS,GAAL,GAAW2F,OAAX;IACA,KAAKwY,MAAL,GAAcA,MAAd;IACA,KAAKpS,KAAL,GAAaA,KAAb;IACA,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKsvB,QAAL,GAAgBlhC,OAAhB;IACA,KAAKmhC,YAAL,GAAoB,KAAKnpB,WAAzB;IACA,KAAKuL,OAAL,GAAe,EAAf;IACA,KAAK6d,SAAL,GAAiB,EAAjB;IACA,KAAKj9B,OAAL,GAAejM,SAAf;IACA,KAAKuoB,KAAL,GAAa,EAAb;IACA,KAAK6G,uBAAL,GAA+BpvB,SAA/B;IACA,KAAKmT,SAAL,GAAiBnT,SAAjB;IACA,KAAK6B,OAAL,GAAe,EAAf;IACA,KAAKsnC,UAAL,GAAkBnpC,SAAlB;IACA,KAAKopC,UAAL,GAAkB,EAAlB;IACA,KAAKC,eAAL,GAAuB,EAAvB;IACA,KAAK58B,MAAL,GAAc,EAAd;IACA,KAAK5D,KAAL,GAAa7I,SAAb;IACA,KAAKspC,QAAL,GAAgB,IAAIjG,aAAJ,EAAhB;IACA,KAAKjT,QAAL,GAAgB,EAAhB;IACA,KAAKmZ,cAAL,GAAsB,EAAtB;IACA,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAK90B,mBAAL,GAA2B1U,SAA3B;IACA,KAAKuO,QAAL,GAAgBvO,SAAhB;IACA,KAAKypC,SAAL,GAAiBjuC,QAAQ,CAAC,MAAM,KAAK+J,MAAL,CAAY,QAAZ,CAAP,EAA8BuC,OAAO,CAAC4hC,WAAR,IAAuB,CAArD,CAAzB;IACAjB,SAAS,CAACxnC,EAAE,CAACgK,EAAJ,CAAT,GAAmBhK,EAAnB;;IACA,IAAI,CAACsS,OAAD,IAAY,CAACwY,MAAjB,EAAyB;MACvB4d,OAAO,CAACC,KAAR,CAAc,mEAAd;MACA;IACD;;IACDtmC,QAAQ,CAACf,MAAT,CAAgBtB,EAAhB,EAAoB,UAApB,EAAgCinC,oBAAhC;IACA5kC,QAAQ,CAACf,MAAT,CAAgBtB,EAAhB,EAAoB,UAApB,EAAgCmnC,mBAAhC;;IACAnnC,EAAE,CAAC4oC,WAAH;;IACA,IAAI5oC,EAAE,CAACuoC,QAAP,EAAiB;MACfvoC,EAAE,CAACsE,MAAH;IACD;EACF;;EACc,IAAXua,WAAW,GAAG;IAChB,MAAM;MAAChY,OAAO,EAAE;QAACgY,WAAD;QAAcgqB;MAAd,CAAV;MAA8CnwB,KAA9C;MAAqDD,MAArD;MAA6DuvB;IAA7D,IAA6E,IAAnF;;IACA,IAAI,CAACvzC,aAAa,CAACoqB,WAAD,CAAlB,EAAiC;MAC/B,OAAOA,WAAP;IACD;;IACD,IAAIgqB,mBAAmB,IAAIb,YAA3B,EAAyC;MACvC,OAAOA,YAAP;IACD;;IACD,OAAOvvB,MAAM,GAAGC,KAAK,GAAGD,MAAX,GAAoB,IAAjC;EACD;;EACO,IAAJlP,IAAI,GAAG;IACT,OAAO,KAAKrD,MAAL,CAAYqD,IAAnB;EACD;;EACO,IAAJA,IAAI,CAACA,IAAD,EAAO;IACb,KAAKrD,MAAL,CAAYqD,IAAZ,GAAmBA,IAAnB;EACD;;EACU,IAAP1C,OAAO,GAAG;IACZ,OAAO,KAAKkhC,QAAZ;EACD;;EACU,IAAPlhC,OAAO,CAACA,OAAD,EAAU;IACnB,KAAKX,MAAL,CAAYW,OAAZ,GAAsBA,OAAtB;EACD;;EACD+hC,WAAW,GAAG;IACZ,MAAM5oC,EAAE,GAAG,IAAX;IACAA,EAAE,CAAC44B,aAAH,CAAiB,YAAjB;;IACA,IAAI54B,EAAE,CAAC6G,OAAH,CAAWiiC,UAAf,EAA2B;MACzB9oC,EAAE,CAAC4F,MAAH;IACD,CAFD,MAEO;MACLnL,WAAW,CAACuF,EAAD,EAAKA,EAAE,CAAC6G,OAAH,CAAWqnB,gBAAhB,CAAX;IACD;;IACDluB,EAAE,CAAC+oC,UAAH;IACA/oC,EAAE,CAAC44B,aAAH,CAAiB,WAAjB;IACA,OAAO54B,EAAP;EACD;;EACD8nC,mBAAmB,CAAChd,MAAD,EAAS5kB,MAAT,EAAiB;IAClC,IAAIA,MAAM,CAAC2hC,QAAX,EAAqB;MACnB,OAAO,IAAI3hC,MAAM,CAAC2hC,QAAX,EAAP;IACD,CAFD,MAEO,IAAI,CAACR,cAAc,EAAf,IAAsB,OAAO2B,eAAP,KAA2B,WAA3B,IAA0Cle,MAAM,YAAYke,eAAtF,EAAwG;MAC7G,OAAO,IAAI3d,aAAJ,EAAP;IACD;;IACD,OAAO,IAAI0D,WAAJ,EAAP;EACD;;EACD0W,KAAK,GAAG;IACN9qC,WAAW,CAAC,KAAKmwB,MAAN,EAAc,KAAKne,GAAnB,CAAX;IACA,OAAO,IAAP;EACD;;EACD1K,IAAI,GAAG;IACLI,QAAQ,CAACJ,IAAT,CAAc,IAAd;IACA,OAAO,IAAP;EACD;;EACD2D,MAAM,CAAC8S,KAAD,EAAQD,MAAR,EAAgB;IACpB,IAAI,CAACpW,QAAQ,CAAC9B,OAAT,CAAiB,IAAjB,CAAL,EAA6B;MAC3B,KAAK0oC,OAAL,CAAavwB,KAAb,EAAoBD,MAApB;IACD,CAFD,MAEO;MACL,KAAKywB,iBAAL,GAAyB;QAACxwB,KAAD;QAAQD;MAAR,CAAzB;IACD;EACF;;EACDwwB,OAAO,CAACvwB,KAAD,EAAQD,MAAR,EAAgB;IACrB,MAAMzY,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAMikB,MAAM,GAAG9qB,EAAE,CAAC8qB,MAAlB;IACA,MAAMjM,WAAW,GAAGhY,OAAO,CAACgiC,mBAAR,IAA+B7oC,EAAE,CAAC6e,WAAtD;IACA,MAAMsqB,OAAO,GAAGnpC,EAAE,CAAC6nC,QAAH,CAAY5wC,cAAZ,CAA2B6zB,MAA3B,EAAmCpS,KAAnC,EAA0CD,MAA1C,EAAkDoG,WAAlD,CAAhB;IACA,MAAMuqB,QAAQ,GAAGppC,EAAE,CAACmuB,uBAApB;IACA,MAAMkb,QAAQ,GAAGxiC,OAAO,CAACqnB,gBAAR,IAA4BluB,EAAE,CAAC6nC,QAAH,CAAY1c,mBAAZ,EAA7C;;IACA,IAAInrB,EAAE,CAAC0Y,KAAH,KAAaywB,OAAO,CAACzwB,KAArB,IAA8B1Y,EAAE,CAACyY,MAAH,KAAc0wB,OAAO,CAAC1wB,MAApD,IAA8D2wB,QAAQ,KAAKC,QAA/E,EAAyF;MACvF;IACD;;IACDrpC,EAAE,CAAC0Y,KAAH,GAAWywB,OAAO,CAACzwB,KAAnB;IACA1Y,EAAE,CAACyY,MAAH,GAAY0wB,OAAO,CAAC1wB,MAApB;IACAzY,EAAE,CAACgoC,YAAH,GAAkBhoC,EAAE,CAAC6e,WAArB;IACApkB,WAAW,CAACuF,EAAD,EAAKqpC,QAAL,EAAe,IAAf,CAAX;IACArpC,EAAE,CAAC44B,aAAH,CAAiB,QAAjB,EAA2B;MAACrxB,IAAI,EAAE4hC;IAAP,CAA3B;IACAlxC,QAAQ,CAAC4O,OAAO,CAACyiC,QAAT,EAAmB,CAACtpC,EAAD,EAAKmpC,OAAL,CAAnB,EAAkCnpC,EAAlC,CAAR;;IACA,IAAIA,EAAE,CAACuoC,QAAP,EAAiB;MACf,IAAIvoC,EAAE,CAACwoC,SAAH,EAAJ,EAAoB;QAClBxoC,EAAE,CAACupC,MAAH;MACD;IACF;EACF;;EACDC,mBAAmB,GAAG;IACpB,MAAM3iC,OAAO,GAAG,KAAKA,OAArB;IACA,MAAM4iC,aAAa,GAAG5iC,OAAO,CAAC2E,MAAR,IAAkB,EAAxC;IACAzU,IAAI,CAAC0yC,aAAD,EAAgB,CAACC,WAAD,EAActK,MAAd,KAAyB;MAC3CsK,WAAW,CAAC1/B,EAAZ,GAAiBo1B,MAAjB;IACD,CAFG,CAAJ;EAGD;;EACDuK,mBAAmB,GAAG;IACpB,MAAM3pC,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAM+iC,SAAS,GAAG/iC,OAAO,CAAC2E,MAA1B;IACA,MAAMA,MAAM,GAAGxL,EAAE,CAACwL,MAAlB;IACA,MAAMq+B,OAAO,GAAG1kC,MAAM,CAACC,IAAP,CAAYoG,MAAZ,EAAoB5J,MAApB,CAA2B,CAAC+V,GAAD,EAAM3N,EAAN,KAAa;MACtD2N,GAAG,CAAC3N,EAAD,CAAH,GAAU,KAAV;MACA,OAAO2N,GAAP;IACD,CAHe,EAGb,EAHa,CAAhB;IAIA,IAAInX,KAAK,GAAG,EAAZ;;IACA,IAAIopC,SAAJ,EAAe;MACbppC,KAAK,GAAGA,KAAK,CAAC8U,MAAN,CACNnQ,MAAM,CAACC,IAAP,CAAYwkC,SAAZ,EAAuB5qB,GAAvB,CAA4BhV,EAAD,IAAQ;QACjC,MAAMi6B,YAAY,GAAG2F,SAAS,CAAC5/B,EAAD,CAA9B;QACA,MAAMoB,IAAI,GAAG44B,aAAa,CAACh6B,EAAD,EAAKi6B,YAAL,CAA1B;QACA,MAAM6F,QAAQ,GAAG1+B,IAAI,KAAK,GAA1B;QACA,MAAM4M,YAAY,GAAG5M,IAAI,KAAK,GAA9B;QACA,OAAO;UACLvE,OAAO,EAAEo9B,YADJ;UAEL8F,SAAS,EAAED,QAAQ,GAAG,WAAH,GAAiB9xB,YAAY,GAAG,QAAH,GAAc,MAFzD;UAGLgyB,KAAK,EAAEF,QAAQ,GAAG,cAAH,GAAoB9xB,YAAY,GAAG,UAAH,GAAgB;QAH1D,CAAP;MAKD,CAVD,CADM,CAAR;IAaD;;IACDjhB,IAAI,CAACyJ,KAAD,EAASG,IAAD,IAAU;MACpB,MAAMsjC,YAAY,GAAGtjC,IAAI,CAACkG,OAA1B;MACA,MAAMmD,EAAE,GAAGi6B,YAAY,CAACj6B,EAAxB;MACA,MAAMoB,IAAI,GAAG44B,aAAa,CAACh6B,EAAD,EAAKi6B,YAAL,CAA1B;MACA,MAAMgG,SAAS,GAAGt2C,cAAc,CAACswC,YAAY,CAAC7kC,IAAd,EAAoBuB,IAAI,CAACqpC,KAAzB,CAAhC;;MACA,IAAI/F,YAAY,CAAC/e,QAAb,KAA0BnmB,SAA1B,IAAuC8nC,oBAAoB,CAAC5C,YAAY,CAAC/e,QAAd,EAAwB9Z,IAAxB,CAApB,KAAsDy7B,oBAAoB,CAAClmC,IAAI,CAACopC,SAAN,CAArH,EAAuI;QACrI9F,YAAY,CAAC/e,QAAb,GAAwBvkB,IAAI,CAACopC,SAA7B;MACD;;MACDF,OAAO,CAAC7/B,EAAD,CAAP,GAAc,IAAd;MACA,IAAIpC,KAAK,GAAG,IAAZ;;MACA,IAAIoC,EAAE,IAAIwB,MAAN,IAAgBA,MAAM,CAACxB,EAAD,CAAN,CAAW5K,IAAX,KAAoB6qC,SAAxC,EAAmD;QACjDriC,KAAK,GAAG4D,MAAM,CAACxB,EAAD,CAAd;MACD,CAFD,MAEO;QACL,MAAMkgC,UAAU,GAAGjI,QAAQ,CAACX,QAAT,CAAkB2I,SAAlB,CAAnB;QACAriC,KAAK,GAAG,IAAIsiC,UAAJ,CAAe;UACrBlgC,EADqB;UAErB5K,IAAI,EAAE6qC,SAFe;UAGrBt9B,GAAG,EAAE3M,EAAE,CAAC2M,GAHa;UAIrB1N,KAAK,EAAEe;QAJc,CAAf,CAAR;QAMAwL,MAAM,CAAC5D,KAAK,CAACoC,EAAP,CAAN,GAAmBpC,KAAnB;MACD;;MACDA,KAAK,CAAC8uB,IAAN,CAAWuN,YAAX,EAAyBp9B,OAAzB;IACD,CAvBG,CAAJ;IAwBA9P,IAAI,CAAC8yC,OAAD,EAAU,CAACM,UAAD,EAAangC,EAAb,KAAoB;MAChC,IAAI,CAACmgC,UAAL,EAAiB;QACf,OAAO3+B,MAAM,CAACxB,EAAD,CAAb;MACD;IACF,CAJG,CAAJ;IAKAjT,IAAI,CAACyU,MAAD,EAAU5D,KAAD,IAAW;MACtB6f,OAAO,CAACphB,SAAR,CAAkBrG,EAAlB,EAAsB4H,KAAtB,EAA6BA,KAAK,CAACf,OAAnC;MACA4gB,OAAO,CAAC0C,MAAR,CAAenqB,EAAf,EAAmB4H,KAAnB;IACD,CAHG,CAAJ;EAID;;EACDwiC,mBAAmB,CAACzgC,IAAD,EAAOb,KAAP,EAAc;IAC/B,MAAMH,QAAQ,GAAG,KAAKs/B,SAAtB;IACA,MAAMoC,QAAQ,GAAG1gC,IAAI,CAACb,KAAtB;;IACA,IAAIuhC,QAAQ,KAAKvhC,KAAjB,EAAwB;MACtBH,QAAQ,CAAC0hC,QAAD,CAAR,GAAqB1hC,QAAQ,CAACG,KAAD,CAA7B;MACAH,QAAQ,CAACG,KAAD,CAAR,GAAkBa,IAAlB;MACAA,IAAI,CAACb,KAAL,GAAaA,KAAb;IACD;EACF;;EACDwhC,eAAe,GAAG;IAChB,MAAMtqC,EAAE,GAAG,IAAX;IACA,MAAM2I,QAAQ,GAAG3I,EAAE,CAACioC,SAApB;IACA,MAAM/zB,OAAO,GAAGlU,EAAE,CAACuJ,IAAH,CAAQoF,QAAR,CAAiBlO,MAAjC;IACA,MAAMwT,OAAO,GAAGtL,QAAQ,CAAClI,MAAzB;;IACA,IAAIwT,OAAO,GAAGC,OAAd,EAAuB;MACrB,KAAK,IAAI9gB,CAAC,GAAG8gB,OAAb,EAAsB9gB,CAAC,GAAG6gB,OAA1B,EAAmC,EAAE7gB,CAArC,EAAwC;QACtC4M,EAAE,CAACuqC,mBAAH,CAAuBn3C,CAAvB;MACD;;MACDuV,QAAQ,CAAC8L,MAAT,CAAgBP,OAAhB,EAAyBD,OAAO,GAAGC,OAAnC;IACD;;IACDlU,EAAE,CAACooC,eAAH,GAAqBz/B,QAAQ,CAACoX,KAAT,CAAe,CAAf,EAAkBxK,IAAlB,CAAuBuxB,aAAa,CAAC,OAAD,EAAU,OAAV,CAApC,CAArB;EACD;;EACD0D,2BAA2B,GAAG;IAC5B,MAAMxqC,EAAE,GAAG,IAAX;IACA,MAAM;MAACioC,SAAS,EAAEt/B,QAAZ;MAAsBY,IAAI,EAAE;QAACoF;MAAD;IAA5B,IAA0C3O,EAAhD;;IACA,IAAI2I,QAAQ,CAAClI,MAAT,GAAkBkO,QAAQ,CAAClO,MAA/B,EAAuC;MACrC,OAAOT,EAAE,CAACgL,OAAV;IACD;;IACDrC,QAAQ,CAAClJ,OAAT,CAAiB,CAACkK,IAAD,EAAOb,KAAP,KAAiB;MAChC,IAAI6F,QAAQ,CAAClD,MAAT,CAAgBvV,CAAC,IAAIA,CAAC,KAAKyT,IAAI,CAACuW,QAAhC,EAA0Czf,MAA1C,KAAqD,CAAzD,EAA4D;QAC1DT,EAAE,CAACuqC,mBAAH,CAAuBzhC,KAAvB;MACD;IACF,CAJD;EAKD;;EACD2hC,wBAAwB,GAAG;IACzB,MAAMzqC,EAAE,GAAG,IAAX;IACA,MAAM0qC,cAAc,GAAG,EAAvB;IACA,MAAM/7B,QAAQ,GAAG3O,EAAE,CAACuJ,IAAH,CAAQoF,QAAzB;IACA,IAAIvb,CAAJ,EAAOyV,IAAP;;IACA7I,EAAE,CAACwqC,2BAAH;;IACA,KAAKp3C,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAG8F,QAAQ,CAAClO,MAA5B,EAAoCrN,CAAC,GAAGyV,IAAxC,EAA8CzV,CAAC,EAA/C,EAAmD;MACjD,MAAM0Y,OAAO,GAAG6C,QAAQ,CAACvb,CAAD,CAAxB;MACA,IAAIuW,IAAI,GAAG3J,EAAE,CAAC4O,cAAH,CAAkBxb,CAAlB,CAAX;MACA,MAAMgM,IAAI,GAAG0M,OAAO,CAAC1M,IAAR,IAAgBY,EAAE,CAACkG,MAAH,CAAU9G,IAAvC;;MACA,IAAIuK,IAAI,CAACvK,IAAL,IAAauK,IAAI,CAACvK,IAAL,KAAcA,IAA/B,EAAqC;QACnCY,EAAE,CAACuqC,mBAAH,CAAuBn3C,CAAvB;;QACAuW,IAAI,GAAG3J,EAAE,CAAC4O,cAAH,CAAkBxb,CAAlB,CAAP;MACD;;MACDuW,IAAI,CAACvK,IAAL,GAAYA,IAAZ;MACAuK,IAAI,CAACyE,SAAL,GAAiBtC,OAAO,CAACsC,SAAR,IAAqBs1B,YAAY,CAACtkC,IAAD,EAAOY,EAAE,CAAC6G,OAAV,CAAlD;MACA8C,IAAI,CAACghC,KAAL,GAAa7+B,OAAO,CAAC6+B,KAAR,IAAiB,CAA9B;;MACA3qC,EAAE,CAACoqC,mBAAH,CAAuBzgC,IAAvB,EAA6BvW,CAA7B;;MACAuW,IAAI,CAACiI,KAAL,GAAa,KAAK9F,OAAO,CAAC8F,KAA1B;MACAjI,IAAI,CAAC5D,OAAL,GAAe/F,EAAE,CAAC6c,gBAAH,CAAoBzpB,CAApB,CAAf;;MACA,IAAIuW,IAAI,CAACkB,UAAT,EAAqB;QACnBlB,IAAI,CAACkB,UAAL,CAAgB8C,WAAhB,CAA4Bva,CAA5B;QACAuW,IAAI,CAACkB,UAAL,CAAgB2C,UAAhB;MACD,CAHD,MAGO;QACL,MAAMo9B,eAAe,GAAG3I,QAAQ,CAACf,aAAT,CAAuB9hC,IAAvB,CAAxB;QACA,MAAM;UAAC+P,kBAAD;UAAqBqD;QAArB,IAAwC/e,QAAQ,CAACkb,QAAT,CAAkBvP,IAAlB,CAA9C;QACA+F,MAAM,CAACqC,MAAP,CAAcojC,eAAe,CAAC51B,SAA9B,EAAyC;UACvCxC,eAAe,EAAEyvB,QAAQ,CAACb,UAAT,CAAoB5uB,eAApB,CADsB;UAEvCrD,kBAAkB,EAAEA,kBAAkB,IAAI8yB,QAAQ,CAACb,UAAT,CAAoBjyB,kBAApB;QAFH,CAAzC;QAIAxF,IAAI,CAACkB,UAAL,GAAkB,IAAI+/B,eAAJ,CAAoB5qC,EAApB,EAAwB5M,CAAxB,CAAlB;QACAs3C,cAAc,CAACjpC,IAAf,CAAoBkI,IAAI,CAACkB,UAAzB;MACD;IACF;;IACD7K,EAAE,CAACsqC,eAAH;;IACA,OAAOI,cAAP;EACD;;EACDG,cAAc,GAAG;IACf,MAAM7qC,EAAE,GAAG,IAAX;IACAjJ,IAAI,CAACiJ,EAAE,CAACuJ,IAAH,CAAQoF,QAAT,EAAmB,CAAC7C,OAAD,EAAU1C,YAAV,KAA2B;MAChDpJ,EAAE,CAAC4O,cAAH,CAAkBxF,YAAlB,EAAgCyB,UAAhC,CAA2CkE,KAA3C;IACD,CAFG,EAED/O,EAFC,CAAJ;EAGD;;EACD+O,KAAK,GAAG;IACN,KAAK87B,cAAL;;IACA,KAAKjS,aAAL,CAAmB,OAAnB;EACD;;EACDt0B,MAAM,CAAC6E,IAAD,EAAO;IACX,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAMkG,MAAM,GAAGlG,EAAE,CAACkG,MAAlB;IACAA,MAAM,CAAC5B,MAAP;IACAtE,EAAE,CAAC+nC,QAAH,GAAc7hC,MAAM,CAAC0J,cAAP,CAAsB1J,MAAM,CAAC8/B,iBAAP,EAAtB,EAAkDhmC,EAAE,CAAC6P,UAAH,EAAlD,CAAd;IACA9Y,IAAI,CAACiJ,EAAE,CAACwL,MAAJ,EAAa5D,KAAD,IAAW;MACzB6f,OAAO,CAAC4C,SAAR,CAAkBrqB,EAAlB,EAAsB4H,KAAtB;IACD,CAFG,CAAJ;IAGA,MAAMkjC,aAAa,GAAG9qC,EAAE,CAACyT,mBAAH,GAAyB,CAACzT,EAAE,CAAC6G,OAAH,CAAWxB,SAA3D;IACArF,EAAE,CAACwpC,mBAAH;IACAxpC,EAAE,CAAC2pC,mBAAH;;IACA3pC,EAAE,CAACqoC,QAAH,CAAYzF,UAAZ;;IACA,IAAI5iC,EAAE,CAAC44B,aAAH,CAAiB,cAAjB,EAAiC;MAACzvB,IAAD;MAAOw5B,UAAU,EAAE;IAAnB,CAAjC,MAA+D,KAAnE,EAA0E;MACxE;IACD;;IACD,MAAM+H,cAAc,GAAG1qC,EAAE,CAACyqC,wBAAH,EAAvB;IACAzqC,EAAE,CAAC44B,aAAH,CAAiB,sBAAjB;IACA,IAAIrO,UAAU,GAAG,CAAjB;;IACA,KAAK,IAAIn3B,CAAC,GAAG,CAAR,EAAWyV,IAAI,GAAG7I,EAAE,CAACuJ,IAAH,CAAQoF,QAAR,CAAiBlO,MAAxC,EAAgDrN,CAAC,GAAGyV,IAApD,EAA0DzV,CAAC,EAA3D,EAA+D;MAC7D,MAAM;QAACyX;MAAD,IAAe7K,EAAE,CAAC4O,cAAH,CAAkBxb,CAAlB,CAArB;MACA,MAAM2b,KAAK,GAAG,CAAC+7B,aAAD,IAAkBJ,cAAc,CAAC3xB,OAAf,CAAuBlO,UAAvB,MAAuC,CAAC,CAAxE;MACAA,UAAU,CAACuE,qBAAX,CAAiCL,KAAjC;MACAwb,UAAU,GAAG3qB,IAAI,CAACmC,GAAL,CAAS,CAAC8I,UAAU,CAAC6G,cAAX,EAAV,EAAuC6Y,UAAvC,CAAb;IACD;;IACDvqB,EAAE,CAAC8lB,WAAH,GAAiByE,UAAjB;;IACAvqB,EAAE,CAAC+qC,aAAH,CAAiBxgB,UAAjB;;IACA,IAAI,CAACugB,aAAL,EAAoB;MAClB/zC,IAAI,CAAC2zC,cAAD,EAAkB7/B,UAAD,IAAgB;QACnCA,UAAU,CAACkE,KAAX;MACD,CAFG,CAAJ;IAGD;;IACD/O,EAAE,CAACgrC,eAAH,CAAmB7hC,IAAnB;;IACAnJ,EAAE,CAAC44B,aAAH,CAAiB,aAAjB,EAAgC;MAACzvB;IAAD,CAAhC;;IACAnJ,EAAE,CAACoqB,OAAH,CAAW7U,IAAX,CAAgBuxB,aAAa,CAAC,GAAD,EAAM,MAAN,CAA7B;;IACA,IAAI9mC,EAAE,CAACkoC,UAAP,EAAmB;MACjBloC,EAAE,CAACirC,aAAH,CAAiBjrC,EAAE,CAACkoC,UAApB,EAAgC,IAAhC;IACD;;IACDloC,EAAE,CAACupC,MAAH;EACD;;EACDwB,aAAa,CAACxgB,UAAD,EAAa;IACxB,MAAMvqB,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAAC44B,aAAH,CAAiB,cAAjB,EAAiC;MAAC+J,UAAU,EAAE;IAAb,CAAjC,MAAyD,KAA7D,EAAoE;MAClE;IACD;;IACDlb,OAAO,CAACnjB,MAAR,CAAetE,EAAf,EAAmBA,EAAE,CAAC0Y,KAAtB,EAA6B1Y,EAAE,CAACyY,MAAhC,EAAwC8R,UAAxC;IACA,MAAMtY,IAAI,GAAGjS,EAAE,CAACkS,SAAhB;IACA,MAAMg5B,MAAM,GAAGj5B,IAAI,CAACyG,KAAL,IAAc,CAAd,IAAmBzG,IAAI,CAACwG,MAAL,IAAe,CAAjD;IACAzY,EAAE,CAACoqB,OAAH,GAAa,EAAb;IACArzB,IAAI,CAACiJ,EAAE,CAACsnB,KAAJ,EAAYL,GAAD,IAAS;MACtB,IAAIikB,MAAM,IAAIjkB,GAAG,CAAC/B,QAAJ,KAAiB,WAA/B,EAA4C;QAC1C;MACD;;MACD,IAAI+B,GAAG,CAAC5gB,SAAR,EAAmB;QACjB4gB,GAAG,CAAC5gB,SAAJ;MACD;;MACDrG,EAAE,CAACoqB,OAAH,CAAW3oB,IAAX,CAAgB,GAAGwlB,GAAG,CAACmD,OAAJ,EAAnB;IACD,CARG,EAQDpqB,EARC,CAAJ;;IASAA,EAAE,CAACoqB,OAAH,CAAW3qB,OAAX,CAAmB,CAACkB,IAAD,EAAOmI,KAAP,KAAiB;MAClCnI,IAAI,CAACwqC,IAAL,GAAYriC,KAAZ;IACD,CAFD;;IAGA9I,EAAE,CAAC44B,aAAH,CAAiB,aAAjB;EACD;;EACDoS,eAAe,CAAC7hC,IAAD,EAAO;IACpB,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAMrG,UAAU,GAAG,OAAOwP,IAAP,KAAgB,UAAnC;;IACA,IAAInJ,EAAE,CAAC44B,aAAH,CAAiB,sBAAjB,EAAyC;MAACzvB,IAAD;MAAOw5B,UAAU,EAAE;IAAnB,CAAzC,MAAuE,KAA3E,EAAkF;MAChF;IACD;;IACD,KAAK,IAAIvvC,CAAC,GAAG,CAAR,EAAWyV,IAAI,GAAG7I,EAAE,CAACuJ,IAAH,CAAQoF,QAAR,CAAiBlO,MAAxC,EAAgDrN,CAAC,GAAGyV,IAApD,EAA0D,EAAEzV,CAA5D,EAA+D;MAC7D4M,EAAE,CAACorC,cAAH,CAAkBh4C,CAAlB,EAAqBuG,UAAU,GAAGwP,IAAI,CAAC;QAACC,YAAY,EAAEhW;MAAf,CAAD,CAAP,GAA6B+V,IAA5D;IACD;;IACDnJ,EAAE,CAAC44B,aAAH,CAAiB,qBAAjB,EAAwC;MAACzvB;IAAD,CAAxC;EACD;;EACDiiC,cAAc,CAACtiC,KAAD,EAAQK,IAAR,EAAc;IAC1B,MAAMnJ,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAAC4O,cAAH,CAAkB9F,KAAlB,CAAb;IACA,MAAMgmB,IAAI,GAAG;MAACnlB,IAAD;MAAOb,KAAP;MAAcK,IAAd;MAAoBw5B,UAAU,EAAE;IAAhC,CAAb;;IACA,IAAI3iC,EAAE,CAAC44B,aAAH,CAAiB,qBAAjB,EAAwC9J,IAAxC,MAAkD,KAAtD,EAA6D;MAC3D;IACD;;IACDnlB,IAAI,CAACkB,UAAL,CAAgB1K,OAAhB,CAAwBgJ,IAAxB;;IACA2lB,IAAI,CAAC6T,UAAL,GAAkB,KAAlB;IACA3iC,EAAE,CAAC44B,aAAH,CAAiB,oBAAjB,EAAuC9J,IAAvC;EACD;;EACDya,MAAM,GAAG;IACP,MAAMvpC,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAAC44B,aAAH,CAAiB,cAAjB,EAAiC;MAAC+J,UAAU,EAAE;IAAb,CAAjC,MAAyD,KAA7D,EAAoE;MAClE;IACD;;IACD,IAAItgC,QAAQ,CAACV,GAAT,CAAa3B,EAAb,CAAJ,EAAsB;MACpB,IAAIA,EAAE,CAACuoC,QAAH,IAAe,CAAClmC,QAAQ,CAAC9B,OAAT,CAAiBP,EAAjB,CAApB,EAA0C;QACxCqC,QAAQ,CAACvC,KAAT,CAAeE,EAAf;MACD;IACF,CAJD,MAIO;MACLA,EAAE,CAACU,IAAH;MACAumC,oBAAoB,CAAC;QAAChoC,KAAK,EAAEe;MAAR,CAAD,CAApB;IACD;EACF;;EACDU,IAAI,GAAG;IACL,MAAMV,EAAE,GAAG,IAAX;IACA,IAAI5M,CAAJ;;IACA,IAAI4M,EAAE,CAACkpC,iBAAP,EAA0B;MACxB,MAAM;QAACxwB,KAAD;QAAQD;MAAR,IAAkBzY,EAAE,CAACkpC,iBAA3B;;MACAlpC,EAAE,CAACipC,OAAH,CAAWvwB,KAAX,EAAkBD,MAAlB;;MACAzY,EAAE,CAACkpC,iBAAH,GAAuB,IAAvB;IACD;;IACDlpC,EAAE,CAACylC,KAAH;;IACA,IAAIzlC,EAAE,CAAC0Y,KAAH,IAAY,CAAZ,IAAiB1Y,EAAE,CAACyY,MAAH,IAAa,CAAlC,EAAqC;MACnC;IACD;;IACD,IAAIzY,EAAE,CAAC44B,aAAH,CAAiB,YAAjB,EAA+B;MAAC+J,UAAU,EAAE;IAAb,CAA/B,MAAuD,KAA3D,EAAkE;MAChE;IACD;;IACD,MAAM0I,MAAM,GAAGrrC,EAAE,CAACoqB,OAAlB;;IACA,KAAKh3B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGi4C,MAAM,CAAC5qC,MAAX,IAAqB4qC,MAAM,CAACj4C,CAAD,CAAN,CAAUkD,CAAV,IAAe,CAAhD,EAAmD,EAAElD,CAArD,EAAwD;MACtDi4C,MAAM,CAACj4C,CAAD,CAAN,CAAUsN,IAAV,CAAeV,EAAE,CAACkS,SAAlB;IACD;;IACDlS,EAAE,CAACsrC,aAAH;;IACA,OAAOl4C,CAAC,GAAGi4C,MAAM,CAAC5qC,MAAlB,EAA0B,EAAErN,CAA5B,EAA+B;MAC7Bi4C,MAAM,CAACj4C,CAAD,CAAN,CAAUsN,IAAV,CAAeV,EAAE,CAACkS,SAAlB;IACD;;IACDlS,EAAE,CAAC44B,aAAH,CAAiB,WAAjB;EACD;;EACDhwB,sBAAsB,CAACF,aAAD,EAAgB;IACpC,MAAM1I,EAAE,GAAG,IAAX;IACA,MAAM2I,QAAQ,GAAG3I,EAAE,CAACooC,eAApB;IACA,MAAM5U,MAAM,GAAG,EAAf;IACA,IAAIpgC,CAAJ,EAAOyV,IAAP;;IACA,KAAKzV,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGF,QAAQ,CAAClI,MAA5B,EAAoCrN,CAAC,GAAGyV,IAAxC,EAA8C,EAAEzV,CAAhD,EAAmD;MACjD,MAAMuW,IAAI,GAAGhB,QAAQ,CAACvV,CAAD,CAArB;;MACA,IAAI,CAACsV,aAAD,IAAkBiB,IAAI,CAAC5D,OAA3B,EAAoC;QAClCytB,MAAM,CAAC/xB,IAAP,CAAYkI,IAAZ;MACD;IACF;;IACD,OAAO6pB,MAAP;EACD;;EACDhP,4BAA4B,GAAG;IAC7B,OAAO,KAAK5b,sBAAL,CAA4B,IAA5B,CAAP;EACD;;EACD0iC,aAAa,GAAG;IACd,MAAMtrC,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAAC44B,aAAH,CAAiB,oBAAjB,EAAuC;MAAC+J,UAAU,EAAE;IAAb,CAAvC,MAA+D,KAAnE,EAA0E;MACxE;IACD;;IACD,MAAMh6B,QAAQ,GAAG3I,EAAE,CAACwkB,4BAAH,EAAjB;;IACA,KAAK,IAAIpxB,CAAC,GAAGuV,QAAQ,CAAClI,MAAT,GAAkB,CAA/B,EAAkCrN,CAAC,IAAI,CAAvC,EAA0C,EAAEA,CAA5C,EAA+C;MAC7C4M,EAAE,CAACurC,YAAH,CAAgB5iC,QAAQ,CAACvV,CAAD,CAAxB;IACD;;IACD4M,EAAE,CAAC44B,aAAH,CAAiB,mBAAjB;EACD;;EACD2S,YAAY,CAAC5hC,IAAD,EAAO;IACjB,MAAM3J,EAAE,GAAG,IAAX;IACA,MAAM2M,GAAG,GAAG3M,EAAE,CAAC2M,GAAf;IACA,MAAMoF,IAAI,GAAGpI,IAAI,CAACmI,KAAlB;IACA,MAAMG,IAAI,GAAGjS,EAAE,CAACkS,SAAhB;IACA,MAAM4c,IAAI,GAAG;MACXnlB,IADW;MAEXb,KAAK,EAAEa,IAAI,CAACb,KAFD;MAGX65B,UAAU,EAAE;IAHD,CAAb;;IAKA,IAAI3iC,EAAE,CAAC44B,aAAH,CAAiB,mBAAjB,EAAsC9J,IAAtC,MAAgD,KAApD,EAA2D;MACzD;IACD;;IACDn6B,QAAQ,CAACgY,GAAD,EAAM;MACZpE,IAAI,EAAEwJ,IAAI,CAACxJ,IAAL,KAAc,KAAd,GAAsB,CAAtB,GAA0B0J,IAAI,CAAC1J,IAAL,GAAYwJ,IAAI,CAACxJ,IADrC;MAEZF,KAAK,EAAE0J,IAAI,CAAC1J,KAAL,KAAe,KAAf,GAAuBrI,EAAE,CAAC0Y,KAA1B,GAAkCzG,IAAI,CAAC5J,KAAL,GAAa0J,IAAI,CAAC1J,KAF/C;MAGZD,GAAG,EAAE2J,IAAI,CAAC3J,GAAL,KAAa,KAAb,GAAqB,CAArB,GAAyB6J,IAAI,CAAC7J,GAAL,GAAW2J,IAAI,CAAC3J,GAHlC;MAIZE,MAAM,EAAEyJ,IAAI,CAACzJ,MAAL,KAAgB,KAAhB,GAAwBtI,EAAE,CAACyY,MAA3B,GAAoCxG,IAAI,CAAC3J,MAAL,GAAcyJ,IAAI,CAACzJ;IAJnD,CAAN,CAAR;IAMAqB,IAAI,CAACkB,UAAL,CAAgBnK,IAAhB;IACA7L,UAAU,CAAC8X,GAAD,CAAV;IACAmiB,IAAI,CAAC6T,UAAL,GAAkB,KAAlB;IACA3iC,EAAE,CAAC44B,aAAH,CAAiB,kBAAjB,EAAqC9J,IAArC;EACD;;EACD0c,yBAAyB,CAACx4C,CAAD,EAAImW,IAAJ,EAAUtC,OAAV,EAAmBgf,gBAAnB,EAAqC;IAC5D,MAAM9gB,MAAM,GAAG0hB,WAAW,CAACC,KAAZ,CAAkBvd,IAAlB,CAAf;;IACA,IAAI,OAAOpE,MAAP,KAAkB,UAAtB,EAAkC;MAChC,OAAOA,MAAM,CAAC,IAAD,EAAO/R,CAAP,EAAU6T,OAAV,EAAmBgf,gBAAnB,CAAb;IACD;;IACD,OAAO,EAAP;EACD;;EACDjX,cAAc,CAACxF,YAAD,EAAe;IAC3B,MAAMpJ,EAAE,GAAG,IAAX;IACA,MAAM8L,OAAO,GAAG9L,EAAE,CAACuJ,IAAH,CAAQoF,QAAR,CAAiBvF,YAAjB,CAAhB;IACA,MAAMT,QAAQ,GAAG3I,EAAE,CAACioC,SAApB;IACA,IAAIt+B,IAAI,GAAGhB,QAAQ,CAAC8C,MAAT,CAAgBvV,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACgqB,QAAF,KAAepU,OAAzC,EAAkD/K,GAAlD,EAAX;;IACA,IAAI,CAAC4I,IAAL,EAAW;MACTA,IAAI,GAAGhB,QAAQ,CAACS,YAAD,CAAR,GAAyB;QAC9BhK,IAAI,EAAE,IADwB;QAE9BmK,IAAI,EAAE,EAFwB;QAG9BuC,OAAO,EAAE,IAHqB;QAI9BjB,UAAU,EAAE,IAJkB;QAK9B2U,MAAM,EAAE,IALsB;QAM9BzR,OAAO,EAAE,IANqB;QAO9BE,OAAO,EAAE,IAPqB;QAQ9B08B,KAAK,EAAE7+B,OAAO,IAAIA,OAAO,CAAC6+B,KAAnB,IAA4B,CARL;QAS9B7hC,KAAK,EAAEM,YATuB;QAU9B8W,QAAQ,EAAEpU,OAVoB;QAW9BM,OAAO,EAAE,EAXqB;QAY9B8D,OAAO,EAAE;MAZqB,CAAhC;IAcD;;IACD,OAAOvG,IAAP;EACD;;EACDkG,UAAU,GAAG;IACX,OAAO,KAAKvC,QAAL,KAAkB,KAAKA,QAAL,GAAgB;MAACrO,KAAK,EAAE,IAAR;MAAcG,IAAI,EAAE;IAApB,CAAlC,CAAP;EACD;;EACD2iB,sBAAsB,GAAG;IACvB,OAAO,KAAKyC,4BAAL,GAAoC/jB,MAA3C;EACD;;EACDoc,gBAAgB,CAACzT,YAAD,EAAe;IAC7B,MAAM0C,OAAO,GAAG,KAAKvC,IAAL,CAAUoF,QAAV,CAAmBvF,YAAnB,CAAhB;;IACA,IAAI,CAAC0C,OAAL,EAAc;MACZ,OAAO,KAAP;IACD;;IACD,MAAMnC,IAAI,GAAG,KAAKiF,cAAL,CAAoBxF,YAApB,CAAb;IACA,OAAO,OAAOO,IAAI,CAAC6V,MAAZ,KAAuB,SAAvB,GAAmC,CAAC7V,IAAI,CAAC6V,MAAzC,GAAkD,CAAC1T,OAAO,CAAC0T,MAAlE;EACD;;EACDisB,oBAAoB,CAACriC,YAAD,EAAerD,OAAf,EAAwB;IAC1C,MAAM4D,IAAI,GAAG,KAAKiF,cAAL,CAAoBxF,YAApB,CAAb;IACAO,IAAI,CAAC6V,MAAL,GAAc,CAACzZ,OAAf;EACD;;EACD4Z,oBAAoB,CAAC7W,KAAD,EAAQ;IAC1B,KAAKw/B,cAAL,CAAoBx/B,KAApB,IAA6B,CAAC,KAAKw/B,cAAL,CAAoBx/B,KAApB,CAA9B;EACD;;EACD0Q,iBAAiB,CAAC1Q,KAAD,EAAQ;IACvB,OAAO,CAAC,KAAKw/B,cAAL,CAAoBx/B,KAApB,CAAR;EACD;;EACD4iC,wBAAwB,CAACtiC,YAAD,EAAerD,OAAf,EAAwB;IAC9C,MAAM/F,EAAE,GAAG,IAAX;IACA,MAAMmJ,IAAI,GAAGpD,OAAO,GAAG,MAAH,GAAY,MAAhC;IACA,MAAM4D,IAAI,GAAG3J,EAAE,CAAC4O,cAAH,CAAkBxF,YAAlB,CAAb;;IACA,MAAMlK,KAAK,GAAGyK,IAAI,CAACkB,UAAL,CAAgBqI,kBAAhB,CAAmCnU,SAAnC,EAA8CoK,IAA9C,CAAd;;IACAnJ,EAAE,CAACyrC,oBAAH,CAAwBriC,YAAxB,EAAsCrD,OAAtC;IACA7G,KAAK,CAACoF,MAAN,CAAaqF,IAAb,EAAmB;MAAC5D;IAAD,CAAnB;IACA/F,EAAE,CAACsE,MAAH,CAAWqI,GAAD,IAASA,GAAG,CAACvD,YAAJ,KAAqBA,YAArB,GAAoCD,IAApC,GAA2CpK,SAA9D;EACD;;EACDiH,IAAI,CAACoD,YAAD,EAAe;IACjB,KAAKsiC,wBAAL,CAA8BtiC,YAA9B,EAA4C,KAA5C;EACD;;EACDvD,IAAI,CAACuD,YAAD,EAAe;IACjB,KAAKsiC,wBAAL,CAA8BtiC,YAA9B,EAA4C,IAA5C;EACD;;EACDmhC,mBAAmB,CAACnhC,YAAD,EAAe;IAChC,MAAMpJ,EAAE,GAAG,IAAX;IACA,MAAM2J,IAAI,GAAG3J,EAAE,CAACioC,SAAH,IAAgBjoC,EAAE,CAACioC,SAAH,CAAa7+B,YAAb,CAA7B;;IACA,IAAIO,IAAI,IAAIA,IAAI,CAACkB,UAAjB,EAA6B;MAC3BlB,IAAI,CAACkB,UAAL,CAAgBmE,QAAhB;;MACA,OAAOhP,EAAE,CAACioC,SAAH,CAAa7+B,YAAb,CAAP;IACD;EACF;;EACDuiC,OAAO,GAAG;IACR,MAAM3rC,EAAE,GAAG,IAAX;IACA,MAAM;MAAC8qB,MAAD;MAASne;IAAT,IAAgB3M,EAAtB;IACA,IAAI5M,CAAJ,EAAOyV,IAAP;IACA7I,EAAE,CAACiC,IAAH;IACAI,QAAQ,CAACF,MAAT,CAAgBnC,EAAhB;;IACA,KAAK5M,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAG7I,EAAE,CAACuJ,IAAH,CAAQoF,QAAR,CAAiBlO,MAApC,EAA4CrN,CAAC,GAAGyV,IAAhD,EAAsD,EAAEzV,CAAxD,EAA2D;MACzD4M,EAAE,CAACuqC,mBAAH,CAAuBn3C,CAAvB;IACD;;IACD4M,EAAE,CAACkG,MAAH,CAAUs/B,UAAV;;IACA,IAAI1a,MAAJ,EAAY;MACV9qB,EAAE,CAAC4rC,YAAH;MACAjxC,WAAW,CAACmwB,MAAD,EAASne,GAAT,CAAX;MACA3M,EAAE,CAAC6nC,QAAH,CAAY9c,cAAZ,CAA2Bpe,GAA3B;MACA3M,EAAE,CAAC8qB,MAAH,GAAY,IAAZ;MACA9qB,EAAE,CAAC2M,GAAH,GAAS,IAAT;IACD;;IACD3M,EAAE,CAAC44B,aAAH,CAAiB,SAAjB;IACA,OAAO4O,SAAS,CAACxnC,EAAE,CAACgK,EAAJ,CAAhB;EACD;;EACD6hC,aAAa,GAAU;IACrB,OAAO,KAAK/gB,MAAL,CAAYghB,SAAZ,CAAsB,YAAtB,CAAP;EACD;;EACD/C,UAAU,GAAG;IACX,MAAM/oC,EAAE,GAAG,IAAX;IACA,MAAMV,SAAS,GAAGU,EAAE,CAACmoC,UAArB;IACA,MAAMN,QAAQ,GAAG7nC,EAAE,CAAC6nC,QAApB;;IACA,MAAMkE,IAAI,GAAG,CAAC3sC,IAAD,EAAO6rB,QAAP,KAAoB;MAC/B4c,QAAQ,CAAC7c,gBAAT,CAA0BhrB,EAA1B,EAA8BZ,IAA9B,EAAoC6rB,QAApC;MACA3rB,SAAS,CAACF,IAAD,CAAT,GAAkB6rB,QAAlB;IACD,CAHD;;IAIA,MAAM+gB,OAAO,GAAG,CAAC5sC,IAAD,EAAO6rB,QAAP,KAAoB;MAClC,IAAI3rB,SAAS,CAACF,IAAD,CAAb,EAAqB;QACnByoC,QAAQ,CAAC3c,mBAAT,CAA6BlrB,EAA7B,EAAiCZ,IAAjC,EAAuC6rB,QAAvC;QACA,OAAO3rB,SAAS,CAACF,IAAD,CAAhB;MACD;IACF,CALD;;IAMA,IAAI6rB,QAAQ,GAAG,UAASj4B,CAAT,EAAYkD,CAAZ,EAAeE,CAAf,EAAkB;MAC/BpD,CAAC,CAACsoB,OAAF,GAAYplB,CAAZ;MACAlD,CAAC,CAACuoB,OAAF,GAAYnlB,CAAZ;;MACA4J,EAAE,CAACirC,aAAH,CAAiBj4C,CAAjB;IACD,CAJD;;IAKA+D,IAAI,CAACiJ,EAAE,CAAC6G,OAAH,CAAWolC,MAAZ,EAAqB7sC,IAAD,IAAU2sC,IAAI,CAAC3sC,IAAD,EAAO6rB,QAAP,CAAlC,CAAJ;;IACA,IAAIjrB,EAAE,CAAC6G,OAAH,CAAWiiC,UAAf,EAA2B;MACzB7d,QAAQ,GAAG,CAACvS,KAAD,EAAQD,MAAR,KAAmB;QAC5B,IAAIzY,EAAE,CAAC8qB,MAAP,EAAe;UACb9qB,EAAE,CAAC4F,MAAH,CAAU8S,KAAV,EAAiBD,MAAjB;QACD;MACF,CAJD;;MAKA,IAAIyzB,QAAJ;;MACA,MAAM3D,QAAQ,GAAG,MAAM;QACrByD,OAAO,CAAC,QAAD,EAAWzD,QAAX,CAAP;;QACAvoC,EAAE,CAACuoC,QAAH,GAAc,IAAd;QACAvoC,EAAE,CAAC4F,MAAH;;QACAmmC,IAAI,CAAC,QAAD,EAAW9gB,QAAX,CAAJ;;QACA8gB,IAAI,CAAC,QAAD,EAAWG,QAAX,CAAJ;MACD,CAND;;MAOAA,QAAQ,GAAG,MAAM;QACflsC,EAAE,CAACuoC,QAAH,GAAc,KAAd;;QACAyD,OAAO,CAAC,QAAD,EAAW/gB,QAAX,CAAP;;QACA8gB,IAAI,CAAC,QAAD,EAAWxD,QAAX,CAAJ;MACD,CAJD;;MAKA,IAAIV,QAAQ,CAACzc,UAAT,CAAoBprB,EAAE,CAAC8qB,MAAvB,CAAJ,EAAoC;QAClCyd,QAAQ;MACT,CAFD,MAEO;QACL2D,QAAQ;MACT;IACF,CAxBD,MAwBO;MACLlsC,EAAE,CAACuoC,QAAH,GAAc,IAAd;IACD;EACF;;EACDqD,YAAY,GAAG;IACb,MAAM5rC,EAAE,GAAG,IAAX;IACA,MAAMV,SAAS,GAAGU,EAAE,CAACmoC,UAArB;;IACA,IAAI,CAAC7oC,SAAL,EAAgB;MACd;IACD;;IACD,OAAOU,EAAE,CAACmoC,UAAV;IACApxC,IAAI,CAACuI,SAAD,EAAY,CAAC2rB,QAAD,EAAW7rB,IAAX,KAAoB;MAClCY,EAAE,CAAC6nC,QAAH,CAAY3c,mBAAZ,CAAgClrB,EAAhC,EAAoCZ,IAApC,EAA0C6rB,QAA1C;IACD,CAFG,CAAJ;EAGD;;EACDkhB,gBAAgB,CAAC3rC,KAAD,EAAQ2I,IAAR,EAAcqpB,OAAd,EAAuB;IACrC,MAAM4Z,MAAM,GAAG5Z,OAAO,GAAG,KAAH,GAAW,QAAjC;IACA,IAAI7oB,IAAJ,EAAUhJ,IAAV,EAAgBvN,CAAhB,EAAmByV,IAAnB;;IACA,IAAIM,IAAI,KAAK,SAAb,EAAwB;MACtBQ,IAAI,GAAG,KAAKiF,cAAL,CAAoBpO,KAAK,CAAC,CAAD,CAAL,CAAS4I,YAA7B,CAAP;MACAO,IAAI,CAACkB,UAAL,CAAgB,MAAMuhC,MAAN,GAAe,mBAA/B;IACD;;IACD,KAAKh5C,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGrI,KAAK,CAACC,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2C,EAAEzV,CAA7C,EAAgD;MAC9CuN,IAAI,GAAGH,KAAK,CAACpN,CAAD,CAAZ;MACA,MAAMyX,UAAU,GAAGlK,IAAI,IAAI,KAAKiO,cAAL,CAAoBjO,IAAI,CAACyI,YAAzB,EAAuCyB,UAAlE;;MACA,IAAIA,UAAJ,EAAgB;QACdA,UAAU,CAACuhC,MAAM,GAAG,YAAV,CAAV,CAAkCzrC,IAAI,CAACqL,OAAvC,EAAgDrL,IAAI,CAACyI,YAArD,EAAmEzI,IAAI,CAACmI,KAAxE;MACD;IACF;EACF;;EACDujC,iBAAiB,GAAG;IAClB,OAAO,KAAKzrC,OAAL,IAAgB,EAAvB;EACD;;EACD0rC,iBAAiB,CAACC,cAAD,EAAiB;IAChC,MAAMvsC,EAAE,GAAG,IAAX;IACA,MAAMwsC,UAAU,GAAGxsC,EAAE,CAACY,OAAH,IAAc,EAAjC;IACA,MAAMyD,MAAM,GAAGkoC,cAAc,CAACvtB,GAAf,CAAmB,QAA2B;MAAA,IAA1B;QAAC5V,YAAD;QAAeN;MAAf,CAA0B;MAC3D,MAAMa,IAAI,GAAG3J,EAAE,CAAC4O,cAAH,CAAkBxF,YAAlB,CAAb;;MACA,IAAI,CAACO,IAAL,EAAW;QACT,MAAM,IAAI2Z,KAAJ,CAAU,+BAA+Bla,YAAzC,CAAN;MACD;;MACD,OAAO;QACLA,YADK;QAEL4C,OAAO,EAAErC,IAAI,CAACJ,IAAL,CAAUT,KAAV,CAFJ;QAGLA;MAHK,CAAP;IAKD,CAVc,CAAf;IAWA,MAAM4Y,OAAO,GAAG,CAAC7mB,cAAc,CAACwJ,MAAD,EAASmoC,UAAT,CAA/B;;IACA,IAAI9qB,OAAJ,EAAa;MACX1hB,EAAE,CAACY,OAAH,GAAayD,MAAb;;MACArE,EAAE,CAACysC,kBAAH,CAAsBpoC,MAAtB,EAA8BmoC,UAA9B;IACD;EACF;;EACD5T,aAAa,CAAC2J,IAAD,EAAOzT,IAAP,EAAa;IACxB,OAAO,KAAKuZ,QAAL,CAAc/F,MAAd,CAAqB,IAArB,EAA2BC,IAA3B,EAAiCzT,IAAjC,CAAP;EACD;;EACD2d,kBAAkB,CAACpoC,MAAD,EAASmoC,UAAT,EAAqBE,MAArB,EAA6B;IAC7C,MAAM1sC,EAAE,GAAG,IAAX;IACA,MAAM2sC,YAAY,GAAG3sC,EAAE,CAAC6G,OAAH,CAAW+lC,KAAhC;;IACA,MAAM/oB,IAAI,GAAG,CAAC/wB,CAAD,EAAIQ,CAAJ,KAAUR,CAAC,CAAC2Y,MAAF,CAASvV,CAAC,IAAI,CAAC5C,CAAC,CAAC4vC,IAAF,CAAO9sC,CAAC,IAAIF,CAAC,CAACkT,YAAF,KAAmBhT,CAAC,CAACgT,YAArB,IAAqClT,CAAC,CAAC4S,KAAF,KAAY1S,CAAC,CAAC0S,KAA/D,CAAf,CAAvB;;IACA,MAAM+jC,WAAW,GAAGhpB,IAAI,CAAC2oB,UAAD,EAAanoC,MAAb,CAAxB;IACA,MAAMyoC,SAAS,GAAGJ,MAAM,GAAGroC,MAAH,GAAYwf,IAAI,CAACxf,MAAD,EAASmoC,UAAT,CAAxC;;IACA,IAAIK,WAAW,CAACpsC,MAAhB,EAAwB;MACtBT,EAAE,CAACmsC,gBAAH,CAAoBU,WAApB,EAAiCF,YAAY,CAACxjC,IAA9C,EAAoD,KAApD;IACD;;IACD,IAAI2jC,SAAS,CAACrsC,MAAV,IAAoBksC,YAAY,CAACxjC,IAArC,EAA2C;MACzCnJ,EAAE,CAACmsC,gBAAH,CAAoBW,SAApB,EAA+BH,YAAY,CAACxjC,IAA5C,EAAkD,IAAlD;IACD;EACF;;EACD8hC,aAAa,CAACj4C,CAAD,EAAI05C,MAAJ,EAAY;IACvB,MAAM1sC,EAAE,GAAG,IAAX;IACA,MAAM8uB,IAAI,GAAG;MAACvtB,KAAK,EAAEvO,CAAR;MAAW05C,MAAX;MAAmB/J,UAAU,EAAE;IAA/B,CAAb;;IACA,IAAI3iC,EAAE,CAAC44B,aAAH,CAAiB,aAAjB,EAAgC9J,IAAhC,MAA0C,KAA9C,EAAqD;MACnD;IACD;;IACD,MAAMpN,OAAO,GAAG1hB,EAAE,CAAC+sC,YAAH,CAAgB/5C,CAAhB,EAAmB05C,MAAnB,CAAhB;;IACA5d,IAAI,CAAC6T,UAAL,GAAkB,KAAlB;IACA3iC,EAAE,CAAC44B,aAAH,CAAiB,YAAjB,EAA+B9J,IAA/B;;IACA,IAAIpN,OAAO,IAAIoN,IAAI,CAACpN,OAApB,EAA6B;MAC3B1hB,EAAE,CAACupC,MAAH;IACD;;IACD,OAAOvpC,EAAP;EACD;;EACD+sC,YAAY,CAAC/5C,CAAD,EAAI05C,MAAJ,EAAY;IACtB,MAAM1sC,EAAE,GAAG,IAAX;IACA,MAAM;MAACY,OAAO,EAAE4rC,UAAU,GAAG,EAAvB;MAA2B3lC;IAA3B,IAAsC7G,EAA5C;IACA,MAAM2sC,YAAY,GAAG9lC,OAAO,CAAC+lC,KAA7B;IACA,MAAM/mB,gBAAgB,GAAG6mB,MAAzB;IACA,IAAIroC,MAAM,GAAG,EAAb;IACA,IAAIqd,OAAO,GAAG,KAAd;IACA,IAAIsrB,SAAS,GAAG,IAAhB;;IACA,IAAIh6C,CAAC,CAACoM,IAAF,KAAW,UAAf,EAA2B;MACzBiF,MAAM,GAAGrE,EAAE,CAACwrC,yBAAH,CAA6Bx4C,CAA7B,EAAgC25C,YAAY,CAACxjC,IAA7C,EAAmDwjC,YAAnD,EAAiE9mB,gBAAjE,CAAT;MACAmnB,SAAS,GAAGh6C,CAAC,CAACoM,IAAF,KAAW,OAAX,GAAqBY,EAAE,CAACkoC,UAAxB,GAAqCl1C,CAAjD;IACD;;IACDgN,EAAE,CAACkoC,UAAH,GAAgB,IAAhB;IACAjwC,QAAQ,CAAC4O,OAAO,CAAComC,OAAT,EAAkB,CAACj6C,CAAD,EAAIqR,MAAJ,EAAYrE,EAAZ,CAAlB,EAAmCA,EAAnC,CAAR;;IACA,IAAIhN,CAAC,CAACoM,IAAF,KAAW,SAAX,IAAwBpM,CAAC,CAACoM,IAAF,KAAW,OAAnC,IAA8CpM,CAAC,CAACoM,IAAF,KAAW,aAA7D,EAA4E;MAC1E,IAAI3I,cAAc,CAACzD,CAAD,EAAIgN,EAAE,CAACkS,SAAP,EAAkBlS,EAAE,CAAC8lB,WAArB,CAAlB,EAAqD;QACnD7tB,QAAQ,CAAC4O,OAAO,CAAC4Y,OAAT,EAAkB,CAACzsB,CAAD,EAAIqR,MAAJ,EAAYrE,EAAZ,CAAlB,EAAmCA,EAAnC,CAAR;MACD;IACF;;IACD0hB,OAAO,GAAG,CAAC7mB,cAAc,CAACwJ,MAAD,EAASmoC,UAAT,CAAzB;;IACA,IAAI9qB,OAAO,IAAIgrB,MAAf,EAAuB;MACrB1sC,EAAE,CAACY,OAAH,GAAayD,MAAb;;MACArE,EAAE,CAACysC,kBAAH,CAAsBpoC,MAAtB,EAA8BmoC,UAA9B,EAA0CE,MAA1C;IACD;;IACD1sC,EAAE,CAACkoC,UAAH,GAAgB8E,SAAhB;IACA,OAAOtrB,OAAP;EACD;;AAtsBS;;AAwsBZ,MAAMwrB,iBAAiB,GAAG,MAAMn2C,IAAI,CAAC2wC,KAAK,CAACF,SAAP,EAAmBvoC,KAAD,IAAWA,KAAK,CAACopC,QAAN,CAAezF,UAAf,EAA7B,CAApC;;AACA,MAAMuK,UAAU,GAAG,IAAnB;AACAhoC,MAAM,CAACioC,gBAAP,CAAwB1F,KAAxB,EAA+B;EAC7Bj0C,QAAQ,EAAE;IACR05C,UADQ;IAER7lC,KAAK,EAAE7T;EAFC,CADmB;EAK7B+zC,SAAS,EAAE;IACT2F,UADS;IAET7lC,KAAK,EAAEkgC;EAFE,CALkB;EAS7BruC,SAAS,EAAE;IACTg0C,UADS;IAET7lC,KAAK,EAAEnO;EAFE,CATkB;EAa7B8oC,QAAQ,EAAE;IACRkL,UADQ;IAER7lC,KAAK,EAAE26B;EAFC,CAbmB;EAiB7B0E,OAAO,EAAE;IACPwG,UADO;IAEP7lC,KAAK,EAAEq/B;EAFA,CAjBoB;EAqB7Bc,QAAQ,EAAE;IACR0F,UADQ;IAER7lC,KAAK,EAAEmgC;EAFC,CArBmB;EAyB7BhI,QAAQ,EAAE;IACR0N,UADQ;IAER7lC,KAAK,EAAE,YAAc;MACnB26B,QAAQ,CAACvgC,GAAT,CAAa,YAAb;MACAwrC,iBAAiB;IAClB;EALO,CAzBmB;EAgC7BnN,UAAU,EAAE;IACVoN,UADU;IAEV7lC,KAAK,EAAE,YAAc;MACnB26B,QAAQ,CAAC9/B,MAAT,CAAgB,YAAhB;MACA+qC,iBAAiB;IAClB;EALS;AAhCiB,CAA/B;;AAyCA,SAASG,OAAT,CAAiB1gC,GAAjB,EAAsBX,OAAtB,EAA+B;EAC7B,MAAM;IAACwP,UAAD;IAAaC,QAAb;IAAuB6xB,WAAvB;IAAoCp3C,CAApC;IAAuCE,CAAvC;IAA0CqmB,WAA1C;IAAuDD;EAAvD,IAAsExQ,OAA5E;EACA,IAAIuhC,WAAW,GAAGD,WAAW,GAAG7wB,WAAhC;EACA9P,GAAG,CAAC+xB,SAAJ;EACA/xB,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAcqmB,WAAd,EAA2BjB,UAAU,GAAG+xB,WAAxC,EAAqD9xB,QAAQ,GAAG8xB,WAAhE;;EACA,IAAI/wB,WAAW,GAAG8wB,WAAlB,EAA+B;IAC7BC,WAAW,GAAGD,WAAW,GAAG9wB,WAA5B;IACA7P,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAcomB,WAAd,EAA2Bf,QAAQ,GAAG8xB,WAAtC,EAAmD/xB,UAAU,GAAG+xB,WAAhE,EAA6E,IAA7E;EACD,CAHD,MAGO;IACL5gC,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAck3C,WAAd,EAA2B7xB,QAAQ,GAAG5lB,OAAtC,EAA+C2lB,UAAU,GAAG3lB,OAA5D;EACD;;EACD8W,GAAG,CAAC6gC,SAAJ;EACA7gC,GAAG,CAACoF,IAAJ;AACD;;AACD,SAAS07B,OAAT,CAAiB9gC,GAAjB,EAAsBX,OAAtB,EAA+B;EAC7B,MAAM;IAAC9V,CAAD;IAAIE,CAAJ;IAAOolB,UAAP;IAAmBC,QAAnB;IAA6B6xB;EAA7B,IAA4CthC,OAAlD;EACA,MAAMyQ,WAAW,GAAG7c,IAAI,CAACmC,GAAL,CAASiK,OAAO,CAACyQ,WAAR,GAAsB6wB,WAA/B,EAA4C,CAA5C,CAApB;EACA,MAAM9wB,WAAW,GAAGxQ,OAAO,CAACwQ,WAAR,GAAsB8wB,WAA1C;EACA3gC,GAAG,CAAC+xB,SAAJ;EACA/xB,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAcqmB,WAAd,EAA2BjB,UAA3B,EAAuCC,QAAvC;EACA9O,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAcomB,WAAd,EAA2Bf,QAA3B,EAAqCD,UAArC,EAAiD,IAAjD;EACA7O,GAAG,CAAC6gC,SAAJ;AACD;;AACD,SAASE,OAAT,CAAiB/gC,GAAjB,EAAsBX,OAAtB,EAA+B;EAC7B,IAAIA,OAAO,CAAC2hC,WAAZ,EAAyB;IACvB3hC,OAAO,CAACyP,QAAR,GAAmBzP,OAAO,CAACwP,UAAR,GAAqBjmB,GAAxC;IACAk4C,OAAO,CAAC9gC,GAAD,EAAMX,OAAN,CAAP;;IACA,KAAK,IAAI5Y,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4Y,OAAO,CAAC2hC,WAA5B,EAAyC,EAAEv6C,CAA3C,EAA8C;MAC5CuZ,GAAG,CAACsW,IAAJ;IACD;EACF;;EACD,IAAI,CAACnK,KAAK,CAAC9M,OAAO,CAACkP,aAAT,CAAV,EAAmC;IACjClP,OAAO,CAACyP,QAAR,GAAmBzP,OAAO,CAACwP,UAAR,GAAqBxP,OAAO,CAACkP,aAAR,GAAwB3lB,GAAhE;EACD;;EACDk4C,OAAO,CAAC9gC,GAAD,EAAMX,OAAN,CAAP;EACAW,GAAG,CAACsW,IAAJ;AACD;;AACD,SAAS2qB,qBAAT,CAA+BjhC,GAA/B,EAAoCX,OAApC,EAA6C6hC,KAA7C,EAAoD;EAClD,MAAM;IAAC33C,CAAD;IAAIE,CAAJ;IAAOolB,UAAP;IAAmBC,QAAnB;IAA6B6xB;EAA7B,IAA4CthC,OAAlD;EACA,MAAMyQ,WAAW,GAAG7c,IAAI,CAACmC,GAAL,CAASiK,OAAO,CAACyQ,WAAR,GAAsB6wB,WAA/B,EAA4C,CAA5C,CAApB;EACA,MAAM9wB,WAAW,GAAGxQ,OAAO,CAACwQ,WAAR,GAAsB8wB,WAA1C;EACA,IAAIl6C,CAAJ;;EACA,IAAIy6C,KAAJ,EAAW;IACT7hC,OAAO,CAACyP,QAAR,GAAmBzP,OAAO,CAACwP,UAAR,GAAqBjmB,GAAxC;IACA83C,OAAO,CAAC1gC,GAAD,EAAMX,OAAN,CAAP;IACAA,OAAO,CAACyP,QAAR,GAAmBA,QAAnB;;IACA,IAAIzP,OAAO,CAACyP,QAAR,KAAqBzP,OAAO,CAACwP,UAAjC,EAA6C;MAC3CxP,OAAO,CAACyP,QAAR,IAAoBlmB,GAApB;MACAyW,OAAO,CAAC2hC,WAAR;IACD;EACF;;EACDhhC,GAAG,CAAC+xB,SAAJ;EACA/xB,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAcomB,WAAd,EAA2BhB,UAAU,GAAGjmB,GAAxC,EAA6CimB,UAA7C,EAAyD,IAAzD;;EACA,KAAKpoB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4Y,OAAO,CAAC2hC,WAAxB,EAAqC,EAAEv6C,CAAvC,EAA0C;IACxCuZ,GAAG,CAACkyB,MAAJ;EACD;;EACDlyB,GAAG,CAAC+xB,SAAJ;EACA/xB,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAcqmB,WAAd,EAA2BjB,UAA3B,EAAuCA,UAAU,GAAGjmB,GAApD;;EACA,KAAKnC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4Y,OAAO,CAAC2hC,WAAxB,EAAqC,EAAEv6C,CAAvC,EAA0C;IACxCuZ,GAAG,CAACkyB,MAAJ;EACD;AACF;;AACD,SAAShO,UAAT,CAAoBlkB,GAApB,EAAyBX,OAAzB,EAAkC;EAChC,MAAM;IAAC9V,CAAD;IAAIE,CAAJ;IAAOolB,UAAP;IAAmBC,QAAnB;IAA6B6xB,WAA7B;IAA0CzmC;EAA1C,IAAqDmF,OAA3D;EACA,MAAMyQ,WAAW,GAAGzQ,OAAO,CAACyQ,WAA5B;EACA,MAAMD,WAAW,GAAGxQ,OAAO,CAACwQ,WAAR,GAAsB8wB,WAA1C;EACA,MAAMO,KAAK,GAAGhnC,OAAO,CAAC0X,WAAR,KAAwB,OAAtC;;EACA,IAAI,CAAC1X,OAAO,CAAC2X,WAAb,EAA0B;IACxB;EACD;;EACD,IAAIqvB,KAAJ,EAAW;IACTlhC,GAAG,CAAC4S,SAAJ,GAAgB1Y,OAAO,CAAC2X,WAAR,GAAsB,CAAtC;IACA7R,GAAG,CAACmhC,QAAJ,GAAe,OAAf;EACD,CAHD,MAGO;IACLnhC,GAAG,CAAC4S,SAAJ,GAAgB1Y,OAAO,CAAC2X,WAAxB;IACA7R,GAAG,CAACmhC,QAAJ,GAAe,OAAf;EACD;;EACD,IAAI9hC,OAAO,CAAC2hC,WAAZ,EAAyB;IACvBC,qBAAqB,CAACjhC,GAAD,EAAMX,OAAN,EAAe6hC,KAAf,CAArB;EACD;;EACD,IAAIA,KAAJ,EAAW;IACTR,OAAO,CAAC1gC,GAAD,EAAMX,OAAN,CAAP;EACD;;EACDW,GAAG,CAAC+xB,SAAJ;EACA/xB,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAcqmB,WAAd,EAA2BjB,UAA3B,EAAuCC,QAAvC;EACA9O,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAcomB,WAAd,EAA2Bf,QAA3B,EAAqCD,UAArC,EAAiD,IAAjD;EACA7O,GAAG,CAAC6gC,SAAJ;EACA7gC,GAAG,CAACkyB,MAAJ;AACD;;AACD,MAAMkP,UAAN,SAAyBxe,OAAzB,CAAiC;EAC/B9wB,WAAW,CAAC0E,GAAD,EAAM;IACf;IACA,KAAK0D,OAAL,GAAe9H,SAAf;IACA,KAAKmc,aAAL,GAAqBnc,SAArB;IACA,KAAKyc,UAAL,GAAkBzc,SAAlB;IACA,KAAK0c,QAAL,GAAgB1c,SAAhB;IACA,KAAKyd,WAAL,GAAmBzd,SAAnB;IACA,KAAK0d,WAAL,GAAmB1d,SAAnB;IACA,KAAKuuC,WAAL,GAAmB,CAAnB;IACA,KAAKK,WAAL,GAAmB,CAAnB;;IACA,IAAIxqC,GAAJ,EAAS;MACPgC,MAAM,CAACqC,MAAP,CAAc,IAAd,EAAoBrE,GAApB;IACD;EACF;;EACD6iB,OAAO,CAACgoB,MAAD,EAASC,MAAT,EAAiBpoB,gBAAjB,EAAmC;IACxC,MAAMpL,KAAK,GAAG,KAAKgV,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0B5J,gBAA1B,CAAd;IACA,MAAM;MAAC5J,KAAD;MAAQoK;IAAR,IAAoBtrB,iBAAiB,CAAC0f,KAAD,EAAQ;MAACvkB,CAAC,EAAE83C,MAAJ;MAAY53C,CAAC,EAAE63C;IAAf,CAAR,CAA3C;IACA,MAAM;MAACzyB,UAAD;MAAaC,QAAb;MAAuBe,WAAvB;MAAoCC,WAApC;MAAiDvB;IAAjD,IAAkE,KAAKuU,QAAL,CAAc,CACpF,YADoF,EAEpF,UAFoF,EAGpF,aAHoF,EAIpF,aAJoF,EAKpF,eALoF,CAAd,EAMrE5J,gBANqE,CAAxE;;IAOA,MAAMqoB,aAAa,GAAGhzB,aAAa,IAAI3lB,GAAjB,IAAwBI,aAAa,CAACsmB,KAAD,EAAQT,UAAR,EAAoBC,QAApB,CAA3D;;IACA,MAAM0yB,YAAY,GAAI9nB,QAAQ,IAAI7J,WAAZ,IAA2B6J,QAAQ,IAAI5J,WAA7D;IACA,OAAQyxB,aAAa,IAAIC,YAAzB;EACD;;EACD/nB,cAAc,CAACP,gBAAD,EAAmB;IAC/B,MAAM;MAAC3vB,CAAD;MAAIE,CAAJ;MAAOolB,UAAP;MAAmBC,QAAnB;MAA6Be,WAA7B;MAA0CC;IAA1C,IAAyD,KAAKgT,QAAL,CAAc,CAC3E,GAD2E,EAE3E,GAF2E,EAG3E,YAH2E,EAI3E,UAJ2E,EAK3E,aAL2E,EAM3E,aAN2E,CAAd,EAO5D5J,gBAP4D,CAA/D;IAQA,MAAMuoB,SAAS,GAAG,CAAC5yB,UAAU,GAAGC,QAAd,IAA0B,CAA5C;IACA,MAAM4yB,UAAU,GAAG,CAAC7xB,WAAW,GAAGC,WAAf,IAA8B,CAAjD;IACA,OAAO;MACLvmB,CAAC,EAAEA,CAAC,GAAG0J,IAAI,CAAC+b,GAAL,CAASyyB,SAAT,IAAsBC,UADxB;MAELj4C,CAAC,EAAEA,CAAC,GAAGwJ,IAAI,CAACic,GAAL,CAASuyB,SAAT,IAAsBC;IAFxB,CAAP;EAID;;EACD7e,eAAe,CAAC3J,gBAAD,EAAmB;IAChC,OAAO,KAAKO,cAAL,CAAoBP,gBAApB,CAAP;EACD;;EACDnlB,IAAI,CAACiM,GAAD,EAAM;IACR,MAAM3M,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAMsT,MAAM,GAAGtT,OAAO,CAACsT,MAAR,IAAkB,CAAjC;IACAna,EAAE,CAACstC,WAAH,GAAkBzmC,OAAO,CAAC0X,WAAR,KAAwB,OAAzB,GAAoC,IAApC,GAA2C,CAA5D;IACAve,EAAE,CAAC2tC,WAAH,GAAiB/tC,IAAI,CAACgE,KAAL,CAAW5D,EAAE,CAACkb,aAAH,GAAmB3lB,GAA9B,CAAjB;;IACA,IAAIyK,EAAE,CAACkb,aAAH,KAAqB,CAArB,IAA0Blb,EAAE,CAACwc,WAAH,GAAiB,CAA3C,IAAgDxc,EAAE,CAACyc,WAAH,GAAiB,CAArE,EAAwE;MACtE;IACD;;IACD9P,GAAG,CAACqxB,IAAJ;;IACA,IAAI7jB,MAAM,IAAIna,EAAE,CAACkb,aAAH,GAAmB3lB,GAAjC,EAAsC;MACpC,MAAM64C,SAAS,GAAG,CAACpuC,EAAE,CAACwb,UAAH,GAAgBxb,EAAE,CAACyb,QAApB,IAAgC,CAAlD;MACA9O,GAAG,CAAC2hC,SAAJ,CAAc1uC,IAAI,CAAC+b,GAAL,CAASyyB,SAAT,IAAsBj0B,MAApC,EAA4Cva,IAAI,CAACic,GAAL,CAASuyB,SAAT,IAAsBj0B,MAAlE;IACD;;IACDxN,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAACuY,eAAxB;IACAzS,GAAG,CAAC0S,WAAJ,GAAkBxY,OAAO,CAACyY,WAA1B;IACAouB,OAAO,CAAC/gC,GAAD,EAAM3M,EAAN,CAAP;IACA6wB,UAAU,CAAClkB,GAAD,EAAM3M,EAAN,CAAV;IACA2M,GAAG,CAACuxB,OAAJ;EACD;;AAnE8B;;AAqEjC6P,UAAU,CAAC/jC,EAAX,GAAgB,KAAhB;AACA+jC,UAAU,CAACt6C,QAAX,GAAsB;EACpB8qB,WAAW,EAAE,QADO;EAEpBe,WAAW,EAAE,MAFO;EAGpBd,WAAW,EAAE,CAHO;EAIpBrE,MAAM,EAAE,CAJY;EAKpB8B,KAAK,EAAEld;AALa,CAAtB;AAOAgvC,UAAU,CAACle,aAAX,GAA2B;EACzBzQ,eAAe,EAAE;AADQ,CAA3B;;AAIA,SAASmvB,QAAT,CAAkB5hC,GAAlB,EAAuB6hC,EAAvB,EAA2B;EACzB7hC,GAAG,CAAC8hC,OAAJ,GAAcD,EAAE,CAACE,cAAjB;EACA/hC,GAAG,CAAC6xB,WAAJ,CAAgBgQ,EAAE,CAACrd,UAAnB;EACAxkB,GAAG,CAAC8xB,cAAJ,GAAqB+P,EAAE,CAACpd,gBAAxB;EACAzkB,GAAG,CAACmhC,QAAJ,GAAeU,EAAE,CAACG,eAAlB;EACAhiC,GAAG,CAAC4S,SAAJ,GAAgBivB,EAAE,CAAChwB,WAAnB;EACA7R,GAAG,CAAC0S,WAAJ,GAAkBmvB,EAAE,CAAClvB,WAArB;AACD;;AACD,SAASsf,MAAT,CAAgBjyB,GAAhB,EAAqBiiC,QAArB,EAA+BxrC,MAA/B,EAAuC;EACrCuJ,GAAG,CAACiyB,MAAJ,CAAWx7B,MAAM,CAAClN,CAAlB,EAAqBkN,MAAM,CAAChN,CAA5B;AACD;;AACD,SAASy4C,aAAT,CAAuBhoC,OAAvB,EAAgC;EAC9B,IAAIA,OAAO,CAACioC,OAAZ,EAAqB;IACnB,OAAOjzC,cAAP;EACD;;EACD,IAAIgL,OAAO,CAACkoC,OAAZ,EAAqB;IACnB,OAAOhzC,cAAP;EACD;;EACD,OAAO6iC,MAAP;AACD;;AACD,SAASoQ,QAAT,CAAkBx0B,MAAlB,EAA0By0B,OAA1B,EAAmCvnB,MAAnC,EAA2C;EACzCA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EACA,MAAM1X,KAAK,GAAGwK,MAAM,CAAC/Z,MAArB;EACA,MAAMX,KAAK,GAAGF,IAAI,CAACmC,GAAL,CAAS2lB,MAAM,CAAC5nB,KAAP,IAAgB,CAAzB,EAA4BmvC,OAAO,CAACnvC,KAApC,CAAd;EACA,MAAMkI,GAAG,GAAGpI,IAAI,CAACC,GAAL,CAAS6nB,MAAM,CAAC1f,GAAP,IAAcgI,KAAK,GAAG,CAA/B,EAAkCi/B,OAAO,CAACjnC,GAA1C,CAAZ;EACA,OAAO;IACLgI,KADK;IAELlQ,KAFK;IAGLiE,IAAI,EAAEkrC,OAAO,CAAClrC,IAHT;IAIL8E,IAAI,EAAEb,GAAG,GAAGlI,KAAN,GAAckQ,KAAK,GAAGhI,GAAR,GAAclI,KAA5B,GAAoCkI,GAAG,GAAGlI;EAJ3C,CAAP;AAMD;;AACD,SAASovC,WAAT,CAAqBviC,GAArB,EAA0BsT,IAA1B,EAAgCgvB,OAAhC,EAAyCvnB,MAAzC,EAAiD;EAC/C,MAAM;IAAClN,MAAD;IAAS3T;EAAT,IAAoBoZ,IAA1B;EACA,MAAM;IAACjQ,KAAD;IAAQlQ,KAAR;IAAeiE,IAAf;IAAqB8E;EAArB,IAA6BmmC,QAAQ,CAACx0B,MAAD,EAASy0B,OAAT,EAAkBvnB,MAAlB,CAA3C;EACA,MAAMynB,UAAU,GAAGN,aAAa,CAAChoC,OAAD,CAAhC;EACA,IAAI;IAACwN,IAAI,GAAG,IAAR;IAActM;EAAd,IAAyB2f,MAAM,IAAI,EAAvC;EACA,IAAIt0B,CAAJ,EAAOqnB,KAAP,EAActK,IAAd;;EACA,KAAK/c,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIyV,IAAjB,EAAuB,EAAEzV,CAAzB,EAA4B;IAC1BqnB,KAAK,GAAGD,MAAM,CAAC,CAAC1a,KAAK,IAAIiI,OAAO,GAAGc,IAAI,GAAGzV,CAAV,GAAcA,CAAzB,CAAN,IAAqC4c,KAAtC,CAAd;;IACA,IAAIyK,KAAK,CAACE,IAAV,EAAgB;MACd;IACD,CAFD,MAEO,IAAItG,IAAJ,EAAU;MACf1H,GAAG,CAACgyB,MAAJ,CAAWlkB,KAAK,CAACvkB,CAAjB,EAAoBukB,KAAK,CAACrkB,CAA1B;MACAie,IAAI,GAAG,KAAP;IACD,CAHM,MAGA;MACL86B,UAAU,CAACxiC,GAAD,EAAMwD,IAAN,EAAYsK,KAAZ,EAAmB1S,OAAnB,EAA4BlB,OAAO,CAACioC,OAApC,CAAV;IACD;;IACD3+B,IAAI,GAAGsK,KAAP;EACD;;EACD,IAAI1W,IAAJ,EAAU;IACR0W,KAAK,GAAGD,MAAM,CAAC,CAAC1a,KAAK,IAAIiI,OAAO,GAAGc,IAAH,GAAU,CAArB,CAAN,IAAiCmH,KAAlC,CAAd;IACAm/B,UAAU,CAACxiC,GAAD,EAAMwD,IAAN,EAAYsK,KAAZ,EAAmB1S,OAAnB,EAA4BlB,OAAO,CAACioC,OAApC,CAAV;EACD;;EACD,OAAO,CAAC,CAAC/qC,IAAT;AACD;;AACD,SAASqrC,eAAT,CAAyBziC,GAAzB,EAA8BsT,IAA9B,EAAoCgvB,OAApC,EAA6CvnB,MAA7C,EAAqD;EACnD,MAAMlN,MAAM,GAAGyF,IAAI,CAACzF,MAApB;EACA,MAAM;IAACxK,KAAD;IAAQlQ,KAAR;IAAe+I;EAAf,IAAuBmmC,QAAQ,CAACx0B,MAAD,EAASy0B,OAAT,EAAkBvnB,MAAlB,CAArC;EACA,MAAM;IAACrT,IAAI,GAAG,IAAR;IAActM;EAAd,IAAyB2f,MAAM,IAAI,EAAzC;EACA,IAAI2nB,IAAI,GAAG,CAAX;EACA,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIl8C,CAAJ,EAAOqnB,KAAP,EAAc80B,KAAd,EAAqBjzB,IAArB,EAA2BF,IAA3B,EAAiCozB,KAAjC;;EACA,MAAMC,UAAU,GAAI3mC,KAAD,IAAW,CAAChJ,KAAK,IAAIiI,OAAO,GAAGc,IAAI,GAAGC,KAAV,GAAkBA,KAA7B,CAAN,IAA6CkH,KAA3E;;EACA,MAAM0/B,KAAK,GAAG,MAAM;IAClB,IAAIpzB,IAAI,KAAKF,IAAb,EAAmB;MACjBzP,GAAG,CAACiyB,MAAJ,CAAWyQ,IAAX,EAAiBjzB,IAAjB;MACAzP,GAAG,CAACiyB,MAAJ,CAAWyQ,IAAX,EAAiB/yB,IAAjB;MACA3P,GAAG,CAACiyB,MAAJ,CAAWyQ,IAAX,EAAiBG,KAAjB;IACD;EACF,CAND;;EAOA,IAAIn7B,IAAJ,EAAU;IACRoG,KAAK,GAAGD,MAAM,CAACi1B,UAAU,CAAC,CAAD,CAAX,CAAd;IACA9iC,GAAG,CAACgyB,MAAJ,CAAWlkB,KAAK,CAACvkB,CAAjB,EAAoBukB,KAAK,CAACrkB,CAA1B;EACD;;EACD,KAAKhD,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIyV,IAAjB,EAAuB,EAAEzV,CAAzB,EAA4B;IAC1BqnB,KAAK,GAAGD,MAAM,CAACi1B,UAAU,CAACr8C,CAAD,CAAX,CAAd;;IACA,IAAIqnB,KAAK,CAACE,IAAV,EAAgB;MACd;IACD;;IACD,MAAMzkB,CAAC,GAAGukB,KAAK,CAACvkB,CAAhB;IACA,MAAME,CAAC,GAAGqkB,KAAK,CAACrkB,CAAhB;IACA,MAAMu5C,MAAM,GAAGz5C,CAAC,GAAG,CAAnB;;IACA,IAAIy5C,MAAM,KAAKJ,KAAf,EAAsB;MACpB,IAAIn5C,CAAC,GAAGkmB,IAAR,EAAc;QACZA,IAAI,GAAGlmB,CAAP;MACD,CAFD,MAEO,IAAIA,CAAC,GAAGgmB,IAAR,EAAc;QACnBA,IAAI,GAAGhmB,CAAP;MACD;;MACDi5C,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAT,GAAgBn5C,CAAjB,IAAsB,EAAEo5C,MAA/B;IACD,CAPD,MAOO;MACLI,KAAK;MACL/iC,GAAG,CAACiyB,MAAJ,CAAW1oC,CAAX,EAAcE,CAAd;MACAm5C,KAAK,GAAGI,MAAR;MACAL,MAAM,GAAG,CAAT;MACAhzB,IAAI,GAAGF,IAAI,GAAGhmB,CAAd;IACD;;IACDo5C,KAAK,GAAGp5C,CAAR;EACD;;EACDs5C,KAAK;AACN;;AACD,SAASE,iBAAT,CAA2B3vB,IAA3B,EAAiC;EAC/B,MAAMnY,IAAI,GAAGmY,IAAI,CAACpZ,OAAlB;EACA,MAAMsqB,UAAU,GAAGrpB,IAAI,CAACqpB,UAAL,IAAmBrpB,IAAI,CAACqpB,UAAL,CAAgB1wB,MAAtD;EACA,MAAMovC,WAAW,GAAG,CAAC5vB,IAAI,CAACK,UAAN,IAAoB,CAACL,IAAI,CAACnc,KAA1B,IAAmC,CAACgE,IAAI,CAACinC,OAAzC,IAAoD,CAACjnC,IAAI,CAACgnC,OAA1D,IAAqE,CAAC3d,UAA1F;EACA,OAAO0e,WAAW,GAAGT,eAAH,GAAqBF,WAAvC;AACD;;AACD,SAASY,uBAAT,CAAiCjpC,OAAjC,EAA0C;EACxC,IAAIA,OAAO,CAACioC,OAAZ,EAAqB;IACnB,OAAOvzC,qBAAP;EACD;;EACD,IAAIsL,OAAO,CAACkoC,OAAZ,EAAqB;IACnB,OAAOtzC,oBAAP;EACD;;EACD,OAAOE,YAAP;AACD;;AACD,SAASo0C,mBAAT,CAA6BpjC,GAA7B,EAAkCsT,IAAlC,EAAwCngB,KAAxC,EAA+CkQ,KAA/C,EAAsD;EACpD,IAAIggC,IAAI,GAAG/vB,IAAI,CAACgwB,KAAhB;;EACA,IAAI,CAACD,IAAL,EAAW;IACTA,IAAI,GAAG/vB,IAAI,CAACgwB,KAAL,GAAa,IAAIC,MAAJ,EAApB;;IACA,IAAIjwB,IAAI,CAAC+vB,IAAL,CAAUA,IAAV,EAAgBlwC,KAAhB,EAAuBkQ,KAAvB,CAAJ,EAAmC;MACjCggC,IAAI,CAACxC,SAAL;IACD;EACF;;EACD7gC,GAAG,CAACkyB,MAAJ,CAAWmR,IAAX;AACD;;AACD,SAASG,gBAAT,CAA0BxjC,GAA1B,EAA+BsT,IAA/B,EAAqCngB,KAArC,EAA4CkQ,KAA5C,EAAmD;EACjDrD,GAAG,CAAC+xB,SAAJ;;EACA,IAAIze,IAAI,CAAC+vB,IAAL,CAAUrjC,GAAV,EAAe7M,KAAf,EAAsBkQ,KAAtB,CAAJ,EAAkC;IAChCrD,GAAG,CAAC6gC,SAAJ;EACD;;EACD7gC,GAAG,CAACkyB,MAAJ;AACD;;AACD,MAAMuR,SAAS,GAAG,OAAOF,MAAP,KAAkB,UAApC;AACA,MAAMG,UAAU,GAAGD,SAAS,GAAGL,mBAAH,GAAyBI,gBAArD;;AACA,MAAMG,WAAN,SAA0B/gB,OAA1B,CAAkC;EAChC9wB,WAAW,CAAC0E,GAAD,EAAM;IACf;IACA,KAAKqd,QAAL,GAAgB,IAAhB;IACA,KAAK3Z,OAAL,GAAe9H,SAAf;IACA,KAAK+E,KAAL,GAAa/E,SAAb;IACA,KAAK+jB,SAAL,GAAiB/jB,SAAjB;IACA,KAAKkxC,KAAL,GAAalxC,SAAb;IACA,KAAKwxC,OAAL,GAAexxC,SAAf;IACA,KAAKyxC,SAAL,GAAiBzxC,SAAjB;IACA,KAAKuhB,UAAL,GAAkB,KAAlB;IACA,KAAKmwB,cAAL,GAAsB,KAAtB;;IACA,IAAIttC,GAAJ,EAAS;MACPgC,MAAM,CAACqC,MAAP,CAAc,IAAd,EAAoBrE,GAApB;IACD;EACF;;EACD6d,mBAAmB,CAAC9O,SAAD,EAAY;IAC7B,MAAMlS,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;;IACA,IAAIA,OAAO,CAACkoC,OAAR,IAAmB,CAACloC,OAAO,CAACioC,OAA5B,IAAuC,CAAC9uC,EAAE,CAACywC,cAA/C,EAA+D;MAC7D,MAAM1sC,IAAI,GAAG8C,OAAO,CAAC4Z,QAAR,GAAmBzgB,EAAE,CAAC8D,KAAtB,GAA8B9D,EAAE,CAAC8iB,SAA9C;;MACA7nB,0BAA0B,CAAC+E,EAAE,CAACuwC,OAAJ,EAAa1pC,OAAb,EAAsBqL,SAAtB,EAAiCnO,IAAjC,CAA1B;;MACA/D,EAAE,CAACywC,cAAH,GAAoB,IAApB;IACD;EACF;;EACS,IAANj2B,MAAM,CAACA,MAAD,EAAS;IACjB,MAAMxa,EAAE,GAAG,IAAX;IACAA,EAAE,CAACuwC,OAAH,GAAa/1B,MAAb;IACA,OAAOxa,EAAE,CAACwwC,SAAV;IACA,OAAOxwC,EAAE,CAACiwC,KAAV;IACAjwC,EAAE,CAACywC,cAAH,GAAoB,KAApB;EACD;;EACS,IAANj2B,MAAM,GAAG;IACX,OAAO,KAAK+1B,OAAZ;EACD;;EACW,IAARG,QAAQ,GAAG;IACb,OAAO,KAAKF,SAAL,KAAmB,KAAKA,SAAL,GAAiBr1C,gBAAgB,CAAC,IAAD,CAApD,CAAP;EACD;;EACDw3B,KAAK,GAAG;IACN,MAAM+d,QAAQ,GAAG,KAAKA,QAAtB;IACA,MAAMl2B,MAAM,GAAG,KAAKA,MAApB;IACA,OAAOk2B,QAAQ,CAACjwC,MAAT,IAAmB+Z,MAAM,CAACk2B,QAAQ,CAAC,CAAD,CAAR,CAAY5wC,KAAb,CAAhC;EACD;;EACD8Y,IAAI,GAAG;IACL,MAAM83B,QAAQ,GAAG,KAAKA,QAAtB;IACA,MAAMl2B,MAAM,GAAG,KAAKA,MAApB;IACA,MAAMxK,KAAK,GAAG0gC,QAAQ,CAACjwC,MAAvB;IACA,OAAOuP,KAAK,IAAIwK,MAAM,CAACk2B,QAAQ,CAAC1gC,KAAK,GAAG,CAAT,CAAR,CAAoBhI,GAArB,CAAtB;EACD;;EACD2oC,WAAW,CAACl2B,KAAD,EAAQ0lB,QAAR,EAAkB;IAC3B,MAAMngC,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAMS,KAAK,GAAGmT,KAAK,CAAC0lB,QAAD,CAAnB;IACA,MAAM3lB,MAAM,GAAGxa,EAAE,CAACwa,MAAlB;;IACA,MAAMk2B,QAAQ,GAAGr1C,cAAc,CAAC2E,EAAD,EAAK;MAACmgC,QAAD;MAAWrgC,KAAK,EAAEwH,KAAlB;MAAyBU,GAAG,EAAEV;IAA9B,CAAL,CAA/B;;IACA,IAAI,CAACopC,QAAQ,CAACjwC,MAAd,EAAsB;MACpB;IACD;;IACD,MAAM+yB,MAAM,GAAG,EAAf;;IACA,MAAMod,YAAY,GAAGd,uBAAuB,CAACjpC,OAAD,CAA5C;;IACA,IAAIzT,CAAJ,EAAOyV,IAAP;;IACA,KAAKzV,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAG6nC,QAAQ,CAACjwC,MAA5B,EAAoCrN,CAAC,GAAGyV,IAAxC,EAA8C,EAAEzV,CAAhD,EAAmD;MACjD,MAAM;QAAC0M,KAAD;QAAQkI;MAAR,IAAe0oC,QAAQ,CAACt9C,CAAD,CAA7B;MACA,MAAMkrC,EAAE,GAAG9jB,MAAM,CAAC1a,KAAD,CAAjB;MACA,MAAMy+B,EAAE,GAAG/jB,MAAM,CAACxS,GAAD,CAAjB;;MACA,IAAIs2B,EAAE,KAAKC,EAAX,EAAe;QACb/K,MAAM,CAAC/xB,IAAP,CAAY68B,EAAZ;QACA;MACD;;MACD,MAAMtpC,CAAC,GAAG4K,IAAI,CAACgW,GAAL,CAAS,CAACtO,KAAK,GAAGg3B,EAAE,CAAC6B,QAAD,CAAX,KAA0B5B,EAAE,CAAC4B,QAAD,CAAF,GAAe7B,EAAE,CAAC6B,QAAD,CAA3C,CAAT,CAAV;;MACA,MAAM0Q,YAAY,GAAGD,YAAY,CAACtS,EAAD,EAAKC,EAAL,EAASvpC,CAAT,EAAY6R,OAAO,CAACioC,OAApB,CAAjC;;MACA+B,YAAY,CAAC1Q,QAAD,CAAZ,GAAyB1lB,KAAK,CAAC0lB,QAAD,CAA9B;MACA3M,MAAM,CAAC/xB,IAAP,CAAYovC,YAAZ;IACD;;IACD,OAAOrd,MAAM,CAAC/yB,MAAP,KAAkB,CAAlB,GAAsB+yB,MAAM,CAAC,CAAD,CAA5B,GAAkCA,MAAzC;EACD;;EACD0b,WAAW,CAACviC,GAAD,EAAMsiC,OAAN,EAAevnB,MAAf,EAAuB;IAChC,MAAMopB,aAAa,GAAGlB,iBAAiB,CAAC,IAAD,CAAvC;;IACA,OAAOkB,aAAa,CAACnkC,GAAD,EAAM,IAAN,EAAYsiC,OAAZ,EAAqBvnB,MAArB,CAApB;EACD;;EACDsoB,IAAI,CAACrjC,GAAD,EAAM7M,KAAN,EAAakQ,KAAb,EAAoB;IACtB,MAAMhQ,EAAE,GAAG,IAAX;IACA,MAAM0wC,QAAQ,GAAG1wC,EAAE,CAAC0wC,QAApB;IACA,MAAM7nC,IAAI,GAAG6nC,QAAQ,CAACjwC,MAAtB;;IACA,MAAMqwC,aAAa,GAAGlB,iBAAiB,CAAC5vC,EAAD,CAAvC;;IACA,IAAI+D,IAAI,GAAG/D,EAAE,CAAC8D,KAAd;IACAhE,KAAK,GAAGA,KAAK,IAAI,CAAjB;IACAkQ,KAAK,GAAGA,KAAK,IAAKhQ,EAAE,CAACwa,MAAH,CAAU/Z,MAAV,GAAmBX,KAArC;;IACA,KAAK,IAAI1M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyV,IAApB,EAA0B,EAAEzV,CAA5B,EAA+B;MAC7B2Q,IAAI,IAAI+sC,aAAa,CAACnkC,GAAD,EAAM3M,EAAN,EAAU0wC,QAAQ,CAACt9C,CAAD,CAAlB,EAAuB;QAAC0M,KAAD;QAAQkI,GAAG,EAAElI,KAAK,GAAGkQ,KAAR,GAAgB;MAA7B,CAAvB,CAArB;IACD;;IACD,OAAO,CAAC,CAACjM,IAAT;EACD;;EACDrD,IAAI,CAACiM,GAAD,EAAMuF,SAAN,EAAiBpS,KAAjB,EAAwBkQ,KAAxB,EAA+B;IACjC,MAAMhQ,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAH,IAAc,EAA9B;IACA,MAAM2T,MAAM,GAAGxa,EAAE,CAACwa,MAAH,IAAa,EAA5B;;IACA,IAAI,CAACA,MAAM,CAAC/Z,MAAR,IAAkB,CAACoG,OAAO,CAAC2X,WAA/B,EAA4C;MAC1C;IACD;;IACD7R,GAAG,CAACqxB,IAAJ;IACAuQ,QAAQ,CAAC5hC,GAAD,EAAM9F,OAAN,CAAR;IACAwpC,UAAU,CAAC1jC,GAAD,EAAM3M,EAAN,EAAUF,KAAV,EAAiBkQ,KAAjB,CAAV;IACArD,GAAG,CAACuxB,OAAJ;;IACA,IAAIl+B,EAAE,CAACwgB,QAAP,EAAiB;MACfxgB,EAAE,CAACywC,cAAH,GAAoB,KAApB;MACAzwC,EAAE,CAACiwC,KAAH,GAAWlxC,SAAX;IACD;EACF;;AA5G+B;;AA8GlCuxC,WAAW,CAACtmC,EAAZ,GAAiB,MAAjB;AACAsmC,WAAW,CAAC78C,QAAZ,GAAuB;EACrBi7C,cAAc,EAAE,MADK;EAErBvd,UAAU,EAAE,EAFS;EAGrBC,gBAAgB,EAAE,CAHG;EAIrBud,eAAe,EAAE,OAJI;EAKrBnwB,WAAW,EAAE,CALQ;EAMrBuyB,eAAe,EAAE,IANI;EAOrBC,sBAAsB,EAAE,SAPH;EAQrB/tB,IAAI,EAAE,KARe;EASrBxC,QAAQ,EAAE,KATW;EAUrBquB,OAAO,EAAE,KAVY;EAWrBC,OAAO,EAAE;AAXY,CAAvB;AAaAuB,WAAW,CAACzgB,aAAZ,GAA4B;EAC1BzQ,eAAe,EAAE,iBADS;EAE1BE,WAAW,EAAE;AAFa,CAA5B;AAIAgxB,WAAW,CAAC72C,WAAZ,GAA0B;EACxBgM,WAAW,EAAE,IADW;EAExBD,UAAU,EAAGE,IAAD,IAAUA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK;AAFhC,CAA1B;;AAKA,SAASurC,SAAT,CAAmBlsB,EAAnB,EAAuBgC,GAAvB,EAA4B3b,IAA5B,EAAkCya,gBAAlC,EAAoD;EAClD,MAAMhf,OAAO,GAAGke,EAAE,CAACle,OAAnB;EACA,MAAM;IAAC,CAACuE,IAAD,GAAQ9D;EAAT,IAAkByd,EAAE,CAAC0K,QAAH,CAAY,CAACrkB,IAAD,CAAZ,EAAoBya,gBAApB,CAAxB;EACA,OAAQjmB,IAAI,CAACgW,GAAL,CAASmR,GAAG,GAAGzf,KAAf,IAAwBT,OAAO,CAAC+T,MAAR,GAAiB/T,OAAO,CAACqqC,SAAzD;AACD;;AACD,MAAMC,YAAN,SAA2B5hB,OAA3B,CAAmC;EACjC9wB,WAAW,CAAC0E,GAAD,EAAM;IACf;IACA,KAAK0D,OAAL,GAAe9H,SAAf;IACA,KAAK4b,IAAL,GAAY5b,SAAZ;IACA,KAAKkD,IAAL,GAAYlD,SAAZ;;IACA,IAAIoE,GAAJ,EAAS;MACPgC,MAAM,CAACqC,MAAP,CAAc,IAAd,EAAoBrE,GAApB;IACD;EACF;;EACD6iB,OAAO,CAACorB,MAAD,EAASC,MAAT,EAAiBxrB,gBAAjB,EAAmC;IACxC,MAAMhf,OAAO,GAAG,KAAKA,OAArB;IACA,MAAM;MAAC3Q,CAAD;MAAIE;IAAJ,IAAS,KAAKq5B,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0B5J,gBAA1B,CAAf;IACA,OAASjmB,IAAI,CAAC+lB,GAAL,CAASyrB,MAAM,GAAGl7C,CAAlB,EAAqB,CAArB,IAA0B0J,IAAI,CAAC+lB,GAAL,CAAS0rB,MAAM,GAAGj7C,CAAlB,EAAqB,CAArB,CAA3B,GAAsDwJ,IAAI,CAAC+lB,GAAL,CAAS9e,OAAO,CAACqqC,SAAR,GAAoBrqC,OAAO,CAAC+T,MAArC,EAA6C,CAA7C,CAA9D;EACD;;EACD02B,QAAQ,CAACF,MAAD,EAASvrB,gBAAT,EAA2B;IACjC,OAAOorB,SAAS,CAAC,IAAD,EAAOG,MAAP,EAAe,GAAf,EAAoBvrB,gBAApB,CAAhB;EACD;;EACD0rB,QAAQ,CAACF,MAAD,EAASxrB,gBAAT,EAA2B;IACjC,OAAOorB,SAAS,CAAC,IAAD,EAAOI,MAAP,EAAe,GAAf,EAAoBxrB,gBAApB,CAAhB;EACD;;EACDO,cAAc,CAACP,gBAAD,EAAmB;IAC/B,MAAM;MAAC3vB,CAAD;MAAIE;IAAJ,IAAS,KAAKq5B,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0B5J,gBAA1B,CAAf;IACA,OAAO;MAAC3vB,CAAD;MAAIE;IAAJ,CAAP;EACD;;EACDmR,IAAI,CAACV,OAAD,EAAU;IACZA,OAAO,GAAGA,OAAO,IAAI,KAAKA,OAAhB,IAA2B,EAArC;IACA,IAAI+T,MAAM,GAAG/T,OAAO,CAAC+T,MAAR,IAAkB,CAA/B;IACAA,MAAM,GAAGhb,IAAI,CAACmC,GAAL,CAAS6Y,MAAT,EAAiBA,MAAM,IAAI/T,OAAO,CAAC2qC,WAAlB,IAAiC,CAAlD,CAAT;IACA,MAAMhzB,WAAW,GAAG5D,MAAM,IAAI/T,OAAO,CAAC2X,WAAlB,IAAiC,CAArD;IACA,OAAO,CAAC5D,MAAM,GAAG4D,WAAV,IAAyB,CAAhC;EACD;;EACD9d,IAAI,CAACiM,GAAD,EAAM;IACR,MAAM3M,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;;IACA,IAAI7G,EAAE,CAAC2a,IAAH,IAAW9T,OAAO,CAAC+T,MAAR,GAAiB,GAAhC,EAAqC;MACnC;IACD;;IACDjO,GAAG,CAAC0S,WAAJ,GAAkBxY,OAAO,CAACyY,WAA1B;IACA3S,GAAG,CAAC4S,SAAJ,GAAgB1Y,OAAO,CAAC2X,WAAxB;IACA7R,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAACuY,eAAxB;IACAnjB,SAAS,CAAC0Q,GAAD,EAAM9F,OAAN,EAAe7G,EAAE,CAAC9J,CAAlB,EAAqB8J,EAAE,CAAC5J,CAAxB,CAAT;EACD;;EACD4uB,QAAQ,GAAG;IACT,MAAMne,OAAO,GAAG,KAAKA,OAAL,IAAgB,EAAhC;IACA,OAAOA,OAAO,CAAC+T,MAAR,GAAiB/T,OAAO,CAACqqC,SAAhC;EACD;;AA9CgC;;AAgDnCC,YAAY,CAACnnC,EAAb,GAAkB,OAAlB;AACAmnC,YAAY,CAAC19C,QAAb,GAAwB;EACtB+qB,WAAW,EAAE,CADS;EAEtB0yB,SAAS,EAAE,CAFW;EAGtBzyB,gBAAgB,EAAE,CAHI;EAItB+yB,WAAW,EAAE,CAJS;EAKtBC,UAAU,EAAE,QALU;EAMtB72B,MAAM,EAAE,CANc;EAOtBK,QAAQ,EAAE;AAPY,CAAxB;AASAk2B,YAAY,CAACthB,aAAb,GAA6B;EAC3BzQ,eAAe,EAAE,iBADU;EAE3BE,WAAW,EAAE;AAFc,CAA7B;;AAKA,SAASoyB,YAAT,CAAsBC,GAAtB,EAA2B9rB,gBAA3B,EAA6C;EAC3C,MAAM;IAAC3vB,CAAD;IAAIE,CAAJ;IAAOyhB,IAAP;IAAaa,KAAb;IAAoBD;EAApB,IAA8Bk5B,GAAG,CAACliB,QAAJ,CAAa,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B,CAAb,EAAoD5J,gBAApD,CAApC;EACA,IAAItd,IAAJ,EAAUF,KAAV,EAAiBD,GAAjB,EAAsBE,MAAtB,EAA8BspC,IAA9B;;EACA,IAAID,GAAG,CAAC55B,UAAR,EAAoB;IAClB65B,IAAI,GAAGn5B,MAAM,GAAG,CAAhB;IACAlQ,IAAI,GAAG3I,IAAI,CAACC,GAAL,CAAS3J,CAAT,EAAY2hB,IAAZ,CAAP;IACAxP,KAAK,GAAGzI,IAAI,CAACmC,GAAL,CAAS7L,CAAT,EAAY2hB,IAAZ,CAAR;IACAzP,GAAG,GAAGhS,CAAC,GAAGw7C,IAAV;IACAtpC,MAAM,GAAGlS,CAAC,GAAGw7C,IAAb;EACD,CAND,MAMO;IACLA,IAAI,GAAGl5B,KAAK,GAAG,CAAf;IACAnQ,IAAI,GAAGrS,CAAC,GAAG07C,IAAX;IACAvpC,KAAK,GAAGnS,CAAC,GAAG07C,IAAZ;IACAxpC,GAAG,GAAGxI,IAAI,CAACC,GAAL,CAASzJ,CAAT,EAAYyhB,IAAZ,CAAN;IACAvP,MAAM,GAAG1I,IAAI,CAACmC,GAAL,CAAS3L,CAAT,EAAYyhB,IAAZ,CAAT;EACD;;EACD,OAAO;IAACtP,IAAD;IAAOH,GAAP;IAAYC,KAAZ;IAAmBC;EAAnB,CAAP;AACD;;AACD,SAASupC,kBAAT,CAA4BF,GAA5B,EAAiC;EAC/B,IAAI5d,IAAI,GAAG4d,GAAG,CAAC9qC,OAAJ,CAAYirC,aAAvB;EACA,MAAMltC,GAAG,GAAG,EAAZ;;EACA,IAAI,CAACmvB,IAAL,EAAW;IACT,OAAOnvB,GAAP;EACD;;EACDmvB,IAAI,GAAG4d,GAAG,CAAC55B,UAAJ,GACHg6B,SAAS,CAAChe,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB4d,GAAG,CAAC95B,IAAJ,GAAW85B,GAAG,CAACz7C,CAAvC,CADN,GAEH67C,SAAS,CAAChe,IAAD,EAAO,QAAP,EAAiB,KAAjB,EAAwB4d,GAAG,CAAC95B,IAAJ,GAAW85B,GAAG,CAACv7C,CAAvC,CAFb;EAGAwO,GAAG,CAACmvB,IAAD,CAAH,GAAY,IAAZ;EACA,OAAOnvB,GAAP;AACD;;AACD,SAASmtC,SAAT,CAAmBhe,IAAnB,EAAyBjhC,CAAzB,EAA4BQ,CAA5B,EAA+ByU,OAA/B,EAAwC;EACtC,IAAIA,OAAJ,EAAa;IACXgsB,IAAI,GAAGie,IAAI,CAACje,IAAD,EAAOjhC,CAAP,EAAUQ,CAAV,CAAX;IACAygC,IAAI,GAAGke,QAAQ,CAACle,IAAD,EAAOzgC,CAAP,EAAUR,CAAV,CAAf;EACD,CAHD,MAGO;IACLihC,IAAI,GAAGke,QAAQ,CAACle,IAAD,EAAOjhC,CAAP,EAAUQ,CAAV,CAAf;EACD;;EACD,OAAOygC,IAAP;AACD;;AACD,SAASie,IAAT,CAAcE,IAAd,EAAoB9qB,EAApB,EAAwB+qB,EAAxB,EAA4B;EAC1B,OAAOD,IAAI,KAAK9qB,EAAT,GAAc+qB,EAAd,GAAmBD,IAAI,KAAKC,EAAT,GAAc/qB,EAAd,GAAmB8qB,IAA7C;AACD;;AACD,SAASD,QAAT,CAAkBv+C,CAAlB,EAAqBoM,KAArB,EAA4BkI,GAA5B,EAAiC;EAC/B,OAAOtU,CAAC,KAAK,OAAN,GAAgBoM,KAAhB,GAAwBpM,CAAC,KAAK,KAAN,GAAcsU,GAAd,GAAoBtU,CAAnD;AACD;;AACD,SAAS0+C,WAAT,CAAqBz3B,IAArB,EAA2BrT,KAA3B,EAAkCzH,GAAlC,EAAuCkC,GAAvC,EAA4C;EAC1C,OAAO4Y,IAAI,GAAG,CAAH,GAAO/a,IAAI,CAACmC,GAAL,CAASnC,IAAI,CAACC,GAAL,CAASyH,KAAT,EAAgBvF,GAAhB,CAAT,EAA+BlC,GAA/B,CAAlB;AACD;;AACD,SAASwyC,gBAAT,CAA0BV,GAA1B,EAA+BW,IAA/B,EAAqCC,IAArC,EAA2C;EACzC,MAAMjrC,KAAK,GAAGqqC,GAAG,CAAC9qC,OAAJ,CAAY2X,WAA1B;EACA,MAAM7D,IAAI,GAAGk3B,kBAAkB,CAACF,GAAD,CAA/B;EACA,MAAMv8C,CAAC,GAAG+G,MAAM,CAACmL,KAAD,CAAhB;EACA,OAAO;IACLtS,CAAC,EAAEo9C,WAAW,CAACz3B,IAAI,CAACvS,GAAN,EAAWhT,CAAC,CAACgT,GAAb,EAAkB,CAAlB,EAAqBmqC,IAArB,CADT;IAEL3/C,CAAC,EAAEw/C,WAAW,CAACz3B,IAAI,CAACtS,KAAN,EAAajT,CAAC,CAACiT,KAAf,EAAsB,CAAtB,EAAyBiqC,IAAzB,CAFT;IAGLh/C,CAAC,EAAE8+C,WAAW,CAACz3B,IAAI,CAACrS,MAAN,EAAclT,CAAC,CAACkT,MAAhB,EAAwB,CAAxB,EAA2BiqC,IAA3B,CAHT;IAILz+C,CAAC,EAAEs+C,WAAW,CAACz3B,IAAI,CAACpS,IAAN,EAAYnT,CAAC,CAACmT,IAAd,EAAoB,CAApB,EAAuB+pC,IAAvB;EAJT,CAAP;AAMD;;AACD,SAASE,iBAAT,CAA2Bb,GAA3B,EAAgCW,IAAhC,EAAsCC,IAAtC,EAA4C;EAC1C,MAAMjrC,KAAK,GAAGqqC,GAAG,CAAC9qC,OAAJ,CAAY4rC,YAA1B;EACA,MAAMr9C,CAAC,GAAGiH,aAAa,CAACiL,KAAD,CAAvB;EACA,MAAMorC,IAAI,GAAG9yC,IAAI,CAACC,GAAL,CAASyyC,IAAT,EAAeC,IAAf,CAAb;EACA,MAAM53B,IAAI,GAAGk3B,kBAAkB,CAACF,GAAD,CAA/B;EACA,OAAO;IACLgB,OAAO,EAAEP,WAAW,CAACz3B,IAAI,CAACvS,GAAL,IAAYuS,IAAI,CAACpS,IAAlB,EAAwBnT,CAAC,CAACu9C,OAA1B,EAAmC,CAAnC,EAAsCD,IAAtC,CADf;IAELE,QAAQ,EAAER,WAAW,CAACz3B,IAAI,CAACvS,GAAL,IAAYuS,IAAI,CAACtS,KAAlB,EAAyBjT,CAAC,CAACw9C,QAA3B,EAAqC,CAArC,EAAwCF,IAAxC,CAFhB;IAGLG,UAAU,EAAET,WAAW,CAACz3B,IAAI,CAACrS,MAAL,IAAeqS,IAAI,CAACpS,IAArB,EAA2BnT,CAAC,CAACy9C,UAA7B,EAAyC,CAAzC,EAA4CH,IAA5C,CAHlB;IAILI,WAAW,EAAEV,WAAW,CAACz3B,IAAI,CAACrS,MAAL,IAAeqS,IAAI,CAACtS,KAArB,EAA4BjT,CAAC,CAAC09C,WAA9B,EAA2C,CAA3C,EAA8CJ,IAA9C;EAJnB,CAAP;AAMD;;AACD,SAASK,aAAT,CAAuBpB,GAAvB,EAA4B;EAC1B,MAAMhhB,MAAM,GAAG+gB,YAAY,CAACC,GAAD,CAA3B;EACA,MAAMj5B,KAAK,GAAGiY,MAAM,CAACtoB,KAAP,GAAesoB,MAAM,CAACpoB,IAApC;EACA,MAAMkQ,MAAM,GAAGkY,MAAM,CAACroB,MAAP,GAAgBqoB,MAAM,CAACvoB,GAAtC;EACA,MAAMyY,MAAM,GAAGwxB,gBAAgB,CAACV,GAAD,EAAMj5B,KAAK,GAAG,CAAd,EAAiBD,MAAM,GAAG,CAA1B,CAA/B;EACA,MAAMmC,MAAM,GAAG43B,iBAAiB,CAACb,GAAD,EAAMj5B,KAAK,GAAG,CAAd,EAAiBD,MAAM,GAAG,CAA1B,CAAhC;EACA,OAAO;IACLu6B,KAAK,EAAE;MACL98C,CAAC,EAAEy6B,MAAM,CAACpoB,IADL;MAELnS,CAAC,EAAEu6B,MAAM,CAACvoB,GAFL;MAGLpS,CAAC,EAAE0iB,KAHE;MAILtkB,CAAC,EAAEqkB,MAJE;MAKLmC;IALK,CADF;IAQLizB,KAAK,EAAE;MACL33C,CAAC,EAAEy6B,MAAM,CAACpoB,IAAP,GAAcsY,MAAM,CAAC/sB,CADnB;MAELsC,CAAC,EAAEu6B,MAAM,CAACvoB,GAAP,GAAayY,MAAM,CAAC7rB,CAFlB;MAGLgB,CAAC,EAAE0iB,KAAK,GAAGmI,MAAM,CAAC/sB,CAAf,GAAmB+sB,MAAM,CAACjuB,CAHxB;MAILwB,CAAC,EAAEqkB,MAAM,GAAGoI,MAAM,CAAC7rB,CAAhB,GAAoB6rB,MAAM,CAACvtB,CAJzB;MAKLsnB,MAAM,EAAE;QACN+3B,OAAO,EAAE/yC,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY6Y,MAAM,CAAC+3B,OAAP,GAAiB/yC,IAAI,CAACmC,GAAL,CAAS8e,MAAM,CAAC7rB,CAAhB,EAAmB6rB,MAAM,CAAC/sB,CAA1B,CAA7B,CADH;QAEN8+C,QAAQ,EAAEhzC,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY6Y,MAAM,CAACg4B,QAAP,GAAkBhzC,IAAI,CAACmC,GAAL,CAAS8e,MAAM,CAAC7rB,CAAhB,EAAmB6rB,MAAM,CAACjuB,CAA1B,CAA9B,CAFJ;QAGNigD,UAAU,EAAEjzC,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY6Y,MAAM,CAACi4B,UAAP,GAAoBjzC,IAAI,CAACmC,GAAL,CAAS8e,MAAM,CAACvtB,CAAhB,EAAmButB,MAAM,CAAC/sB,CAA1B,CAAhC,CAHN;QAINg/C,WAAW,EAAElzC,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAY6Y,MAAM,CAACk4B,WAAP,GAAqBlzC,IAAI,CAACmC,GAAL,CAAS8e,MAAM,CAACvtB,CAAhB,EAAmButB,MAAM,CAACjuB,CAA1B,CAAjC;MAJP;IALH;EARF,CAAP;AAqBD;;AACD,SAASozB,OAAT,CAAiB2rB,GAAjB,EAAsBz7C,CAAtB,EAAyBE,CAAzB,EAA4ByvB,gBAA5B,EAA8C;EAC5C,MAAMotB,KAAK,GAAG/8C,CAAC,KAAK,IAApB;EACA,MAAMg9C,KAAK,GAAG98C,CAAC,KAAK,IAApB;EACA,MAAM+8C,QAAQ,GAAGF,KAAK,IAAIC,KAA1B;EACA,MAAMviB,MAAM,GAAGghB,GAAG,IAAI,CAACwB,QAAR,IAAoBzB,YAAY,CAACC,GAAD,EAAM9rB,gBAAN,CAA/C;EACA,OAAO8K,MAAM,KACTsiB,KAAK,IAAI/8C,CAAC,IAAIy6B,MAAM,CAACpoB,IAAZ,IAAoBrS,CAAC,IAAIy6B,MAAM,CAACtoB,KADhC,CAAN,KAEH6qC,KAAK,IAAI98C,CAAC,IAAIu6B,MAAM,CAACvoB,GAAZ,IAAmBhS,CAAC,IAAIu6B,MAAM,CAACroB,MAFrC,CAAP;AAGD;;AACD,SAAS8qC,SAAT,CAAmBx4B,MAAnB,EAA2B;EACzB,OAAOA,MAAM,CAAC+3B,OAAP,IAAkB/3B,MAAM,CAACg4B,QAAzB,IAAqCh4B,MAAM,CAACi4B,UAA5C,IAA0Dj4B,MAAM,CAACk4B,WAAxE;AACD;;AACD,SAASO,kBAAT,CAA4B1mC,GAA5B,EAAiC2mC,IAAjC,EAAuC;EACrC,MAAM;IAACp9C,CAAD;IAAIE,CAAJ;IAAOJ,CAAP;IAAU5B,CAAV;IAAawmB;EAAb,IAAuB04B,IAA7B;EACA3mC,GAAG,CAACyR,GAAJ,CAAQloB,CAAC,GAAG0kB,MAAM,CAAC+3B,OAAnB,EAA4Bv8C,CAAC,GAAGwkB,MAAM,CAAC+3B,OAAvC,EAAgD/3B,MAAM,CAAC+3B,OAAvD,EAAgE,CAAC98C,OAAjE,EAA0EE,EAA1E,EAA8E,IAA9E;EACA4W,GAAG,CAACiyB,MAAJ,CAAW1oC,CAAX,EAAcE,CAAC,GAAGhC,CAAJ,GAAQwmB,MAAM,CAACi4B,UAA7B;EACAlmC,GAAG,CAACyR,GAAJ,CAAQloB,CAAC,GAAG0kB,MAAM,CAACi4B,UAAnB,EAA+Bz8C,CAAC,GAAGhC,CAAJ,GAAQwmB,MAAM,CAACi4B,UAA9C,EAA0Dj4B,MAAM,CAACi4B,UAAjE,EAA6E98C,EAA7E,EAAiFF,OAAjF,EAA0F,IAA1F;EACA8W,GAAG,CAACiyB,MAAJ,CAAW1oC,CAAC,GAAGF,CAAJ,GAAQ4kB,MAAM,CAACk4B,WAA1B,EAAuC18C,CAAC,GAAGhC,CAA3C;EACAuY,GAAG,CAACyR,GAAJ,CAAQloB,CAAC,GAAGF,CAAJ,GAAQ4kB,MAAM,CAACk4B,WAAvB,EAAoC18C,CAAC,GAAGhC,CAAJ,GAAQwmB,MAAM,CAACk4B,WAAnD,EAAgEl4B,MAAM,CAACk4B,WAAvE,EAAoFj9C,OAApF,EAA6F,CAA7F,EAAgG,IAAhG;EACA8W,GAAG,CAACiyB,MAAJ,CAAW1oC,CAAC,GAAGF,CAAf,EAAkBI,CAAC,GAAGwkB,MAAM,CAACg4B,QAA7B;EACAjmC,GAAG,CAACyR,GAAJ,CAAQloB,CAAC,GAAGF,CAAJ,GAAQ4kB,MAAM,CAACg4B,QAAvB,EAAiCx8C,CAAC,GAAGwkB,MAAM,CAACg4B,QAA5C,EAAsDh4B,MAAM,CAACg4B,QAA7D,EAAuE,CAAvE,EAA0E,CAAC/8C,OAA3E,EAAoF,IAApF;EACA8W,GAAG,CAACiyB,MAAJ,CAAW1oC,CAAC,GAAG0kB,MAAM,CAAC+3B,OAAtB,EAA+Bv8C,CAA/B;AACD;;AACD,SAASm9C,iBAAT,CAA2B5mC,GAA3B,EAAgC2mC,IAAhC,EAAsC;EACpC3mC,GAAG,CAAC2mC,IAAJ,CAASA,IAAI,CAACp9C,CAAd,EAAiBo9C,IAAI,CAACl9C,CAAtB,EAAyBk9C,IAAI,CAACt9C,CAA9B,EAAiCs9C,IAAI,CAACl/C,CAAtC;AACD;;AACD,MAAMo/C,UAAN,SAAyBjkB,OAAzB,CAAiC;EAC/B9wB,WAAW,CAAC0E,GAAD,EAAM;IACf;IACA,KAAK0D,OAAL,GAAe9H,SAAf;IACA,KAAKgZ,UAAL,GAAkBhZ,SAAlB;IACA,KAAK8Y,IAAL,GAAY9Y,SAAZ;IACA,KAAK2Z,KAAL,GAAa3Z,SAAb;IACA,KAAK0Z,MAAL,GAAc1Z,SAAd;;IACA,IAAIoE,GAAJ,EAAS;MACPgC,MAAM,CAACqC,MAAP,CAAc,IAAd,EAAoBrE,GAApB;IACD;EACF;;EACDzC,IAAI,CAACiM,GAAD,EAAM;IACR,MAAM9F,OAAO,GAAG,KAAKA,OAArB;IACA,MAAM;MAACgnC,KAAD;MAAQmF;IAAR,IAAiBD,aAAa,CAAC,IAAD,CAApC;IACA,MAAMU,WAAW,GAAGL,SAAS,CAACJ,KAAK,CAACp4B,MAAP,CAAT,GAA0By4B,kBAA1B,GAA+CE,iBAAnE;IACA5mC,GAAG,CAACqxB,IAAJ;;IACA,IAAIgV,KAAK,CAACh9C,CAAN,KAAY63C,KAAK,CAAC73C,CAAlB,IAAuBg9C,KAAK,CAAC5+C,CAAN,KAAYy5C,KAAK,CAACz5C,CAA7C,EAAgD;MAC9CuY,GAAG,CAAC+xB,SAAJ;MACA+U,WAAW,CAAC9mC,GAAD,EAAMqmC,KAAN,CAAX;MACArmC,GAAG,CAACoF,IAAJ;MACA0hC,WAAW,CAAC9mC,GAAD,EAAMkhC,KAAN,CAAX;MACAlhC,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAACyY,WAAxB;MACA3S,GAAG,CAACsW,IAAJ,CAAS,SAAT;IACD;;IACDtW,GAAG,CAAC+xB,SAAJ;IACA+U,WAAW,CAAC9mC,GAAD,EAAMkhC,KAAN,CAAX;IACAlhC,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAACuY,eAAxB;IACAzS,GAAG,CAACsW,IAAJ;IACAtW,GAAG,CAACuxB,OAAJ;EACD;;EACDlY,OAAO,CAACorB,MAAD,EAASC,MAAT,EAAiBxrB,gBAAjB,EAAmC;IACxC,OAAOG,OAAO,CAAC,IAAD,EAAOorB,MAAP,EAAeC,MAAf,EAAuBxrB,gBAAvB,CAAd;EACD;;EACDyrB,QAAQ,CAACF,MAAD,EAASvrB,gBAAT,EAA2B;IACjC,OAAOG,OAAO,CAAC,IAAD,EAAOorB,MAAP,EAAe,IAAf,EAAqBvrB,gBAArB,CAAd;EACD;;EACD0rB,QAAQ,CAACF,MAAD,EAASxrB,gBAAT,EAA2B;IACjC,OAAOG,OAAO,CAAC,IAAD,EAAO,IAAP,EAAaqrB,MAAb,EAAqBxrB,gBAArB,CAAd;EACD;;EACDO,cAAc,CAACP,gBAAD,EAAmB;IAC/B,MAAM;MAAC3vB,CAAD;MAAIE,CAAJ;MAAOyhB,IAAP;MAAaE;IAAb,IAA2B,KAAK0X,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,YAAnB,CAAd,EAAgD5J,gBAAhD,CAAjC;IACA,OAAO;MACL3vB,CAAC,EAAE6hB,UAAU,GAAG,CAAC7hB,CAAC,GAAG2hB,IAAL,IAAa,CAAhB,GAAoB3hB,CAD5B;MAELE,CAAC,EAAE2hB,UAAU,GAAG3hB,CAAH,GAAO,CAACA,CAAC,GAAGyhB,IAAL,IAAa;IAF5B,CAAP;EAID;;EACDmN,QAAQ,CAAC5Z,IAAD,EAAO;IACb,OAAOA,IAAI,KAAK,GAAT,GAAe,KAAKsN,KAAL,GAAa,CAA5B,GAAgC,KAAKD,MAAL,GAAc,CAArD;EACD;;AAjD8B;;AAmDjC+6B,UAAU,CAACxpC,EAAX,GAAgB,KAAhB;AACAwpC,UAAU,CAAC//C,QAAX,GAAsB;EACpBq+C,aAAa,EAAE,OADK;EAEpBtzB,WAAW,EAAE,CAFO;EAGpBi0B,YAAY,EAAE,CAHM;EAIpBhB,UAAU,EAAE1yC;AAJQ,CAAtB;AAMAy0C,UAAU,CAAC3jB,aAAX,GAA2B;EACzBzQ,eAAe,EAAE,iBADQ;EAEzBE,WAAW,EAAE;AAFY,CAA3B;AAKA,IAAItN,QAAQ,GAAG,aAAa7M,MAAM,CAAC8N,MAAP,CAAc;EAC1CmQ,SAAS,EAAE,IAD+B;EAE1C2qB,UAAU,EAAEA,UAF8B;EAG1CuC,WAAW,EAAEA,WAH6B;EAI1Ca,YAAY,EAAEA,YAJ4B;EAK1CqC,UAAU,EAAEA;AAL8B,CAAd,CAA5B;;AAQA,SAASE,cAAT,CAAwBnqC,IAAxB,EAA8Bse,cAA9B,EAA8ChhB,OAA9C,EAAuD;EACrD,MAAM8sC,OAAO,GAAG9sC,OAAO,CAAC8sC,OAAR,IAAmB9rB,cAAnC;EACA,MAAM+rB,SAAS,GAAG,EAAlB;EACA,MAAMC,WAAW,GAAG,CAACtqC,IAAI,CAAC9I,MAAL,GAAc,CAAf,KAAqBkzC,OAAO,GAAG,CAA/B,CAApB;EACA,IAAIG,YAAY,GAAG,CAAnB;EACA,IAAIhhD,CAAC,GAAG,CAAR;EACA,IAAIM,CAAJ,EAAO2gD,YAAP,EAAqBC,OAArB,EAA8B/hC,IAA9B,EAAoCgiC,KAApC;EACAL,SAAS,CAACE,YAAY,EAAb,CAAT,GAA4BvqC,IAAI,CAACzW,CAAD,CAAhC;;EACA,KAAKM,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGugD,OAAO,GAAG,CAA1B,EAA6BvgD,CAAC,EAA9B,EAAkC;IAChC,IAAIi8C,IAAI,GAAG,CAAX;IACA,IAAI6E,IAAI,GAAG,CAAX;IACA,IAAI1/C,CAAJ;IACA,MAAM2/C,aAAa,GAAGv0C,IAAI,CAACgE,KAAL,CAAW,CAACxQ,CAAC,GAAG,CAAL,IAAUygD,WAArB,IAAoC,CAA1D;IACA,MAAMO,WAAW,GAAGx0C,IAAI,CAACC,GAAL,CAASD,IAAI,CAACgE,KAAL,CAAW,CAACxQ,CAAC,GAAG,CAAL,IAAUygD,WAArB,IAAoC,CAA7C,EAAgDtqC,IAAI,CAAC9I,MAArD,CAApB;IACA,MAAM4zC,cAAc,GAAGD,WAAW,GAAGD,aAArC;;IACA,KAAK3/C,CAAC,GAAG2/C,aAAT,EAAwB3/C,CAAC,GAAG4/C,WAA5B,EAAyC5/C,CAAC,EAA1C,EAA8C;MAC5C66C,IAAI,GAAG9lC,IAAI,CAAC/U,CAAD,CAAJ,CAAQ0B,CAAf;MACAg+C,IAAI,GAAG3qC,IAAI,CAAC/U,CAAD,CAAJ,CAAQ4B,CAAf;IACD;;IACDi5C,IAAI,IAAIgF,cAAR;IACAH,IAAI,IAAIG,cAAR;IACA,MAAMC,SAAS,GAAG10C,IAAI,CAACgE,KAAL,CAAWxQ,CAAC,GAAGygD,WAAf,IAA8B,CAAhD;IACA,MAAMU,OAAO,GAAG30C,IAAI,CAACgE,KAAL,CAAW,CAACxQ,CAAC,GAAG,CAAL,IAAUygD,WAArB,IAAoC,CAApD;IACA,MAAM;MAAC39C,CAAC,EAAEs+C,OAAJ;MAAap+C,CAAC,EAAEq+C;IAAhB,IAA2BlrC,IAAI,CAACzW,CAAD,CAArC;IACAkhD,OAAO,GAAG/hC,IAAI,GAAG,CAAC,CAAlB;;IACA,KAAKzd,CAAC,GAAG8/C,SAAT,EAAoB9/C,CAAC,GAAG+/C,OAAxB,EAAiC//C,CAAC,EAAlC,EAAsC;MACpCyd,IAAI,GAAG,MAAMrS,IAAI,CAACgW,GAAL,CACX,CAAC4+B,OAAO,GAAGnF,IAAX,KAAoB9lC,IAAI,CAAC/U,CAAD,CAAJ,CAAQ4B,CAAR,GAAYq+C,OAAhC,IACA,CAACD,OAAO,GAAGjrC,IAAI,CAAC/U,CAAD,CAAJ,CAAQ0B,CAAnB,KAAyBg+C,IAAI,GAAGO,OAAhC,CAFW,CAAb;;MAIA,IAAIxiC,IAAI,GAAG+hC,OAAX,EAAoB;QAClBA,OAAO,GAAG/hC,IAAV;QACA8hC,YAAY,GAAGxqC,IAAI,CAAC/U,CAAD,CAAnB;QACAy/C,KAAK,GAAGz/C,CAAR;MACD;IACF;;IACDo/C,SAAS,CAACE,YAAY,EAAb,CAAT,GAA4BC,YAA5B;IACAjhD,CAAC,GAAGmhD,KAAJ;EACD;;EACDL,SAAS,CAACE,YAAY,EAAb,CAAT,GAA4BvqC,IAAI,CAACA,IAAI,CAAC9I,MAAL,GAAc,CAAf,CAAhC;EACA,OAAOmzC,SAAP;AACD;;AACD,SAASc,gBAAT,CAA0BnrC,IAA1B,EAAgCse,cAAhC,EAAgD;EAC9C,IAAIwnB,IAAI,GAAG,CAAX;EACA,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIl8C,CAAJ,EAAOqnB,KAAP,EAAcvkB,CAAd,EAAiBE,CAAjB,EAAoBm5C,KAApB,EAA2BoF,QAA3B,EAAqCC,QAArC,EAA+CC,UAA/C,EAA2Dv4B,IAA3D,EAAiEF,IAAjE;EACA,MAAMw3B,SAAS,GAAG,EAAlB;EACA,MAAMkB,IAAI,GAAGvrC,IAAI,CAAC,CAAD,CAAJ,CAAQrT,CAArB;EACA,MAAM6+C,IAAI,GAAGxrC,IAAI,CAACA,IAAI,CAAC9I,MAAL,GAAc,CAAf,CAAJ,CAAsBvK,CAAnC;EACA,MAAM8+C,EAAE,GAAGD,IAAI,GAAGD,IAAlB;;EACA,KAAK1hD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmW,IAAI,CAAC9I,MAArB,EAA6B,EAAErN,CAA/B,EAAkC;IAChCqnB,KAAK,GAAGlR,IAAI,CAACnW,CAAD,CAAZ;IACA8C,CAAC,GAAG,CAACukB,KAAK,CAACvkB,CAAN,GAAU4+C,IAAX,IAAmBE,EAAnB,GAAwBntB,cAA5B;IACAzxB,CAAC,GAAGqkB,KAAK,CAACrkB,CAAV;IACA,MAAMu5C,MAAM,GAAGz5C,CAAC,GAAG,CAAnB;;IACA,IAAIy5C,MAAM,KAAKJ,KAAf,EAAsB;MACpB,IAAIn5C,CAAC,GAAGkmB,IAAR,EAAc;QACZA,IAAI,GAAGlmB,CAAP;QACAu+C,QAAQ,GAAGvhD,CAAX;MACD,CAHD,MAGO,IAAIgD,CAAC,GAAGgmB,IAAR,EAAc;QACnBA,IAAI,GAAGhmB,CAAP;QACAw+C,QAAQ,GAAGxhD,CAAX;MACD;;MACDi8C,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAT,GAAgB50B,KAAK,CAACvkB,CAAvB,IAA4B,EAAEo5C,MAArC;IACD,CATD,MASO;MACL,MAAM2F,SAAS,GAAG7hD,CAAC,GAAG,CAAtB;;MACA,IAAI,CAACqB,aAAa,CAACkgD,QAAD,CAAd,IAA4B,CAAClgD,aAAa,CAACmgD,QAAD,CAA9C,EAA0D;QACxD,MAAMM,kBAAkB,GAAGt1C,IAAI,CAACC,GAAL,CAAS80C,QAAT,EAAmBC,QAAnB,CAA3B;QACA,MAAMO,kBAAkB,GAAGv1C,IAAI,CAACmC,GAAL,CAAS4yC,QAAT,EAAmBC,QAAnB,CAA3B;;QACA,IAAIM,kBAAkB,KAAKL,UAAvB,IAAqCK,kBAAkB,KAAKD,SAAhE,EAA2E;UACzErB,SAAS,CAACnyC,IAAV,CAAe,EACb,GAAG8H,IAAI,CAAC2rC,kBAAD,CADM;YAEbh/C,CAAC,EAAEm5C;UAFU,CAAf;QAID;;QACD,IAAI8F,kBAAkB,KAAKN,UAAvB,IAAqCM,kBAAkB,KAAKF,SAAhE,EAA2E;UACzErB,SAAS,CAACnyC,IAAV,CAAe,EACb,GAAG8H,IAAI,CAAC4rC,kBAAD,CADM;YAEbj/C,CAAC,EAAEm5C;UAFU,CAAf;QAID;MACF;;MACD,IAAIj8C,CAAC,GAAG,CAAJ,IAAS6hD,SAAS,KAAKJ,UAA3B,EAAuC;QACrCjB,SAAS,CAACnyC,IAAV,CAAe8H,IAAI,CAAC0rC,SAAD,CAAnB;MACD;;MACDrB,SAAS,CAACnyC,IAAV,CAAegZ,KAAf;MACA80B,KAAK,GAAGI,MAAR;MACAL,MAAM,GAAG,CAAT;MACAhzB,IAAI,GAAGF,IAAI,GAAGhmB,CAAd;MACAu+C,QAAQ,GAAGC,QAAQ,GAAGC,UAAU,GAAGzhD,CAAnC;IACD;EACF;;EACD,OAAOwgD,SAAP;AACD;;AACD,SAASwB,kBAAT,CAA4Bn2C,KAA5B,EAAmC;EACjCA,KAAK,CAACsK,IAAN,CAAWoF,QAAX,CAAoBlP,OAApB,CAA6BqM,OAAD,IAAa;IACvC,IAAIA,OAAO,CAACwU,UAAZ,EAAwB;MACtB,MAAM/W,IAAI,GAAGuC,OAAO,CAACkB,KAArB;MACA,OAAOlB,OAAO,CAACwU,UAAf;MACA,OAAOxU,OAAO,CAACkB,KAAf;MACA7H,MAAM,CAACkwC,cAAP,CAAsBvpC,OAAtB,EAA+B,MAA/B,EAAuC;QAACxE,KAAK,EAAEiC;MAAR,CAAvC;IACD;EACF,CAPD;AAQD;;AACD,IAAI+rC,iBAAiB,GAAG;EACtBtrC,EAAE,EAAE,YADkB;EAEtBvW,QAAQ,EAAE;IACR8hD,SAAS,EAAE,SADH;IAER/iB,OAAO,EAAE;EAFD,CAFY;EAMtBgjB,oBAAoB,EAAE,CAACv2C,KAAD,EAAQ6vB,IAAR,EAAcjoB,OAAd,KAA0B;IAC9C,IAAI,CAACA,OAAO,CAAC2rB,OAAb,EAAsB;MACpB4iB,kBAAkB,CAACn2C,KAAD,CAAlB;MACA;IACD;;IACD,MAAM4oB,cAAc,GAAG5oB,KAAK,CAACyZ,KAA7B;IACAzZ,KAAK,CAACsK,IAAN,CAAWoF,QAAX,CAAoBlP,OAApB,CAA4B,CAACqM,OAAD,EAAU1C,YAAV,KAA2B;MACrD,MAAM;QAAC4D,KAAD;QAAQoB;MAAR,IAAqBtC,OAA3B;MACA,MAAMnC,IAAI,GAAG1K,KAAK,CAAC2P,cAAN,CAAqBxF,YAArB,CAAb;MACA,MAAMG,IAAI,GAAGyD,KAAK,IAAIlB,OAAO,CAACvC,IAA9B;;MACA,IAAIxW,OAAO,CAAC,CAACqb,SAAD,EAAYnP,KAAK,CAAC4H,OAAN,CAAcuH,SAA1B,CAAD,CAAP,KAAkD,GAAtD,EAA2D;QACzD;MACD;;MACD,IAAIzE,IAAI,CAACvK,IAAL,KAAc,MAAlB,EAA0B;QACxB;MACD;;MACD,MAAMq2C,KAAK,GAAGx2C,KAAK,CAACuM,MAAN,CAAa7B,IAAI,CAACoE,OAAlB,CAAd;;MACA,IAAI0nC,KAAK,CAACr2C,IAAN,KAAe,QAAf,IAA2Bq2C,KAAK,CAACr2C,IAAN,KAAe,MAA9C,EAAsD;QACpD;MACD;;MACD,IAAIH,KAAK,CAAC4H,OAAN,CAAciJ,OAAlB,EAA2B;QACzB;MACD;;MACD,IAAIvG,IAAI,CAAC9I,MAAL,IAAe,IAAIonB,cAAvB,EAAuC;QACrC;MACD;;MACD,IAAIpzB,aAAa,CAACuY,KAAD,CAAjB,EAA0B;QACxBlB,OAAO,CAACkB,KAAR,GAAgBzD,IAAhB;QACA,OAAOuC,OAAO,CAACvC,IAAf;QACApE,MAAM,CAACkwC,cAAP,CAAsBvpC,OAAtB,EAA+B,MAA/B,EAAuC;UACrC4pC,YAAY,EAAE,IADuB;UAErCvI,UAAU,EAAE,IAFyB;UAGrCjsC,GAAG,EAAE,YAAW;YACd,OAAO,KAAKof,UAAZ;UACD,CALoC;UAMrCjf,GAAG,EAAE,UAAS7N,CAAT,EAAY;YACf,KAAKwZ,KAAL,GAAaxZ,CAAb;UACD;QARoC,CAAvC;MAUD;;MACD,IAAIogD,SAAJ;;MACA,QAAQ/sC,OAAO,CAAC0uC,SAAhB;QACA,KAAK,MAAL;UACE3B,SAAS,GAAGF,cAAc,CAACnqC,IAAD,EAAOse,cAAP,EAAuBhhB,OAAvB,CAA1B;UACA;;QACF,KAAK,SAAL;UACE+sC,SAAS,GAAGc,gBAAgB,CAACnrC,IAAD,EAAOse,cAAP,CAA5B;UACA;;QACF;UACE,MAAM,IAAIvE,KAAJ,CAAW,qCAAoCzc,OAAO,CAAC0uC,SAAU,GAAjE,CAAN;MARF;;MAUAzpC,OAAO,CAACwU,UAAR,GAAqBszB,SAArB;IACD,CA9CD;EA+CD,CA3DqB;;EA4DtBjI,OAAO,CAAC1sC,KAAD,EAAQ;IACbm2C,kBAAkB,CAACn2C,KAAD,CAAlB;EACD;;AA9DqB,CAAxB;;AAiEA,SAAS02C,cAAT,CAAwB12C,KAAxB,EAA+B6J,KAA/B,EAAsC;EACpC,MAAMa,IAAI,GAAG1K,KAAK,CAAC2P,cAAN,CAAqB9F,KAArB,CAAb;EACA,MAAM/C,OAAO,GAAG4D,IAAI,IAAI1K,KAAK,CAAC4d,gBAAN,CAAuB/T,KAAvB,CAAxB;EACA,OAAO/C,OAAO,GAAG4D,IAAI,CAACmC,OAAR,GAAkB,IAAhC;AACD;;AACD,SAAS8pC,eAAT,CAAyB31B,IAAzB,EAA+B;EAC7B,MAAMpZ,OAAO,GAAGoZ,IAAI,CAACpZ,OAArB;EACA,MAAMgvC,UAAU,GAAGhvC,OAAO,CAACoc,IAA3B;EACA,IAAIA,IAAI,GAAGtvB,cAAc,CAACkiD,UAAU,IAAIA,UAAU,CAACzyC,MAA1B,EAAkCyyC,UAAlC,CAAzB;;EACA,IAAI5yB,IAAI,KAAKlkB,SAAb,EAAwB;IACtBkkB,IAAI,GAAG,CAAC,CAACpc,OAAO,CAACuY,eAAjB;EACD;;EACD,IAAI6D,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,IAA/B,EAAqC;IACnC,OAAO,KAAP;EACD;;EACD,IAAIA,IAAI,KAAK,IAAb,EAAmB;IACjB,OAAO,QAAP;EACD;;EACD,OAAOA,IAAP;AACD;;AACD,SAAS6yB,UAAT,CAAoB71B,IAApB,EAA0BnX,KAA1B,EAAiCkH,KAAjC,EAAwC;EACtC,MAAMiT,IAAI,GAAG2yB,eAAe,CAAC31B,IAAD,CAA5B;;EACA,IAAI5sB,QAAQ,CAAC4vB,IAAD,CAAZ,EAAoB;IAClB,OAAOnK,KAAK,CAACmK,IAAI,CAAC3b,KAAN,CAAL,GAAoB,KAApB,GAA4B2b,IAAnC;EACD;;EACD,IAAI7f,MAAM,GAAG2yC,UAAU,CAAC9yB,IAAD,CAAvB;;EACA,IAAI9uB,cAAc,CAACiP,MAAD,CAAd,IAA0BxD,IAAI,CAACgE,KAAL,CAAWR,MAAX,MAAuBA,MAArD,EAA6D;IAC3D,IAAI6f,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAnC,EAAwC;MACtC7f,MAAM,GAAG0F,KAAK,GAAG1F,MAAjB;IACD;;IACD,IAAIA,MAAM,KAAK0F,KAAX,IAAoB1F,MAAM,GAAG,CAA7B,IAAkCA,MAAM,IAAI4M,KAAhD,EAAuD;MACrD,OAAO,KAAP;IACD;;IACD,OAAO5M,MAAP;EACD;;EACD,OAAO,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,EAA2B,OAA3B,EAAoC2V,OAApC,CAA4CkK,IAA5C,KAAqD,CAArD,IAA0DA,IAAjE;AACD;;AACD,SAAS+yB,qBAAT,CAA+B/d,MAA/B,EAAuC;EACrC,MAAM;IAACrwB,KAAK,GAAG,EAAT;IAAaqb;EAAb,IAAqBgV,MAA3B;EACA,IAAI70B,MAAM,GAAG,IAAb;EACA,IAAI2U,UAAJ;;EACA,IAAIkL,IAAI,KAAK,OAAb,EAAsB;IACpB7f,MAAM,GAAGwE,KAAK,CAACU,MAAf;EACD,CAFD,MAEO,IAAI2a,IAAI,KAAK,KAAb,EAAoB;IACzB7f,MAAM,GAAGwE,KAAK,CAACQ,GAAf;EACD,CAFM,MAEA,IAAI/U,QAAQ,CAAC4vB,IAAD,CAAZ,EAAoB;IACzB7f,MAAM,GAAGwE,KAAK,CAACiO,gBAAN,CAAuBoN,IAAI,CAAC3b,KAA5B,CAAT;EACD,CAFM,MAEA,IAAIM,KAAK,CAACkQ,YAAV,EAAwB;IAC7B1U,MAAM,GAAGwE,KAAK,CAACkQ,YAAN,EAAT;EACD;;EACD,IAAI3jB,cAAc,CAACiP,MAAD,CAAlB,EAA4B;IAC1B2U,UAAU,GAAGnQ,KAAK,CAACoQ,YAAN,EAAb;IACA,OAAO;MACL9hB,CAAC,EAAE6hB,UAAU,GAAG3U,MAAH,GAAY,IADpB;MAELhN,CAAC,EAAE2hB,UAAU,GAAG,IAAH,GAAU3U;IAFlB,CAAP;EAID;;EACD,OAAO,IAAP;AACD;;AACD,MAAM6yC,SAAN,CAAgB;EACdx3C,WAAW,CAACqJ,IAAD,EAAO;IAChB,KAAK5R,CAAL,GAAS4R,IAAI,CAAC5R,CAAd;IACA,KAAKE,CAAL,GAAS0R,IAAI,CAAC1R,CAAd;IACA,KAAKwkB,MAAL,GAAc9S,IAAI,CAAC8S,MAAnB;EACD;;EACDs0B,WAAW,CAACviC,GAAD,EAAMgkB,MAAN,EAAc7oB,IAAd,EAAoB;IAC7B,MAAM;MAAC5R,CAAD;MAAIE,CAAJ;MAAOwkB;IAAP,IAAiB,IAAvB;IACA+V,MAAM,GAAGA,MAAM,IAAI;MAAC7wB,KAAK,EAAE,CAAR;MAAWkI,GAAG,EAAEzS;IAAhB,CAAnB;IACAoX,GAAG,CAACyR,GAAJ,CAAQloB,CAAR,EAAWE,CAAX,EAAcwkB,MAAd,EAAsB+V,MAAM,CAAC3oB,GAA7B,EAAkC2oB,MAAM,CAAC7wB,KAAzC,EAAgD,IAAhD;IACA,OAAO,CAACgI,IAAI,CAAC6oB,MAAb;EACD;;EACDggB,WAAW,CAACl2B,KAAD,EAAQ;IACjB,MAAM;MAACvkB,CAAD;MAAIE,CAAJ;MAAOwkB;IAAP,IAAiB,IAAvB;IACA,MAAMqB,KAAK,GAAGxB,KAAK,CAACwB,KAApB;IACA,OAAO;MACL/lB,CAAC,EAAEA,CAAC,GAAG0J,IAAI,CAAC+b,GAAL,CAASM,KAAT,IAAkBrB,MADpB;MAELxkB,CAAC,EAAEA,CAAC,GAAGwJ,IAAI,CAACic,GAAL,CAASI,KAAT,IAAkBrB,MAFpB;MAGLqB;IAHK,CAAP;EAKD;;AApBa;;AAsBhB,SAASi6B,uBAAT,CAAiCje,MAAjC,EAAyC;EACvC,MAAM;IAACrwB,KAAD;IAAQqb;EAAR,IAAgBgV,MAAtB;EACA,MAAMpxB,OAAO,GAAGe,KAAK,CAACf,OAAtB;EACA,MAAMpG,MAAM,GAAGmH,KAAK,CAAC6I,SAAN,GAAkBhQ,MAAjC;EACA,MAAM2C,MAAM,GAAG,EAAf;EACA,MAAMtD,KAAK,GAAG+G,OAAO,CAACkB,OAAR,GAAkBH,KAAK,CAAC7F,GAAxB,GAA8B6F,KAAK,CAAC/H,GAAlD;EACA,MAAMmI,GAAG,GAAGnB,OAAO,CAACkB,OAAR,GAAkBH,KAAK,CAAC/H,GAAxB,GAA8B+H,KAAK,CAAC7F,GAAhD;EACA,IAAI3O,CAAJ,EAAOolB,MAAP,EAAelR,KAAf;;EACA,IAAI2b,IAAI,KAAK,OAAb,EAAsB;IACpB3b,KAAK,GAAGxH,KAAR;EACD,CAFD,MAEO,IAAImjB,IAAI,KAAK,KAAb,EAAoB;IACzB3b,KAAK,GAAGU,GAAR;EACD,CAFM,MAEA,IAAI3U,QAAQ,CAAC4vB,IAAD,CAAZ,EAAoB;IACzB3b,KAAK,GAAG2b,IAAI,CAAC3b,KAAb;EACD,CAFM,MAEA;IACLA,KAAK,GAAGM,KAAK,CAAC4zB,YAAN,EAAR;EACD;;EACD,IAAI30B,OAAO,CAACuT,IAAR,CAAasI,QAAjB,EAA2B;IACzBlK,MAAM,GAAG5Q,KAAK,CAACob,wBAAN,CAA+B,CAA/B,EAAkCljB,KAAlC,CAAT;IACA,OAAO,IAAIm2C,SAAJ,CAAc;MACnB//C,CAAC,EAAEsiB,MAAM,CAACtiB,CADS;MAEnBE,CAAC,EAAEoiB,MAAM,CAACpiB,CAFS;MAGnBwkB,MAAM,EAAEhT,KAAK,CAAC2a,6BAAN,CAAoCjb,KAApC;IAHW,CAAd,CAAP;EAKD;;EACD,KAAKlU,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqN,MAAhB,EAAwB,EAAErN,CAA1B,EAA6B;IAC3BgQ,MAAM,CAAC3B,IAAP,CAAYmG,KAAK,CAACob,wBAAN,CAA+B5vB,CAA/B,EAAkCkU,KAAlC,CAAZ;EACD;;EACD,OAAOlE,MAAP;AACD;;AACD,SAAS+yC,eAAT,CAAyBle,MAAzB,EAAiC;EAC/B,MAAMrwB,KAAK,GAAGqwB,MAAM,CAACrwB,KAAP,IAAgB,EAA9B;;EACA,IAAIA,KAAK,CAACob,wBAAV,EAAoC;IAClC,OAAOkzB,uBAAuB,CAACje,MAAD,CAA9B;EACD;;EACD,OAAO+d,qBAAqB,CAAC/d,MAAD,CAA5B;AACD;;AACD,SAASme,kBAAT,CAA4BC,QAA5B,EAAsCp2B,IAAtC,EAA4C;EAC1C,MAAM;IAAC/pB,CAAC,GAAG,IAAL;IAAWE,CAAC,GAAG;EAAf,IAAuBigD,QAAQ,IAAI,EAAzC;EACA,MAAMC,UAAU,GAAGr2B,IAAI,CAACzF,MAAxB;EACA,MAAMA,MAAM,GAAG,EAAf;EACAyF,IAAI,CAACywB,QAAL,CAAcjxC,OAAd,CAAuBwvC,OAAD,IAAa;IACjC,MAAMtc,KAAK,GAAG2jB,UAAU,CAACrH,OAAO,CAACnvC,KAAT,CAAxB;IACA,MAAM8Y,IAAI,GAAG09B,UAAU,CAACrH,OAAO,CAACjnC,GAAT,CAAvB;;IACA,IAAI5R,CAAC,KAAK,IAAV,EAAgB;MACdokB,MAAM,CAAC/Y,IAAP,CAAY;QAACvL,CAAC,EAAEy8B,KAAK,CAACz8B,CAAV;QAAaE;MAAb,CAAZ;MACAokB,MAAM,CAAC/Y,IAAP,CAAY;QAACvL,CAAC,EAAE0iB,IAAI,CAAC1iB,CAAT;QAAYE;MAAZ,CAAZ;IACD,CAHD,MAGO,IAAIF,CAAC,KAAK,IAAV,EAAgB;MACrBskB,MAAM,CAAC/Y,IAAP,CAAY;QAACvL,CAAD;QAAIE,CAAC,EAAEu8B,KAAK,CAACv8B;MAAb,CAAZ;MACAokB,MAAM,CAAC/Y,IAAP,CAAY;QAACvL,CAAD;QAAIE,CAAC,EAAEwiB,IAAI,CAACxiB;MAAZ,CAAZ;IACD;EACF,CAVD;EAWA,OAAOokB,MAAP;AACD;;AACD,SAAS+7B,cAAT,CAAwBte,MAAxB,EAAgC;EAC9B,MAAM;IAACh5B,KAAD;IAAQ2I,KAAR;IAAekB,KAAf;IAAsBmX;EAAtB,IAA8BgY,MAApC;EACA,MAAMzd,MAAM,GAAG,EAAf;EACA,MAAMk2B,QAAQ,GAAGzwB,IAAI,CAACywB,QAAtB;EACA,MAAM8F,YAAY,GAAGv2B,IAAI,CAACzF,MAA1B;EACA,MAAMi8B,UAAU,GAAGC,aAAa,CAACz3C,KAAD,EAAQ6J,KAAR,CAAhC;EACA2tC,UAAU,CAACh1C,IAAX,CAAgBk1C,kBAAkB,CAAC;IAACzgD,CAAC,EAAE,IAAJ;IAAUE,CAAC,EAAEwR,KAAK,CAACU;EAAnB,CAAD,EAA6B2X,IAA7B,CAAlC;;EACA,KAAK,IAAI7sB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGs9C,QAAQ,CAACjwC,MAA7B,EAAqCrN,CAAC,EAAtC,EAA0C;IACxC,MAAM67C,OAAO,GAAGyB,QAAQ,CAACt9C,CAAD,CAAxB;;IACA,KAAK,IAAIoB,CAAC,GAAGy6C,OAAO,CAACnvC,KAArB,EAA4BtL,CAAC,IAAIy6C,OAAO,CAACjnC,GAAzC,EAA8CxT,CAAC,EAA/C,EAAmD;MACjDoiD,cAAc,CAACp8B,MAAD,EAASg8B,YAAY,CAAChiD,CAAD,CAArB,EAA0BiiD,UAA1B,CAAd;IACD;EACF;;EACD,OAAO,IAAInG,WAAJ,CAAgB;IAAC91B,MAAD;IAAS3T,OAAO,EAAE;EAAlB,CAAhB,CAAP;AACD;;AACD,MAAMgwC,2BAA2B,GAAIltC,IAAD,IAAUA,IAAI,CAACvK,IAAL,KAAc,MAAd,IAAwB,CAACuK,IAAI,CAAC6V,MAA5E;;AACA,SAASk3B,aAAT,CAAuBz3C,KAAvB,EAA8B6J,KAA9B,EAAqC;EACnC,MAAMguC,KAAK,GAAG,EAAd;EACA,MAAM1hC,KAAK,GAAGnW,KAAK,CAACulB,4BAAN,EAAd;;EACA,KAAK,IAAIpxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgiB,KAAK,CAAC3U,MAA1B,EAAkCrN,CAAC,EAAnC,EAAuC;IACrC,MAAMuW,IAAI,GAAGyL,KAAK,CAAChiB,CAAD,CAAlB;;IACA,IAAIuW,IAAI,CAACb,KAAL,KAAeA,KAAnB,EAA0B;MACxB;IACD;;IACD,IAAI+tC,2BAA2B,CAACltC,IAAD,CAA/B,EAAuC;MACrCmtC,KAAK,CAACC,OAAN,CAAcptC,IAAI,CAACmC,OAAnB;IACD;EACF;;EACD,OAAOgrC,KAAP;AACD;;AACD,SAASF,cAAT,CAAwBp8B,MAAxB,EAAgCw8B,WAAhC,EAA6CP,UAA7C,EAAyD;EACvD,MAAMQ,SAAS,GAAG,EAAlB;;EACA,KAAK,IAAIziD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiiD,UAAU,CAACh2C,MAA/B,EAAuCjM,CAAC,EAAxC,EAA4C;IAC1C,MAAMyrB,IAAI,GAAGw2B,UAAU,CAACjiD,CAAD,CAAvB;IACA,MAAM;MAACm+B,KAAD;MAAQ/Z,IAAR;MAAc6B;IAAd,IAAuBy8B,SAAS,CAACj3B,IAAD,EAAO+2B,WAAP,EAAoB,GAApB,CAAtC;;IACA,IAAI,CAACv8B,KAAD,IAAWkY,KAAK,IAAI/Z,IAAxB,EAA+B;MAC7B;IACD;;IACD,IAAI+Z,KAAJ,EAAW;MACTskB,SAAS,CAACF,OAAV,CAAkBt8B,KAAlB;IACD,CAFD,MAEO;MACLD,MAAM,CAAC/Y,IAAP,CAAYgZ,KAAZ;;MACA,IAAI,CAAC7B,IAAL,EAAW;QACT;MACD;IACF;EACF;;EACD4B,MAAM,CAAC/Y,IAAP,CAAY,GAAGw1C,SAAf;AACD;;AACD,SAASC,SAAT,CAAmBj3B,IAAnB,EAAyB+2B,WAAzB,EAAsC7W,QAAtC,EAAgD;EAC9C,MAAM1lB,KAAK,GAAGwF,IAAI,CAAC0wB,WAAL,CAAiBqG,WAAjB,EAA8B7W,QAA9B,CAAd;;EACA,IAAI,CAAC1lB,KAAL,EAAY;IACV,OAAO,EAAP;EACD;;EACD,MAAM08B,UAAU,GAAG18B,KAAK,CAAC0lB,QAAD,CAAxB;EACA,MAAMuQ,QAAQ,GAAGzwB,IAAI,CAACywB,QAAtB;EACA,MAAM4F,UAAU,GAAGr2B,IAAI,CAACzF,MAAxB;EACA,IAAImY,KAAK,GAAG,KAAZ;EACA,IAAI/Z,IAAI,GAAG,KAAX;;EACA,KAAK,IAAIxlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGs9C,QAAQ,CAACjwC,MAA7B,EAAqCrN,CAAC,EAAtC,EAA0C;IACxC,MAAM67C,OAAO,GAAGyB,QAAQ,CAACt9C,CAAD,CAAxB;IACA,MAAMgkD,UAAU,GAAGd,UAAU,CAACrH,OAAO,CAACnvC,KAAT,CAAV,CAA0BqgC,QAA1B,CAAnB;IACA,MAAMkX,SAAS,GAAGf,UAAU,CAACrH,OAAO,CAACjnC,GAAT,CAAV,CAAwBm4B,QAAxB,CAAlB;;IACA,IAAIgX,UAAU,IAAIC,UAAd,IAA4BD,UAAU,IAAIE,SAA9C,EAAyD;MACvD1kB,KAAK,GAAGwkB,UAAU,KAAKC,UAAvB;MACAx+B,IAAI,GAAGu+B,UAAU,KAAKE,SAAtB;MACA;IACD;EACF;;EACD,OAAO;IAAC1kB,KAAD;IAAQ/Z,IAAR;IAAc6B;EAAd,CAAP;AACD;;AACD,SAAS68B,SAAT,CAAmBrf,MAAnB,EAA2B;EACzB,MAAM;IAACh5B,KAAD;IAAQgkB,IAAR;IAAchD;EAAd,IAAsBgY,MAA5B;;EACA,IAAI9jC,cAAc,CAAC8uB,IAAD,CAAlB,EAA0B;IACxB,OAAO0yB,cAAc,CAAC12C,KAAD,EAAQgkB,IAAR,CAArB;EACD;;EACD,IAAIA,IAAI,KAAK,OAAb,EAAsB;IACpB,OAAOszB,cAAc,CAACte,MAAD,CAArB;EACD;;EACD,MAAMoe,QAAQ,GAAGF,eAAe,CAACle,MAAD,CAAhC;;EACA,IAAIoe,QAAQ,YAAYJ,SAAxB,EAAmC;IACjC,OAAOI,QAAP;EACD;;EACD,OAAOM,kBAAkB,CAACN,QAAD,EAAWp2B,IAAX,CAAzB;AACD;;AACD,SAAS02B,kBAAT,CAA4BN,QAA5B,EAAsCp2B,IAAtC,EAA4C;EAC1C,IAAIzF,MAAM,GAAG,EAAb;EACA,IAAI1W,KAAK,GAAG,KAAZ;;EACA,IAAIvQ,OAAO,CAAC8iD,QAAD,CAAX,EAAuB;IACrBvyC,KAAK,GAAG,IAAR;IACA0W,MAAM,GAAG67B,QAAT;EACD,CAHD,MAGO;IACL77B,MAAM,GAAG47B,kBAAkB,CAACC,QAAD,EAAWp2B,IAAX,CAA3B;EACD;;EACD,OAAOzF,MAAM,CAAC/Z,MAAP,GAAgB,IAAI6vC,WAAJ,CAAgB;IACrC91B,MADqC;IAErC3T,OAAO,EAAE;MAACkoC,OAAO,EAAE;IAAV,CAF4B;IAGrCjrC,KAHqC;IAIrCgf,SAAS,EAAEhf;EAJ0B,CAAhB,CAAhB,GAKF,IALL;AAMD;;AACD,SAASyzC,aAAT,CAAuBC,OAAvB,EAAgC1uC,KAAhC,EAAuC2uC,SAAvC,EAAkD;EAChD,MAAMxf,MAAM,GAAGuf,OAAO,CAAC1uC,KAAD,CAAtB;EACA,IAAIma,IAAI,GAAGgV,MAAM,CAAChV,IAAlB;EACA,MAAMy0B,OAAO,GAAG,CAAC5uC,KAAD,CAAhB;EACA,IAAI1F,MAAJ;;EACA,IAAI,CAACq0C,SAAL,EAAgB;IACd,OAAOx0B,IAAP;EACD;;EACD,OAAOA,IAAI,KAAK,KAAT,IAAkBy0B,OAAO,CAAC3+B,OAAR,CAAgBkK,IAAhB,MAA0B,CAAC,CAApD,EAAuD;IACrD,IAAI,CAAC9uB,cAAc,CAAC8uB,IAAD,CAAnB,EAA2B;MACzB,OAAOA,IAAP;IACD;;IACD7f,MAAM,GAAGo0C,OAAO,CAACv0B,IAAD,CAAhB;;IACA,IAAI,CAAC7f,MAAL,EAAa;MACX,OAAO,KAAP;IACD;;IACD,IAAIA,MAAM,CAAC2C,OAAX,EAAoB;MAClB,OAAOkd,IAAP;IACD;;IACDy0B,OAAO,CAACj2C,IAAR,CAAawhB,IAAb;IACAA,IAAI,GAAG7f,MAAM,CAAC6f,IAAd;EACD;;EACD,OAAO,KAAP;AACD;;AACD,SAASnR,KAAT,CAAenF,GAAf,EAAoBvJ,MAApB,EAA4Bu0C,KAA5B,EAAmC;EACjChrC,GAAG,CAAC+xB,SAAJ;EACAt7B,MAAM,CAAC4sC,IAAP,CAAYrjC,GAAZ;EACAA,GAAG,CAACiyB,MAAJ,CAAWx7B,MAAM,CAACwV,IAAP,GAAc1iB,CAAzB,EAA4ByhD,KAA5B;EACAhrC,GAAG,CAACiyB,MAAJ,CAAWx7B,MAAM,CAACuvB,KAAP,GAAez8B,CAA1B,EAA6ByhD,KAA7B;EACAhrC,GAAG,CAAC6gC,SAAJ;EACA7gC,GAAG,CAACoF,IAAJ;AACD;;AACD,SAAS6lC,SAAT,CAAmBzX,QAAnB,EAA6BxN,KAA7B,EAAoC/Z,IAApC,EAA0C7U,IAA1C,EAAgD;EAC9C,IAAIA,IAAJ,EAAU;IACR;EACD;;EACD,IAAIjE,KAAK,GAAG6yB,KAAK,CAACwN,QAAD,CAAjB;EACA,IAAIn4B,GAAG,GAAG4Q,IAAI,CAACunB,QAAD,CAAd;;EACA,IAAIA,QAAQ,KAAK,OAAjB,EAA0B;IACxBrgC,KAAK,GAAGrD,eAAe,CAACqD,KAAD,CAAvB;IACAkI,GAAG,GAAGvL,eAAe,CAACuL,GAAD,CAArB;EACD;;EACD,OAAO;IAACm4B,QAAD;IAAWrgC,KAAX;IAAkBkI;EAAlB,CAAP;AACD;;AACD,SAAS6vC,QAAT,CAAkB/kD,CAAlB,EAAqBQ,CAArB,EAAwB+P,IAAxB,EAA8B3D,EAA9B,EAAkC;EAChC,IAAI5M,CAAC,IAAIQ,CAAT,EAAY;IACV,OAAOoM,EAAE,CAAC5M,CAAC,CAACuQ,IAAD,CAAF,EAAU/P,CAAC,CAAC+P,IAAD,CAAX,CAAT;EACD;;EACD,OAAOvQ,CAAC,GAAGA,CAAC,CAACuQ,IAAD,CAAJ,GAAa/P,CAAC,GAAGA,CAAC,CAAC+P,IAAD,CAAJ,GAAa,CAAnC;AACD;;AACD,SAASmtC,SAAT,CAAmBvwB,IAAnB,EAAyB7c,MAAzB,EAAiC+8B,QAAjC,EAA2C;EACzC,MAAMuQ,QAAQ,GAAGzwB,IAAI,CAACywB,QAAtB;EACA,MAAMl2B,MAAM,GAAGyF,IAAI,CAACzF,MAApB;EACA,MAAMs9B,OAAO,GAAG10C,MAAM,CAACoX,MAAvB;EACA,MAAMimB,KAAK,GAAG,EAAd;;EACA,KAAK,IAAIrtC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGs9C,QAAQ,CAACjwC,MAA7B,EAAqCrN,CAAC,EAAtC,EAA0C;IACxC,MAAM67C,OAAO,GAAGyB,QAAQ,CAACt9C,CAAD,CAAxB;IACA,MAAMu9B,MAAM,GAAGinB,SAAS,CAACzX,QAAD,EAAW3lB,MAAM,CAACy0B,OAAO,CAACnvC,KAAT,CAAjB,EAAkC0a,MAAM,CAACy0B,OAAO,CAACjnC,GAAT,CAAxC,EAAuDinC,OAAO,CAAClrC,IAA/D,CAAxB;;IACA,IAAI,CAACX,MAAM,CAACstC,QAAZ,EAAsB;MACpBjQ,KAAK,CAACh/B,IAAN,CAAW;QACTw2B,MAAM,EAAEgX,OADC;QAET7rC,MAAM,EAAEutB,MAFC;QAGT7wB,KAAK,EAAE0a,MAAM,CAACy0B,OAAO,CAACnvC,KAAT,CAHJ;QAITkI,GAAG,EAAEwS,MAAM,CAACy0B,OAAO,CAACjnC,GAAT;MAJF,CAAX;MAMA;IACD;;IACD,MAAM+vC,IAAI,GAAG18C,cAAc,CAAC+H,MAAD,EAASutB,MAAT,CAA3B;;IACA,KAAK,IAAIn8B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGujD,IAAI,CAACt3C,MAAzB,EAAiC,EAAEjM,CAAnC,EAAsC;MACpC,MAAMwjD,GAAG,GAAGD,IAAI,CAACvjD,CAAD,CAAhB;MACA,MAAMyjD,SAAS,GAAGL,SAAS,CAACzX,QAAD,EAAW2X,OAAO,CAACE,GAAG,CAACl4C,KAAL,CAAlB,EAA+Bg4C,OAAO,CAACE,GAAG,CAAChwC,GAAL,CAAtC,EAAiDgwC,GAAG,CAACj0C,IAArD,CAA3B;;MACA,MAAMm0C,WAAW,GAAG37C,aAAa,CAAC0yC,OAAD,EAAUz0B,MAAV,EAAkBy9B,SAAlB,CAAjC;;MACA,KAAK,IAAIvjD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwjD,WAAW,CAACz3C,MAAhC,EAAwC/L,CAAC,EAAzC,EAA6C;QAC3C+rC,KAAK,CAACh/B,IAAN,CAAW;UACTw2B,MAAM,EAAEigB,WAAW,CAACxjD,CAAD,CADV;UAET0O,MAAM,EAAE40C,GAFC;UAGTl4C,KAAK,EAAE;YACL,CAACqgC,QAAD,GAAY0X,QAAQ,CAAClnB,MAAD,EAASsnB,SAAT,EAAoB,OAApB,EAA6Br4C,IAAI,CAACmC,GAAlC;UADf,CAHE;UAMTiG,GAAG,EAAE;YACH,CAACm4B,QAAD,GAAY0X,QAAQ,CAAClnB,MAAD,EAASsnB,SAAT,EAAoB,KAApB,EAA2Br4C,IAAI,CAACC,GAAhC;UADjB;QANI,CAAX;MAUD;IACF;EACF;;EACD,OAAO4gC,KAAP;AACD;;AACD,SAAS0X,UAAT,CAAoBxrC,GAApB,EAAyB/E,KAAzB,EAAgC+oB,MAAhC,EAAwC;EACtC,MAAM;IAACvoB,GAAD;IAAME;EAAN,IAAgBV,KAAK,CAAC3I,KAAN,CAAYiT,SAAlC;EACA,MAAM;IAACiuB,QAAD;IAAWrgC,KAAX;IAAkBkI;EAAlB,IAAyB2oB,MAAM,IAAI,EAAzC;;EACA,IAAIwP,QAAQ,KAAK,GAAjB,EAAsB;IACpBxzB,GAAG,CAAC+xB,SAAJ;IACA/xB,GAAG,CAAC2mC,IAAJ,CAASxzC,KAAT,EAAgBsI,GAAhB,EAAqBJ,GAAG,GAAGlI,KAA3B,EAAkCwI,MAAM,GAAGF,GAA3C;IACAuE,GAAG,CAACoF,IAAJ;EACD;AACF;;AACD,SAASqmC,kBAAT,CAA4BzrC,GAA5B,EAAiCvJ,MAAjC,EAAyCqX,KAAzC,EAAgD0lB,QAAhD,EAA0D;EACxD,MAAMkY,iBAAiB,GAAGj1C,MAAM,CAACutC,WAAP,CAAmBl2B,KAAnB,EAA0B0lB,QAA1B,CAA1B;;EACA,IAAIkY,iBAAJ,EAAuB;IACrB1rC,GAAG,CAACiyB,MAAJ,CAAWyZ,iBAAiB,CAACniD,CAA7B,EAAgCmiD,iBAAiB,CAACjiD,CAAlD;EACD;AACF;;AACD,SAASkiD,KAAT,CAAe3rC,GAAf,EAAoBxJ,GAApB,EAAyB;EACvB,MAAM;IAAC8c,IAAD;IAAO7c,MAAP;IAAe+8B,QAAf;IAAyBhtC,KAAzB;IAAgCyU;EAAhC,IAAyCzE,GAA/C;;EACA,MAAMutC,QAAQ,GAAGF,SAAS,CAACvwB,IAAD,EAAO7c,MAAP,EAAe+8B,QAAf,CAA1B;;EACAxzB,GAAG,CAACwS,SAAJ,GAAgBhsB,KAAhB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWyV,IAAI,GAAG6nC,QAAQ,CAACjwC,MAAhC,EAAwCrN,CAAC,GAAGyV,IAA5C,EAAkD,EAAEzV,CAApD,EAAuD;IACrD,MAAM;MAAC6kC,MAAM,EAAEsgB,GAAT;MAAcn1C,MAAM,EAAEo1C,GAAtB;MAA2B14C,KAA3B;MAAkCkI;IAAlC,IAAyC0oC,QAAQ,CAACt9C,CAAD,CAAvD;IACAuZ,GAAG,CAACqxB,IAAJ;IACAma,UAAU,CAACxrC,GAAD,EAAM/E,KAAN,EAAagwC,SAAS,CAACzX,QAAD,EAAWrgC,KAAX,EAAkBkI,GAAlB,CAAtB,CAAV;IACA2E,GAAG,CAAC+xB,SAAJ;IACA,MAAM+Z,QAAQ,GAAG,CAAC,CAACx4B,IAAI,CAACivB,WAAL,CAAiBviC,GAAjB,EAAsB4rC,GAAtB,CAAnB;;IACA,IAAIE,QAAJ,EAAc;MACZ9rC,GAAG,CAAC6gC,SAAJ;IACD,CAFD,MAEO;MACL4K,kBAAkB,CAACzrC,GAAD,EAAMvJ,MAAN,EAAc4E,GAAd,EAAmBm4B,QAAnB,CAAlB;IACD;;IACD,MAAMuY,UAAU,GAAG,CAAC,CAACt1C,MAAM,CAAC8rC,WAAP,CAAmBviC,GAAnB,EAAwB6rC,GAAxB,EAA6B;MAACnkC,IAAI,EAAEokC,QAAP;MAAiB1wC,OAAO,EAAE;IAA1B,CAA7B,CAArB;IACA,MAAMhE,IAAI,GAAG00C,QAAQ,IAAIC,UAAzB;;IACA,IAAI,CAAC30C,IAAL,EAAW;MACTq0C,kBAAkB,CAACzrC,GAAD,EAAMvJ,MAAN,EAActD,KAAd,EAAqBqgC,QAArB,CAAlB;IACD;;IACDxzB,GAAG,CAAC6gC,SAAJ;IACA7gC,GAAG,CAACsW,IAAJ,CAASlf,IAAI,GAAG,SAAH,GAAe,SAA5B;IACA4I,GAAG,CAACuxB,OAAJ;EACD;AACF;;AACD,SAASya,MAAT,CAAgBhsC,GAAhB,EAAqBxJ,GAArB,EAA0B;EACxB,MAAM;IAAC8c,IAAD;IAAO7c,MAAP;IAAew1C,KAAf;IAAsB9B,KAAtB;IAA6B7kC,IAA7B;IAAmCrK;EAAnC,IAA4CzE,GAAlD;EACA,MAAMg9B,QAAQ,GAAGlgB,IAAI,CAACnc,KAAL,GAAa,OAAb,GAAuB,GAAxC;EACA6I,GAAG,CAACqxB,IAAJ;;EACA,IAAImC,QAAQ,KAAK,GAAb,IAAoB2W,KAAK,KAAK8B,KAAlC,EAAyC;IACvC9mC,KAAK,CAACnF,GAAD,EAAMvJ,MAAN,EAAc6O,IAAI,CAAC7J,GAAnB,CAAL;;IACAkwC,KAAK,CAAC3rC,GAAD,EAAM;MAACsT,IAAD;MAAO7c,MAAP;MAAejQ,KAAK,EAAEylD,KAAtB;MAA6BhxC,KAA7B;MAAoCu4B;IAApC,CAAN,CAAL;;IACAxzB,GAAG,CAACuxB,OAAJ;IACAvxB,GAAG,CAACqxB,IAAJ;;IACAlsB,KAAK,CAACnF,GAAD,EAAMvJ,MAAN,EAAc6O,IAAI,CAAC3J,MAAnB,CAAL;EACD;;EACDgwC,KAAK,CAAC3rC,GAAD,EAAM;IAACsT,IAAD;IAAO7c,MAAP;IAAejQ,KAAK,EAAE2jD,KAAtB;IAA6BlvC,KAA7B;IAAoCu4B;EAApC,CAAN,CAAL;;EACAxzB,GAAG,CAACuxB,OAAJ;AACD;;AACD,IAAI2a,aAAa,GAAG;EAClB7uC,EAAE,EAAE,QADc;;EAElB8uC,mBAAmB,CAAC75C,KAAD,EAAQ85C,KAAR,EAAelyC,OAAf,EAAwB;IACzC,MAAMmJ,KAAK,GAAG,CAAC/Q,KAAK,CAACsK,IAAN,CAAWoF,QAAX,IAAuB,EAAxB,EAA4BlO,MAA1C;IACA,MAAMg3C,SAAS,GAAG5wC,OAAO,CAAC4wC,SAA1B;IACA,MAAMD,OAAO,GAAG,EAAhB;IACA,IAAI7tC,IAAJ,EAAUvW,CAAV,EAAa6sB,IAAb,EAAmBgY,MAAnB;;IACA,KAAK7kC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,KAAhB,EAAuB,EAAE5c,CAAzB,EAA4B;MAC1BuW,IAAI,GAAG1K,KAAK,CAAC2P,cAAN,CAAqBxb,CAArB,CAAP;MACA6sB,IAAI,GAAGtW,IAAI,CAACmC,OAAZ;MACAmsB,MAAM,GAAG,IAAT;;MACA,IAAIhY,IAAI,IAAIA,IAAI,CAACpZ,OAAb,IAAwBoZ,IAAI,YAAYqwB,WAA5C,EAAyD;QACvDrY,MAAM,GAAG;UACPlyB,OAAO,EAAE9G,KAAK,CAAC4d,gBAAN,CAAuBzpB,CAAvB,CADF;UAEP0V,KAAK,EAAE1V,CAFA;UAGP6vB,IAAI,EAAE6yB,UAAU,CAAC71B,IAAD,EAAO7sB,CAAP,EAAU4c,KAAV,CAHT;UAIP/Q,KAJO;UAKP2I,KAAK,EAAE+B,IAAI,CAACuB,MALL;UAMP+U;QANO,CAAT;MAQD;;MACDtW,IAAI,CAACqvC,OAAL,GAAe/gB,MAAf;MACAuf,OAAO,CAAC/1C,IAAR,CAAaw2B,MAAb;IACD;;IACD,KAAK7kC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,KAAhB,EAAuB,EAAE5c,CAAzB,EAA4B;MAC1B6kC,MAAM,GAAGuf,OAAO,CAACpkD,CAAD,CAAhB;;MACA,IAAI,CAAC6kC,MAAD,IAAWA,MAAM,CAAChV,IAAP,KAAgB,KAA/B,EAAsC;QACpC;MACD;;MACDgV,MAAM,CAAChV,IAAP,GAAcs0B,aAAa,CAACC,OAAD,EAAUpkD,CAAV,EAAaqkD,SAAb,CAA3B;IACD;EACF,CA/BiB;;EAgClBwB,kBAAkB,CAACh6C,KAAD,EAAQ;IACxB,MAAM0J,QAAQ,GAAG1J,KAAK,CAACulB,4BAAN,EAAjB;IACA,MAAMvS,IAAI,GAAGhT,KAAK,CAACiT,SAAnB;IACA,IAAI9e,CAAJ,EAAOuW,IAAP;;IACA,KAAKvW,CAAC,GAAGuV,QAAQ,CAAClI,MAAT,GAAkB,CAA3B,EAA8BrN,CAAC,IAAI,CAAnC,EAAsC,EAAEA,CAAxC,EAA2C;MACzCuW,IAAI,GAAGhB,QAAQ,CAACvV,CAAD,CAAR,CAAY4lD,OAAnB;;MACA,IAAIrvC,IAAJ,EAAU;QACRA,IAAI,CAACsW,IAAL,CAAUe,mBAAV,CAA8B/O,IAA9B;MACD;IACF;EACF,CA1CiB;;EA2ClBinC,iBAAiB,CAACj6C,KAAD,EAAQ6vB,IAAR,EAAc;IAC7B,MAAM7c,IAAI,GAAGhT,KAAK,CAACiT,SAAnB;IACA,MAAMvF,GAAG,GAAG1N,KAAK,CAAC0N,GAAlB;IACA,MAAMsrB,MAAM,GAAGnJ,IAAI,CAACnlB,IAAL,CAAUqvC,OAAzB;;IACA,IAAI,CAAC/gB,MAAD,IAAWA,MAAM,CAAChV,IAAP,KAAgB,KAA/B,EAAsC;MACpC;IACD;;IACD,MAAM7f,MAAM,GAAGk0C,SAAS,CAACrf,MAAD,CAAxB;IACA,MAAM;MAAChY,IAAD;MAAOrY;IAAP,IAAgBqwB,MAAtB;IACA,MAAMkhB,QAAQ,GAAGl5B,IAAI,CAACpZ,OAAtB;IACA,MAAMgvC,UAAU,GAAGsD,QAAQ,CAACl2B,IAA5B;IACA,MAAM9vB,KAAK,GAAGgmD,QAAQ,CAAC/5B,eAAvB;IACA,MAAM;MAACw5B,KAAK,GAAGzlD,KAAT;MAAgB2jD,KAAK,GAAG3jD;IAAxB,IAAiC0iD,UAAU,IAAI,EAArD;;IACA,IAAIzyC,MAAM,IAAI6c,IAAI,CAACzF,MAAL,CAAY/Z,MAA1B,EAAkC;MAChC9L,QAAQ,CAACgY,GAAD,EAAMsF,IAAN,CAAR;MACA0mC,MAAM,CAAChsC,GAAD,EAAM;QAACsT,IAAD;QAAO7c,MAAP;QAAew1C,KAAf;QAAsB9B,KAAtB;QAA6B7kC,IAA7B;QAAmCrK;MAAnC,CAAN,CAAN;MACA/S,UAAU,CAAC8X,GAAD,CAAV;IACD;EACF,CA7DiB;;EA8DlBlZ,QAAQ,EAAE;IACRgkD,SAAS,EAAE;EADH;AA9DQ,CAApB;;AAmEA,MAAM2B,UAAU,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;EAC1C,IAAI;IAACC,SAAS,GAAGD,QAAb;IAAuBE,QAAQ,GAAGF;EAAlC,IAA8CD,SAAlD;;EACA,IAAIA,SAAS,CAACI,aAAd,EAA6B;IAC3BF,SAAS,GAAG35C,IAAI,CAACC,GAAL,CAAS05C,SAAT,EAAoBD,QAApB,CAAZ;IACAE,QAAQ,GAAG55C,IAAI,CAACC,GAAL,CAAS25C,QAAT,EAAmBF,QAAnB,CAAX;EACD;;EACD,OAAO;IACLE,QADK;IAELD,SAFK;IAGLG,UAAU,EAAE95C,IAAI,CAACmC,GAAL,CAASu3C,QAAT,EAAmBC,SAAnB;EAHP,CAAP;AAKD,CAXD;;AAYA,MAAMI,UAAU,GAAG,CAAC7mD,CAAD,EAAIQ,CAAJ,KAAUR,CAAC,KAAK,IAAN,IAAcQ,CAAC,KAAK,IAApB,IAA4BR,CAAC,CAACsW,YAAF,KAAmB9V,CAAC,CAAC8V,YAAjD,IAAiEtW,CAAC,CAACgW,KAAF,KAAYxV,CAAC,CAACwV,KAA5G;;AACA,MAAM8wC,MAAN,SAAqBrqB,OAArB,CAA6B;EAC3B9wB,WAAW,CAACyH,MAAD,EAAS;IAClB;IACA,KAAK2zC,MAAL,GAAc,KAAd;IACA,KAAKC,cAAL,GAAsB,EAAtB;IACA,KAAKC,YAAL,GAAoB,IAApB;IACA,KAAKC,YAAL,GAAoB,KAApB;IACA,KAAK/6C,KAAL,GAAaiH,MAAM,CAACjH,KAApB;IACA,KAAK4H,OAAL,GAAeX,MAAM,CAACW,OAAtB;IACA,KAAK8F,GAAL,GAAWzG,MAAM,CAACyG,GAAlB;IACA,KAAKstC,WAAL,GAAmBl7C,SAAnB;IACA,KAAKm7C,WAAL,GAAmBn7C,SAAnB;IACA,KAAKo7C,UAAL,GAAkBp7C,SAAlB;IACA,KAAKue,SAAL,GAAiBve,SAAjB;IACA,KAAKse,QAAL,GAAgBte,SAAhB;IACA,KAAKqJ,GAAL,GAAWrJ,SAAX;IACA,KAAKuJ,MAAL,GAAcvJ,SAAd;IACA,KAAKwJ,IAAL,GAAYxJ,SAAZ;IACA,KAAKsJ,KAAL,GAAatJ,SAAb;IACA,KAAK0Z,MAAL,GAAc1Z,SAAd;IACA,KAAK2Z,KAAL,GAAa3Z,SAAb;IACA,KAAK02B,QAAL,GAAgB12B,SAAhB;IACA,KAAKmmB,QAAL,GAAgBnmB,SAAhB;IACA,KAAK6f,MAAL,GAAc7f,SAAd;IACA,KAAK6oB,QAAL,GAAgB7oB,SAAhB;EACD;;EACDuF,MAAM,CAAC+Y,QAAD,EAAWC,SAAX,EAAsB2Z,OAAtB,EAA+B;IACnC,MAAMj3B,EAAE,GAAG,IAAX;IACAA,EAAE,CAACqd,QAAH,GAAcA,QAAd;IACArd,EAAE,CAACsd,SAAH,GAAeA,SAAf;IACAtd,EAAE,CAACy1B,QAAH,GAAcwB,OAAd;IACAj3B,EAAE,CAACo3B,aAAH;IACAp3B,EAAE,CAACo6C,WAAH;IACAp6C,EAAE,CAACm4B,GAAH;EACD;;EACDf,aAAa,GAAG;IACd,MAAMp3B,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAACgY,YAAH,EAAJ,EAAuB;MACrBhY,EAAE,CAAC0Y,KAAH,GAAW1Y,EAAE,CAACqd,QAAd;MACArd,EAAE,CAACuI,IAAH,GAAU,CAAV;MACAvI,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAAC0Y,KAAd;IACD,CAJD,MAIO;MACL1Y,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAACsd,SAAf;MACAtd,EAAE,CAACoI,GAAH,GAAS,CAAT;MACApI,EAAE,CAACsI,MAAH,GAAYtI,EAAE,CAACyY,MAAf;IACD;EACF;;EACD2hC,WAAW,GAAG;IACZ,MAAMp6C,EAAE,GAAG,IAAX;IACA,MAAMq5C,SAAS,GAAGr5C,EAAE,CAAC6G,OAAH,CAAW2J,MAAX,IAAqB,EAAvC;IACA,IAAIypC,WAAW,GAAGhiD,QAAQ,CAACohD,SAAS,CAACt6B,cAAX,EAA2B,CAAC/e,EAAE,CAACf,KAAJ,CAA3B,EAAuCe,EAAvC,CAAR,IAAsD,EAAxE;;IACA,IAAIq5C,SAAS,CAAC5tC,MAAd,EAAsB;MACpBwuC,WAAW,GAAGA,WAAW,CAACxuC,MAAZ,CAAoB9K,IAAD,IAAU04C,SAAS,CAAC5tC,MAAV,CAAiB9K,IAAjB,EAAuBX,EAAE,CAACf,KAAH,CAASsK,IAAhC,CAA7B,CAAd;IACD;;IACD,IAAI8vC,SAAS,CAAC9jC,IAAd,EAAoB;MAClB0kC,WAAW,GAAGA,WAAW,CAAC1kC,IAAZ,CAAiB,CAACziB,CAAD,EAAIQ,CAAJ,KAAU+lD,SAAS,CAAC9jC,IAAV,CAAeziB,CAAf,EAAkBQ,CAAlB,EAAqB0M,EAAE,CAACf,KAAH,CAASsK,IAA9B,CAA3B,CAAd;IACD;;IACD,IAAIvJ,EAAE,CAAC6G,OAAH,CAAWkB,OAAf,EAAwB;MACtBkyC,WAAW,CAAClyC,OAAZ;IACD;;IACD/H,EAAE,CAACi6C,WAAH,GAAiBA,WAAjB;EACD;;EACD9hB,GAAG,GAAG;IACJ,MAAMn4B,EAAE,GAAG,IAAX;IACA,MAAM;MAAC6G,OAAD;MAAU8F;IAAV,IAAiB3M,EAAvB;;IACA,IAAI,CAAC6G,OAAO,CAAC4b,OAAb,EAAsB;MACpBziB,EAAE,CAAC0Y,KAAH,GAAW1Y,EAAE,CAACyY,MAAH,GAAY,CAAvB;MACA;IACD;;IACD,MAAM4gC,SAAS,GAAGxyC,OAAO,CAAC2J,MAA1B;IACA,MAAM6pC,SAAS,GAAGxhD,MAAM,CAACwgD,SAAS,CAACtkB,IAAX,CAAxB;IACA,MAAMukB,QAAQ,GAAGe,SAAS,CAAC9yC,IAA3B;;IACA,MAAMqyB,WAAW,GAAG55B,EAAE,CAACs6C,mBAAH,EAApB;;IACA,MAAM;MAACd,QAAD;MAAWE;IAAX,IAAyBN,UAAU,CAACC,SAAD,EAAYC,QAAZ,CAAzC;IACA,IAAI5gC,KAAJ,EAAWD,MAAX;IACA9L,GAAG,CAACooB,IAAJ,GAAWslB,SAAS,CAACpf,MAArB;;IACA,IAAIj7B,EAAE,CAACgY,YAAH,EAAJ,EAAuB;MACrBU,KAAK,GAAG1Y,EAAE,CAACqd,QAAX;MACA5E,MAAM,GAAGzY,EAAE,CAACu6C,QAAH,CAAY3gB,WAAZ,EAAyB0f,QAAzB,EAAmCE,QAAnC,EAA6CE,UAA7C,IAA2D,EAApE;IACD,CAHD,MAGO;MACLjhC,MAAM,GAAGzY,EAAE,CAACsd,SAAZ;MACA5E,KAAK,GAAG1Y,EAAE,CAACw6C,QAAH,CAAY5gB,WAAZ,EAAyB0f,QAAzB,EAAmCE,QAAnC,EAA6CE,UAA7C,IAA2D,EAAnE;IACD;;IACD15C,EAAE,CAAC0Y,KAAH,GAAW9Y,IAAI,CAACC,GAAL,CAAS6Y,KAAT,EAAgB7R,OAAO,CAACwW,QAAR,IAAoBrd,EAAE,CAACqd,QAAvC,CAAX;IACArd,EAAE,CAACyY,MAAH,GAAY7Y,IAAI,CAACC,GAAL,CAAS4Y,MAAT,EAAiB5R,OAAO,CAACyW,SAAR,IAAqBtd,EAAE,CAACsd,SAAzC,CAAZ;EACD;;EACDi9B,QAAQ,CAAC3gB,WAAD,EAAc0f,QAAd,EAAwBE,QAAxB,EAAkCE,UAAlC,EAA8C;IACpD,MAAM15C,EAAE,GAAG,IAAX;IACA,MAAM;MAAC2M,GAAD;MAAM0Q,QAAN;MAAgBxW,OAAO,EAAE;QAAC2J,MAAM,EAAE;UAAC0Z;QAAD;MAAT;IAAzB,IAAgDlqB,EAAtD;IACA,MAAMy6C,QAAQ,GAAGz6C,EAAE,CAAC85C,cAAH,GAAoB,EAArC;IACA,MAAMK,UAAU,GAAGn6C,EAAE,CAACm6C,UAAH,GAAgB,CAAC,CAAD,CAAnC;IACA,MAAMllB,UAAU,GAAGykB,UAAU,GAAGxvB,OAAhC;IACA,IAAIwwB,WAAW,GAAG9gB,WAAlB;IACAjtB,GAAG,CAACywB,SAAJ,GAAgB,MAAhB;IACAzwB,GAAG,CAAC4wB,YAAJ,GAAmB,QAAnB;IACA,IAAIod,GAAG,GAAG,CAAC,CAAX;IACA,IAAIvyC,GAAG,GAAG,CAAC6sB,UAAX;IACAj1B,EAAE,CAACi6C,WAAH,CAAex6C,OAAf,CAAuB,CAACigB,UAAD,EAAatsB,CAAb,KAAmB;MACxC,MAAMwnD,SAAS,GAAGpB,QAAQ,GAAIF,QAAQ,GAAG,CAAvB,GAA4B3sC,GAAG,CAACkuC,WAAJ,CAAgBn7B,UAAU,CAACR,IAA3B,EAAiCxG,KAA/E;;MACA,IAAItlB,CAAC,KAAK,CAAN,IAAW+mD,UAAU,CAACA,UAAU,CAAC15C,MAAX,GAAoB,CAArB,CAAV,GAAoCm6C,SAApC,GAAgD,IAAI1wB,OAApD,GAA8D7M,QAA7E,EAAuF;QACrFq9B,WAAW,IAAIzlB,UAAf;QACAklB,UAAU,CAACA,UAAU,CAAC15C,MAAX,IAAqBrN,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAjC,CAAD,CAAV,GAAkD,CAAlD;QACAgV,GAAG,IAAI6sB,UAAP;QACA0lB,GAAG;MACJ;;MACDF,QAAQ,CAACrnD,CAAD,CAAR,GAAc;QAACmV,IAAI,EAAE,CAAP;QAAUH,GAAV;QAAeuyC,GAAf;QAAoBjiC,KAAK,EAAEkiC,SAA3B;QAAsCniC,MAAM,EAAEihC;MAA9C,CAAd;MACAS,UAAU,CAACA,UAAU,CAAC15C,MAAX,GAAoB,CAArB,CAAV,IAAqCm6C,SAAS,GAAG1wB,OAAjD;IACD,CAVD;IAWA,OAAOwwB,WAAP;EACD;;EACDF,QAAQ,CAAC5gB,WAAD,EAAc0f,QAAd,EAAwBE,QAAxB,EAAkCE,UAAlC,EAA8C;IACpD,MAAM15C,EAAE,GAAG,IAAX;IACA,MAAM;MAAC2M,GAAD;MAAM2Q,SAAN;MAAiBzW,OAAO,EAAE;QAAC2J,MAAM,EAAE;UAAC0Z;QAAD;MAAT;IAA1B,IAAiDlqB,EAAvD;IACA,MAAMy6C,QAAQ,GAAGz6C,EAAE,CAAC85C,cAAH,GAAoB,EAArC;IACA,MAAMI,WAAW,GAAGl6C,EAAE,CAACk6C,WAAH,GAAiB,EAArC;IACA,MAAMY,WAAW,GAAGx9B,SAAS,GAAGsc,WAAhC;IACA,IAAImhB,UAAU,GAAG7wB,OAAjB;IACA,IAAI8wB,eAAe,GAAG,CAAtB;IACA,IAAIC,gBAAgB,GAAG,CAAvB;IACA,IAAI1yC,IAAI,GAAG,CAAX;IACA,IAAIH,GAAG,GAAG,CAAV;IACA,IAAI8yC,GAAG,GAAG,CAAV;IACAl7C,EAAE,CAACi6C,WAAH,CAAex6C,OAAf,CAAuB,CAACigB,UAAD,EAAatsB,CAAb,KAAmB;MACxC,MAAMwnD,SAAS,GAAGpB,QAAQ,GAAIF,QAAQ,GAAG,CAAvB,GAA4B3sC,GAAG,CAACkuC,WAAJ,CAAgBn7B,UAAU,CAACR,IAA3B,EAAiCxG,KAA/E;;MACA,IAAItlB,CAAC,GAAG,CAAJ,IAAS6nD,gBAAgB,GAAG3B,QAAnB,GAA8B,IAAIpvB,OAAlC,GAA4C4wB,WAAzD,EAAsE;QACpEC,UAAU,IAAIC,eAAe,GAAG9wB,OAAhC;QACAgwB,WAAW,CAACz4C,IAAZ,CAAiB;UAACiX,KAAK,EAAEsiC,eAAR;UAAyBviC,MAAM,EAAEwiC;QAAjC,CAAjB;QACA1yC,IAAI,IAAIyyC,eAAe,GAAG9wB,OAA1B;QACAgxB,GAAG;QACH9yC,GAAG,GAAG,CAAN;QACA4yC,eAAe,GAAGC,gBAAgB,GAAG,CAArC;MACD;;MACDD,eAAe,GAAGp7C,IAAI,CAACmC,GAAL,CAASi5C,eAAT,EAA0BJ,SAA1B,CAAlB;MACAK,gBAAgB,IAAI3B,QAAQ,GAAGpvB,OAA/B;MACAuwB,QAAQ,CAACrnD,CAAD,CAAR,GAAc;QAACmV,IAAD;QAAOH,GAAP;QAAY8yC,GAAZ;QAAiBxiC,KAAK,EAAEkiC,SAAxB;QAAmCniC,MAAM,EAAEihC;MAA3C,CAAd;MACAtxC,GAAG,IAAIsxC,UAAU,GAAGxvB,OAApB;IACD,CAdD;IAeA6wB,UAAU,IAAIC,eAAd;IACAd,WAAW,CAACz4C,IAAZ,CAAiB;MAACiX,KAAK,EAAEsiC,eAAR;MAAyBviC,MAAM,EAAEwiC;IAAjC,CAAjB;IACA,OAAOF,UAAP;EACD;;EACDI,cAAc,GAAG;IACf,MAAMn7C,EAAE,GAAG,IAAX;;IACA,IAAI,CAACA,EAAE,CAAC6G,OAAH,CAAW4b,OAAhB,EAAyB;MACvB;IACD;;IACD,MAAMmX,WAAW,GAAG55B,EAAE,CAACs6C,mBAAH,EAApB;;IACA,MAAM;MAACR,cAAc,EAAEW,QAAjB;MAA2B5zC,OAAO,EAAE;QAACkrB,KAAD;QAAQvhB,MAAM,EAAE;UAAC0Z;QAAD;MAAhB;IAApC,IAAkElqB,EAAxE;;IACA,IAAI,KAAKgY,YAAL,EAAJ,EAAyB;MACvB,IAAI2iC,GAAG,GAAG,CAAV;;MACA,IAAIpyC,IAAI,GAAGtP,cAAc,CAAC84B,KAAD,EAAQ/xB,EAAE,CAACuI,IAAH,GAAU2hB,OAAlB,EAA2BlqB,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAACm6C,UAAH,CAAcQ,GAAd,CAAtC,CAAzB;;MACA,KAAK,MAAMS,MAAX,IAAqBX,QAArB,EAA+B;QAC7B,IAAIE,GAAG,KAAKS,MAAM,CAACT,GAAnB,EAAwB;UACtBA,GAAG,GAAGS,MAAM,CAACT,GAAb;UACApyC,IAAI,GAAGtP,cAAc,CAAC84B,KAAD,EAAQ/xB,EAAE,CAACuI,IAAH,GAAU2hB,OAAlB,EAA2BlqB,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAACm6C,UAAH,CAAcQ,GAAd,CAAtC,CAArB;QACD;;QACDS,MAAM,CAAChzC,GAAP,IAAcpI,EAAE,CAACoI,GAAH,GAASwxB,WAAT,GAAuB1P,OAArC;QACAkxB,MAAM,CAAC7yC,IAAP,GAAcA,IAAd;QACAA,IAAI,IAAI6yC,MAAM,CAAC1iC,KAAP,GAAewR,OAAvB;MACD;IACF,CAZD,MAYO;MACL,IAAIgxB,GAAG,GAAG,CAAV;;MACA,IAAI9yC,GAAG,GAAGnP,cAAc,CAAC84B,KAAD,EAAQ/xB,EAAE,CAACoI,GAAH,GAASwxB,WAAT,GAAuB1P,OAA/B,EAAwClqB,EAAE,CAACsI,MAAH,GAAYtI,EAAE,CAACk6C,WAAH,CAAegB,GAAf,EAAoBziC,MAAxE,CAAxB;;MACA,KAAK,MAAM2iC,MAAX,IAAqBX,QAArB,EAA+B;QAC7B,IAAIW,MAAM,CAACF,GAAP,KAAeA,GAAnB,EAAwB;UACtBA,GAAG,GAAGE,MAAM,CAACF,GAAb;UACA9yC,GAAG,GAAGnP,cAAc,CAAC84B,KAAD,EAAQ/xB,EAAE,CAACoI,GAAH,GAASwxB,WAAT,GAAuB1P,OAA/B,EAAwClqB,EAAE,CAACsI,MAAH,GAAYtI,EAAE,CAACk6C,WAAH,CAAegB,GAAf,EAAoBziC,MAAxE,CAApB;QACD;;QACD2iC,MAAM,CAAChzC,GAAP,GAAaA,GAAb;QACAgzC,MAAM,CAAC7yC,IAAP,IAAevI,EAAE,CAACuI,IAAH,GAAU2hB,OAAzB;QACA9hB,GAAG,IAAIgzC,MAAM,CAAC3iC,MAAP,GAAgByR,OAAvB;MACD;IACF;EACF;;EACDlS,YAAY,GAAG;IACb,OAAO,KAAKnR,OAAL,CAAaqe,QAAb,KAA0B,KAA1B,IAAmC,KAAKre,OAAL,CAAaqe,QAAb,KAA0B,QAApE;EACD;;EACDxkB,IAAI,GAAG;IACL,MAAMV,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAAC6G,OAAH,CAAW4b,OAAf,EAAwB;MACtB,MAAM9V,GAAG,GAAG3M,EAAE,CAAC2M,GAAf;MACAhY,QAAQ,CAACgY,GAAD,EAAM3M,EAAN,CAAR;;MACAA,EAAE,CAACq7C,KAAH;;MACAxmD,UAAU,CAAC8X,GAAD,CAAV;IACD;EACF;;EACD0uC,KAAK,GAAG;IACN,MAAMr7C,EAAE,GAAG,IAAX;IACA,MAAM;MAAC6G,OAAO,EAAEiB,IAAV;MAAgBoyC,WAAhB;MAA6BC,UAA7B;MAAyCxtC;IAAzC,IAAgD3M,EAAtD;IACA,MAAM;MAAC+xB,KAAD;MAAQvhB,MAAM,EAAE6oC;IAAhB,IAA6BvxC,IAAnC;IACA,MAAMwzC,YAAY,GAAG7nD,QAAQ,CAACN,KAA9B;IACA,MAAMooD,SAAS,GAAG5+C,aAAa,CAACmL,IAAI,CAAC0zC,GAAN,EAAWx7C,EAAE,CAACuI,IAAd,EAAoBvI,EAAE,CAAC0Y,KAAvB,CAA/B;IACA,MAAM2hC,SAAS,GAAGxhD,MAAM,CAACwgD,SAAS,CAACtkB,IAAX,CAAxB;IACA,MAAM;MAAC5hC,KAAK,EAAEsoD,SAAR;MAAmBvxB;IAAnB,IAA8BmvB,SAApC;IACA,MAAMC,QAAQ,GAAGe,SAAS,CAAC9yC,IAA3B;IACA,MAAMm0C,YAAY,GAAGpC,QAAQ,GAAG,CAAhC;IACA,IAAIqC,MAAJ;IACA37C,EAAE,CAACi/B,SAAH;IACAtyB,GAAG,CAACywB,SAAJ,GAAgBme,SAAS,CAACne,SAAV,CAAoB,MAApB,CAAhB;IACAzwB,GAAG,CAAC4wB,YAAJ,GAAmB,QAAnB;IACA5wB,GAAG,CAAC4S,SAAJ,GAAgB,GAAhB;IACA5S,GAAG,CAAC0S,WAAJ,GAAkBo8B,SAAlB;IACA9uC,GAAG,CAACwS,SAAJ,GAAgBs8B,SAAhB;IACA9uC,GAAG,CAACooB,IAAJ,GAAWslB,SAAS,CAACpf,MAArB;IACA,MAAM;MAACue,QAAD;MAAWD,SAAX;MAAsBG;IAAtB,IAAoCN,UAAU,CAACC,SAAD,EAAYC,QAAZ,CAApD;;IACA,MAAMsC,aAAa,GAAG,UAAS1lD,CAAT,EAAYE,CAAZ,EAAespB,UAAf,EAA2B;MAC/C,IAAI5G,KAAK,CAAC0gC,QAAD,CAAL,IAAmBA,QAAQ,IAAI,CAA/B,IAAoC1gC,KAAK,CAACygC,SAAD,CAAzC,IAAwDA,SAAS,GAAG,CAAxE,EAA2E;QACzE;MACD;;MACD5sC,GAAG,CAACqxB,IAAJ;MACA,MAAMze,SAAS,GAAG5rB,cAAc,CAAC+rB,UAAU,CAACH,SAAZ,EAAuB,CAAvB,CAAhC;MACA5S,GAAG,CAACwS,SAAJ,GAAgBxrB,cAAc,CAAC+rB,UAAU,CAACP,SAAZ,EAAuBm8B,YAAvB,CAA9B;MACA3uC,GAAG,CAAC8hC,OAAJ,GAAc96C,cAAc,CAAC+rB,UAAU,CAAC+uB,OAAZ,EAAqB,MAArB,CAA5B;MACA9hC,GAAG,CAAC8xB,cAAJ,GAAqB9qC,cAAc,CAAC+rB,UAAU,CAAC+e,cAAZ,EAA4B,CAA5B,CAAnC;MACA9xB,GAAG,CAACmhC,QAAJ,GAAen6C,cAAc,CAAC+rB,UAAU,CAACouB,QAAZ,EAAsB,OAAtB,CAA7B;MACAnhC,GAAG,CAAC4S,SAAJ,GAAgBA,SAAhB;MACA5S,GAAG,CAAC0S,WAAJ,GAAkB1rB,cAAc,CAAC+rB,UAAU,CAACL,WAAZ,EAAyBi8B,YAAzB,CAAhC;MACA3uC,GAAG,CAAC6xB,WAAJ,CAAgB7qC,cAAc,CAAC+rB,UAAU,CAACm8B,QAAZ,EAAsB,EAAtB,CAA9B;;MACA,IAAIxC,SAAS,CAACI,aAAd,EAA6B;QAC3B,MAAMqC,WAAW,GAAG;UAClBlhC,MAAM,EAAE4+B,QAAQ,GAAG55C,IAAI,CAACm8C,KAAhB,GAAwB,CADd;UAElBtK,UAAU,EAAE/xB,UAAU,CAAC+xB,UAFL;UAGlBx2B,QAAQ,EAAEyE,UAAU,CAACzE,QAHH;UAIlBuD,WAAW,EAAEe;QAJK,CAApB;QAMA,MAAMtB,OAAO,GAAGs9B,SAAS,CAACS,KAAV,CAAgB9lD,CAAhB,EAAmBsjD,QAAQ,GAAG,CAA9B,CAAhB;QACA,MAAMt7B,OAAO,GAAG9nB,CAAC,GAAGslD,YAApB;QACAz/C,SAAS,CAAC0Q,GAAD,EAAMmvC,WAAN,EAAmB79B,OAAnB,EAA4BC,OAA5B,CAAT;MACD,CAVD,MAUO;QACL,MAAM+9B,OAAO,GAAG7lD,CAAC,GAAGwJ,IAAI,CAACmC,GAAL,CAAS,CAACu3C,QAAQ,GAAGC,SAAZ,IAAyB,CAAlC,EAAqC,CAArC,CAApB;QACA5sC,GAAG,CAACsxB,QAAJ,CAAasd,SAAS,CAACW,UAAV,CAAqBhmD,CAArB,EAAwBsjD,QAAxB,CAAb,EAAgDyC,OAAhD,EAAyDzC,QAAzD,EAAmED,SAAnE;;QACA,IAAIh6B,SAAS,KAAK,CAAlB,EAAqB;UACnB5S,GAAG,CAACwvC,UAAJ,CAAeZ,SAAS,CAACW,UAAV,CAAqBhmD,CAArB,EAAwBsjD,QAAxB,CAAf,EAAkDyC,OAAlD,EAA2DzC,QAA3D,EAAqED,SAArE;QACD;MACF;;MACD5sC,GAAG,CAACuxB,OAAJ;IACD,CA/BD;;IAgCA,MAAMke,QAAQ,GAAG,UAASlmD,CAAT,EAAYE,CAAZ,EAAespB,UAAf,EAA2B;MAC1C/mB,UAAU,CAACgU,GAAD,EAAM+S,UAAU,CAACR,IAAjB,EAAuBhpB,CAAvB,EAA0BE,CAAC,GAAIsjD,UAAU,GAAG,CAA5C,EAAgDW,SAAhD,EAA2D;QACnEgC,aAAa,EAAE38B,UAAU,CAACF,MADyC;QAEnE4d,SAAS,EAAE1d,UAAU,CAAC0d;MAF6C,CAA3D,CAAV;IAID,CALD;;IAMA,MAAMplB,YAAY,GAAGhY,EAAE,CAACgY,YAAH,EAArB;;IACA,MAAM4hB,WAAW,GAAG,KAAK0gB,mBAAL,EAApB;;IACA,IAAItiC,YAAJ,EAAkB;MAChB2jC,MAAM,GAAG;QACPzlD,CAAC,EAAE+C,cAAc,CAAC84B,KAAD,EAAQ/xB,EAAE,CAACuI,IAAH,GAAU2hB,OAAlB,EAA2BlqB,EAAE,CAACqI,KAAH,GAAW8xC,UAAU,CAAC,CAAD,CAAhD,CADV;QAEP/jD,CAAC,EAAE4J,EAAE,CAACoI,GAAH,GAAS8hB,OAAT,GAAmB0P,WAFf;QAGP3Z,IAAI,EAAE;MAHC,CAAT;IAKD,CAND,MAMO;MACL07B,MAAM,GAAG;QACPzlD,CAAC,EAAE8J,EAAE,CAACuI,IAAH,GAAU2hB,OADN;QAEP9zB,CAAC,EAAE6C,cAAc,CAAC84B,KAAD,EAAQ/xB,EAAE,CAACoI,GAAH,GAASwxB,WAAT,GAAuB1P,OAA/B,EAAwClqB,EAAE,CAACsI,MAAH,GAAY4xC,WAAW,CAAC,CAAD,CAAX,CAAezhC,MAAnE,CAFV;QAGPwH,IAAI,EAAE;MAHC,CAAT;IAKD;;IACDpjB,qBAAqB,CAACmD,EAAE,CAAC2M,GAAJ,EAAS7E,IAAI,CAACw0C,aAAd,CAArB;IACA,MAAMrnB,UAAU,GAAGykB,UAAU,GAAGxvB,OAAhC;IACAlqB,EAAE,CAACi6C,WAAH,CAAex6C,OAAf,CAAuB,CAACigB,UAAD,EAAatsB,CAAb,KAAmB;MACxC,MAAMmpD,SAAS,GAAG5vC,GAAG,CAACkuC,WAAJ,CAAgBn7B,UAAU,CAACR,IAA3B,EAAiCxG,KAAnD;MACA,MAAM0kB,SAAS,GAAGme,SAAS,CAACne,SAAV,CAAoB1d,UAAU,CAAC0d,SAAX,KAAyB1d,UAAU,CAAC0d,SAAX,GAAuBic,SAAS,CAACjc,SAA1D,CAApB,CAAlB;MACA,MAAM1kB,KAAK,GAAG8gC,QAAQ,GAAIF,QAAQ,GAAG,CAAvB,GAA4BiD,SAA1C;MACA,IAAIrmD,CAAC,GAAGylD,MAAM,CAACzlD,CAAf;MACA,IAAIE,CAAC,GAAGulD,MAAM,CAACvlD,CAAf;MACAmlD,SAAS,CAACiB,QAAV,CAAmBx8C,EAAE,CAAC0Y,KAAtB;;MACA,IAAIV,YAAJ,EAAkB;QAChB,IAAI5kB,CAAC,GAAG,CAAJ,IAAS8C,CAAC,GAAGwiB,KAAJ,GAAYwR,OAAZ,GAAsBlqB,EAAE,CAACqI,KAAtC,EAA6C;UAC3CjS,CAAC,GAAGulD,MAAM,CAACvlD,CAAP,IAAY6+B,UAAhB;UACA0mB,MAAM,CAAC17B,IAAP;UACA/pB,CAAC,GAAGylD,MAAM,CAACzlD,CAAP,GAAW+C,cAAc,CAAC84B,KAAD,EAAQ/xB,EAAE,CAACuI,IAAH,GAAU2hB,OAAlB,EAA2BlqB,EAAE,CAACqI,KAAH,GAAW8xC,UAAU,CAACwB,MAAM,CAAC17B,IAAR,CAAhD,CAA7B;QACD;MACF,CAND,MAMO,IAAI7sB,CAAC,GAAG,CAAJ,IAASgD,CAAC,GAAG6+B,UAAJ,GAAiBj1B,EAAE,CAACsI,MAAjC,EAAyC;QAC9CpS,CAAC,GAAGylD,MAAM,CAACzlD,CAAP,GAAWA,CAAC,GAAGgkD,WAAW,CAACyB,MAAM,CAAC17B,IAAR,CAAX,CAAyBvH,KAA7B,GAAqCwR,OAApD;QACAyxB,MAAM,CAAC17B,IAAP;QACA7pB,CAAC,GAAGulD,MAAM,CAACvlD,CAAP,GAAW6C,cAAc,CAAC84B,KAAD,EAAQ/xB,EAAE,CAACoI,GAAH,GAASwxB,WAAT,GAAuB1P,OAA/B,EAAwClqB,EAAE,CAACsI,MAAH,GAAY4xC,WAAW,CAACyB,MAAM,CAAC17B,IAAR,CAAX,CAAyBxH,MAA7E,CAA7B;MACD;;MACD,MAAMgkC,KAAK,GAAGlB,SAAS,CAACrlD,CAAV,CAAYA,CAAZ,CAAd;MACA0lD,aAAa,CAACa,KAAD,EAAQrmD,CAAR,EAAWspB,UAAX,CAAb;MACAxpB,CAAC,GAAG6G,MAAM,CAACqgC,SAAD,EAAYlnC,CAAC,GAAGsjD,QAAJ,GAAekC,YAA3B,EAAyC17C,EAAE,CAACqI,KAA5C,CAAV;MACA+zC,QAAQ,CAACb,SAAS,CAACrlD,CAAV,CAAYA,CAAZ,CAAD,EAAiBE,CAAjB,EAAoBspB,UAApB,CAAR;;MACA,IAAI1H,YAAJ,EAAkB;QAChB2jC,MAAM,CAACzlD,CAAP,IAAYwiB,KAAK,GAAGwR,OAApB;MACD,CAFD,MAEO;QACLyxB,MAAM,CAACvlD,CAAP,IAAY6+B,UAAZ;MACD;IACF,CA3BD;IA4BAh4B,oBAAoB,CAAC+C,EAAE,CAAC2M,GAAJ,EAAS7E,IAAI,CAACw0C,aAAd,CAApB;EACD;;EACDrd,SAAS,GAAG;IACV,MAAMj/B,EAAE,GAAG,IAAX;IACA,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;IACA,MAAM6yB,SAAS,GAAG5xB,IAAI,CAACiT,KAAvB;IACA,MAAM2hC,SAAS,GAAG7jD,MAAM,CAAC6gC,SAAS,CAAC3E,IAAX,CAAxB;IACA,MAAM4nB,YAAY,GAAG9lD,SAAS,CAAC6iC,SAAS,CAACxP,OAAX,CAA9B;;IACA,IAAI,CAACwP,SAAS,CAACjX,OAAf,EAAwB;MACtB;IACD;;IACD,MAAM84B,SAAS,GAAG5+C,aAAa,CAACmL,IAAI,CAAC0zC,GAAN,EAAWx7C,EAAE,CAACuI,IAAd,EAAoBvI,EAAE,CAAC0Y,KAAvB,CAA/B;IACA,MAAM/L,GAAG,GAAG3M,EAAE,CAAC2M,GAAf;IACA,MAAMuY,QAAQ,GAAGwU,SAAS,CAACxU,QAA3B;IACA,MAAMw2B,YAAY,GAAGgB,SAAS,CAACn1C,IAAV,GAAiB,CAAtC;IACA,MAAMq1C,0BAA0B,GAAGD,YAAY,CAACv0C,GAAb,GAAmBszC,YAAtD;IACA,IAAItlD,CAAJ;IACA,IAAImS,IAAI,GAAGvI,EAAE,CAACuI,IAAd;IACA,IAAI8U,QAAQ,GAAGrd,EAAE,CAAC0Y,KAAlB;;IACA,IAAI,KAAKV,YAAL,EAAJ,EAAyB;MACvBqF,QAAQ,GAAGzd,IAAI,CAACmC,GAAL,CAAS,GAAG/B,EAAE,CAACm6C,UAAf,CAAX;MACA/jD,CAAC,GAAG4J,EAAE,CAACoI,GAAH,GAASw0C,0BAAb;MACAr0C,IAAI,GAAGtP,cAAc,CAAC6O,IAAI,CAACiqB,KAAN,EAAaxpB,IAAb,EAAmBvI,EAAE,CAACqI,KAAH,GAAWgV,QAA9B,CAArB;IACD,CAJD,MAIO;MACL,MAAMC,SAAS,GAAGtd,EAAE,CAACk6C,WAAH,CAAet4C,MAAf,CAAsB,CAACC,GAAD,EAAM0F,IAAN,KAAe3H,IAAI,CAACmC,GAAL,CAASF,GAAT,EAAc0F,IAAI,CAACkR,MAAnB,CAArC,EAAiE,CAAjE,CAAlB;MACAriB,CAAC,GAAGwmD,0BAA0B,GAAG3jD,cAAc,CAAC6O,IAAI,CAACiqB,KAAN,EAAa/xB,EAAE,CAACoI,GAAhB,EAAqBpI,EAAE,CAACsI,MAAH,GAAYgV,SAAZ,GAAwBxV,IAAI,CAAC0I,MAAL,CAAY0Z,OAApC,GAA8ClqB,EAAE,CAACs6C,mBAAH,EAAnE,CAA/C;IACD;;IACD,MAAMpkD,CAAC,GAAG+C,cAAc,CAACisB,QAAD,EAAW3c,IAAX,EAAiBA,IAAI,GAAG8U,QAAxB,CAAxB;;IACA1Q,GAAG,CAACywB,SAAJ,GAAgBme,SAAS,CAACne,SAAV,CAAoBrkC,kBAAkB,CAACmsB,QAAD,CAAtC,CAAhB;IACAvY,GAAG,CAAC4wB,YAAJ,GAAmB,QAAnB;IACA5wB,GAAG,CAAC0S,WAAJ,GAAkBqa,SAAS,CAACvmC,KAA5B;IACAwZ,GAAG,CAACwS,SAAJ,GAAgBua,SAAS,CAACvmC,KAA1B;IACAwZ,GAAG,CAACooB,IAAJ,GAAW2nB,SAAS,CAACzhB,MAArB;IACAtiC,UAAU,CAACgU,GAAD,EAAM+sB,SAAS,CAACxa,IAAhB,EAAsBhpB,CAAtB,EAAyBE,CAAzB,EAA4BsmD,SAA5B,CAAV;EACD;;EACDpC,mBAAmB,GAAG;IACpB,MAAM5gB,SAAS,GAAG,KAAK7yB,OAAL,CAAakU,KAA/B;IACA,MAAM2hC,SAAS,GAAG7jD,MAAM,CAAC6gC,SAAS,CAAC3E,IAAX,CAAxB;IACA,MAAM4nB,YAAY,GAAG9lD,SAAS,CAAC6iC,SAAS,CAACxP,OAAX,CAA9B;IACA,OAAOwP,SAAS,CAACjX,OAAV,GAAoBi6B,SAAS,CAACznB,UAAV,GAAuB0nB,YAAY,CAAClkC,MAAxD,GAAiE,CAAxE;EACD;;EACDokC,gBAAgB,CAAC3mD,CAAD,EAAIE,CAAJ,EAAO;IACrB,MAAM4J,EAAE,GAAG,IAAX;IACA,IAAI5M,CAAJ,EAAO0pD,MAAP,EAAeC,EAAf;;IACA,IAAI7mD,CAAC,IAAI8J,EAAE,CAACuI,IAAR,IAAgBrS,CAAC,IAAI8J,EAAE,CAACqI,KAAxB,IAAiCjS,CAAC,IAAI4J,EAAE,CAACoI,GAAzC,IAAgDhS,CAAC,IAAI4J,EAAE,CAACsI,MAA5D,EAAoE;MAClEy0C,EAAE,GAAG/8C,EAAE,CAAC85C,cAAR;;MACA,KAAK1mD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2pD,EAAE,CAACt8C,MAAnB,EAA2B,EAAErN,CAA7B,EAAgC;QAC9B0pD,MAAM,GAAGC,EAAE,CAAC3pD,CAAD,CAAX;;QACA,IAAI8C,CAAC,IAAI4mD,MAAM,CAACv0C,IAAZ,IAAoBrS,CAAC,IAAI4mD,MAAM,CAACv0C,IAAP,GAAcu0C,MAAM,CAACpkC,KAA9C,IAAuDtiB,CAAC,IAAI0mD,MAAM,CAAC10C,GAAnE,IAA0EhS,CAAC,IAAI0mD,MAAM,CAAC10C,GAAP,GAAa00C,MAAM,CAACrkC,MAAvG,EAA+G;UAC7G,OAAOzY,EAAE,CAACi6C,WAAH,CAAe7mD,CAAf,CAAP;QACD;MACF;IACF;;IACD,OAAO,IAAP;EACD;;EACD4pD,WAAW,CAAChqD,CAAD,EAAI;IACb,MAAMgN,EAAE,GAAG,IAAX;IACA,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;;IACA,IAAI,CAACo2C,UAAU,CAACjqD,CAAC,CAACoM,IAAH,EAAS0I,IAAT,CAAf,EAA+B;MAC7B;IACD;;IACD,MAAMo1C,WAAW,GAAGl9C,EAAE,CAAC68C,gBAAH,CAAoB7pD,CAAC,CAACkD,CAAtB,EAAyBlD,CAAC,CAACoD,CAA3B,CAApB;;IACA,IAAIpD,CAAC,CAACoM,IAAF,KAAW,WAAf,EAA4B;MAC1B,MAAMwvC,QAAQ,GAAG5uC,EAAE,CAAC+5C,YAApB;MACA,MAAMoD,QAAQ,GAAGxD,UAAU,CAAC/K,QAAD,EAAWsO,WAAX,CAA3B;;MACA,IAAItO,QAAQ,IAAI,CAACuO,QAAjB,EAA2B;QACzBllD,QAAQ,CAAC6P,IAAI,CAACs1C,OAAN,EAAe,CAACpqD,CAAD,EAAI47C,QAAJ,EAAc5uC,EAAd,CAAf,EAAkCA,EAAlC,CAAR;MACD;;MACDA,EAAE,CAAC+5C,YAAH,GAAkBmD,WAAlB;;MACA,IAAIA,WAAW,IAAI,CAACC,QAApB,EAA8B;QAC5BllD,QAAQ,CAAC6P,IAAI,CAACmlC,OAAN,EAAe,CAACj6C,CAAD,EAAIkqD,WAAJ,EAAiBl9C,EAAjB,CAAf,EAAqCA,EAArC,CAAR;MACD;IACF,CAVD,MAUO,IAAIk9C,WAAJ,EAAiB;MACtBjlD,QAAQ,CAAC6P,IAAI,CAAC2X,OAAN,EAAe,CAACzsB,CAAD,EAAIkqD,WAAJ,EAAiBl9C,EAAjB,CAAf,EAAqCA,EAArC,CAAR;IACD;EACF;;AA3W0B;;AA6W7B,SAASi9C,UAAT,CAAoB79C,IAApB,EAA0B0I,IAA1B,EAAgC;EAC9B,IAAI1I,IAAI,KAAK,WAAT,KAAyB0I,IAAI,CAACmlC,OAAL,IAAgBnlC,IAAI,CAACs1C,OAA9C,CAAJ,EAA4D;IAC1D,OAAO,IAAP;EACD;;EACD,IAAIt1C,IAAI,CAAC2X,OAAL,KAAiBrgB,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,SAA9C,CAAJ,EAA8D;IAC5D,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACD;;AACD,IAAIi+C,aAAa,GAAG;EAClBrzC,EAAE,EAAE,QADc;EAElBszC,QAAQ,EAAE1D,MAFQ;;EAGlB95C,KAAK,CAACb,KAAD,EAAQ85C,KAAR,EAAelyC,OAAf,EAAwB;IAC3B,MAAMiY,MAAM,GAAG7f,KAAK,CAAC6f,MAAN,GAAe,IAAI86B,MAAJ,CAAW;MAACjtC,GAAG,EAAE1N,KAAK,CAAC0N,GAAZ;MAAiB9F,OAAjB;MAA0B5H;IAA1B,CAAX,CAA9B;IACAwoB,OAAO,CAACphB,SAAR,CAAkBpH,KAAlB,EAAyB6f,MAAzB,EAAiCjY,OAAjC;IACA4gB,OAAO,CAAC0C,MAAR,CAAelrB,KAAf,EAAsB6f,MAAtB;EACD,CAPiB;;EAQlB7c,IAAI,CAAChD,KAAD,EAAQ;IACVwoB,OAAO,CAAC4C,SAAR,CAAkBprB,KAAlB,EAAyBA,KAAK,CAAC6f,MAA/B;IACA,OAAO7f,KAAK,CAAC6f,MAAb;EACD,CAXiB;;EAYlBkY,YAAY,CAAC/3B,KAAD,EAAQ85C,KAAR,EAAelyC,OAAf,EAAwB;IAClC,MAAMiY,MAAM,GAAG7f,KAAK,CAAC6f,MAArB;IACA2I,OAAO,CAACphB,SAAR,CAAkBpH,KAAlB,EAAyB6f,MAAzB,EAAiCjY,OAAjC;IACAiY,MAAM,CAACjY,OAAP,GAAiBA,OAAjB;EACD,CAhBiB;;EAiBlBwxB,WAAW,CAACp5B,KAAD,EAAQ;IACjB,MAAM6f,MAAM,GAAG7f,KAAK,CAAC6f,MAArB;IACAA,MAAM,CAACs7B,WAAP;IACAt7B,MAAM,CAACq8B,cAAP;EACD,CArBiB;;EAsBlBoC,UAAU,CAACt+C,KAAD,EAAQ6vB,IAAR,EAAc;IACtB,IAAI,CAACA,IAAI,CAAC4d,MAAV,EAAkB;MAChBztC,KAAK,CAAC6f,MAAN,CAAak+B,WAAb,CAAyBluB,IAAI,CAACvtB,KAA9B;IACD;EACF,CA1BiB;;EA2BlB9N,QAAQ,EAAE;IACRgvB,OAAO,EAAE,IADD;IAERyC,QAAQ,EAAE,KAFF;IAGR6M,KAAK,EAAE,QAHC;IAIRnK,QAAQ,EAAE,IAJF;IAKR7f,OAAO,EAAE,KALD;IAMR6W,MAAM,EAAE,IANA;;IAORa,OAAO,CAACzsB,CAAD,EAAI0sB,UAAJ,EAAgBZ,MAAhB,EAAwB;MAC7B,MAAMhW,KAAK,GAAG4W,UAAU,CAACtW,YAAzB;MACA,MAAMo0C,EAAE,GAAG1+B,MAAM,CAAC7f,KAAlB;;MACA,IAAIu+C,EAAE,CAAC3gC,gBAAH,CAAoB/T,KAApB,CAAJ,EAAgC;QAC9B00C,EAAE,CAACx3C,IAAH,CAAQ8C,KAAR;QACA4W,UAAU,CAACF,MAAX,GAAoB,IAApB;MACD,CAHD,MAGO;QACLg+B,EAAE,CAAC33C,IAAH,CAAQiD,KAAR;QACA4W,UAAU,CAACF,MAAX,GAAoB,KAApB;MACD;IACF,CAjBO;;IAkBRytB,OAAO,EAAE,IAlBD;IAmBRmQ,OAAO,EAAE,IAnBD;IAoBR5sC,MAAM,EAAE;MACNrd,KAAK,EAAGwZ,GAAD,IAASA,GAAG,CAAC1N,KAAJ,CAAU4H,OAAV,CAAkB1T,KAD5B;MAENqmD,QAAQ,EAAE,EAFJ;MAGNtvB,OAAO,EAAE,EAHH;;MAINnL,cAAc,CAAC9f,KAAD,EAAQ;QACpB,MAAM0P,QAAQ,GAAG1P,KAAK,CAACsK,IAAN,CAAWoF,QAA5B;QACA,MAAM;UAAC6B,MAAM,EAAE;YAACipC,aAAD;YAAgBhI,UAAhB;YAA4BrU;UAA5B;QAAT,IAAmDn+B,KAAK,CAAC6f,MAAN,CAAajY,OAAtE;QACA,OAAO5H,KAAK,CAAC2J,sBAAN,GAA+BoW,GAA/B,CAAoCrV,IAAD,IAAU;UAClD,MAAMsV,KAAK,GAAGtV,IAAI,CAACkB,UAAL,CAAgBsH,QAAhB,CAAyBsnC,aAAa,GAAG,CAAH,GAAO16C,SAA7C,CAAd;UACA,MAAMyf,WAAW,GAAG3nB,SAAS,CAACooB,KAAK,CAACT,WAAP,CAA7B;UACA,OAAO;YACLU,IAAI,EAAEvQ,QAAQ,CAAChF,IAAI,CAACb,KAAN,CAAR,CAAqB8I,KADtB;YAELuN,SAAS,EAAEF,KAAK,CAACG,eAFZ;YAGLI,MAAM,EAAE,CAAC7V,IAAI,CAAC5D,OAHT;YAIL0oC,OAAO,EAAExvB,KAAK,CAACyvB,cAJV;YAKLmN,QAAQ,EAAE58B,KAAK,CAACkS,UALX;YAMLsN,cAAc,EAAExf,KAAK,CAACmS,gBANjB;YAOL0c,QAAQ,EAAE7uB,KAAK,CAAC0vB,eAPX;YAQLpvB,SAAS,EAAE,CAACf,WAAW,CAAC9F,KAAZ,GAAoB8F,WAAW,CAAC/F,MAAjC,IAA2C,CARjD;YASL4G,WAAW,EAAEJ,KAAK,CAACK,WATd;YAULmyB,UAAU,EAAEA,UAAU,IAAIxyB,KAAK,CAACwyB,UAV3B;YAWLx2B,QAAQ,EAAEgE,KAAK,CAAChE,QAXX;YAYLmiB,SAAS,EAAEA,SAAS,IAAIne,KAAK,CAACme,SAZzB;YAaLh0B,YAAY,EAAEO,IAAI,CAACb;UAbd,CAAP;QAeD,CAlBM,EAkBJ,IAlBI,CAAP;MAmBD;;IA1BK,CApBA;IAgDRiS,KAAK,EAAE;MACL5nB,KAAK,EAAGwZ,GAAD,IAASA,GAAG,CAAC1N,KAAJ,CAAU4H,OAAV,CAAkB1T,KAD7B;MAELsvB,OAAO,EAAE,KAFJ;MAGLyC,QAAQ,EAAE,QAHL;MAILhG,IAAI,EAAE;IAJD;EAhDC,CA3BQ;EAkFlBzlB,WAAW,EAAE;IACXgM,WAAW,EAAGC,IAAD,IAAU,CAACA,IAAI,CAACwsB,UAAL,CAAgB,IAAhB,CADb;IAEX1hB,MAAM,EAAE;MACN/K,WAAW,EAAGC,IAAD,IAAU,CAAC,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC8gC,QAArC,CAA8C9gC,IAA9C;IADlB;EAFG;AAlFK,CAApB;;AA0FA,MAAM+3C,KAAN,SAAoBluB,OAApB,CAA4B;EAC1B9wB,WAAW,CAACyH,MAAD,EAAS;IAClB;IACA,KAAKjH,KAAL,GAAaiH,MAAM,CAACjH,KAApB;IACA,KAAK4H,OAAL,GAAeX,MAAM,CAACW,OAAtB;IACA,KAAK8F,GAAL,GAAWzG,MAAM,CAACyG,GAAlB;IACA,KAAK+wC,QAAL,GAAgB3+C,SAAhB;IACA,KAAKqJ,GAAL,GAAWrJ,SAAX;IACA,KAAKuJ,MAAL,GAAcvJ,SAAd;IACA,KAAKwJ,IAAL,GAAYxJ,SAAZ;IACA,KAAKsJ,KAAL,GAAatJ,SAAb;IACA,KAAK2Z,KAAL,GAAa3Z,SAAb;IACA,KAAK0Z,MAAL,GAAc1Z,SAAd;IACA,KAAKmmB,QAAL,GAAgBnmB,SAAhB;IACA,KAAK6f,MAAL,GAAc7f,SAAd;IACA,KAAK6oB,QAAL,GAAgB7oB,SAAhB;EACD;;EACDuF,MAAM,CAAC+Y,QAAD,EAAWC,SAAX,EAAsB;IAC1B,MAAMtd,EAAE,GAAG,IAAX;IACA,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;IACA7G,EAAE,CAACuI,IAAH,GAAU,CAAV;IACAvI,EAAE,CAACoI,GAAH,GAAS,CAAT;;IACA,IAAI,CAACN,IAAI,CAAC2a,OAAV,EAAmB;MACjBziB,EAAE,CAAC0Y,KAAH,GAAW1Y,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAACqI,KAAH,GAAWrI,EAAE,CAACsI,MAAH,GAAY,CAA9C;MACA;IACD;;IACDtI,EAAE,CAAC0Y,KAAH,GAAW1Y,EAAE,CAACqI,KAAH,GAAWgV,QAAtB;IACArd,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAACsI,MAAH,GAAYgV,SAAxB;IACA,MAAM+f,SAAS,GAAG9pC,OAAO,CAACuU,IAAI,CAACoX,IAAN,CAAP,GAAqBpX,IAAI,CAACoX,IAAL,CAAUze,MAA/B,GAAwC,CAA1D;IACAT,EAAE,CAAC09C,QAAH,GAAc7mD,SAAS,CAACiR,IAAI,CAACoiB,OAAN,CAAvB;;IACA,MAAMyzB,QAAQ,GAAGtgB,SAAS,GAAGxkC,MAAM,CAACiP,IAAI,CAACitB,IAAN,CAAN,CAAkBE,UAA9B,GAA2Cj1B,EAAE,CAAC09C,QAAH,CAAYjlC,MAAxE;;IACA,IAAIzY,EAAE,CAACgY,YAAH,EAAJ,EAAuB;MACrBhY,EAAE,CAACyY,MAAH,GAAYklC,QAAZ;IACD,CAFD,MAEO;MACL39C,EAAE,CAAC0Y,KAAH,GAAWilC,QAAX;IACD;EACF;;EACD3lC,YAAY,GAAG;IACb,MAAM+O,GAAG,GAAG,KAAKlgB,OAAL,CAAaqe,QAAzB;IACA,OAAO6B,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,QAAhC;EACD;;EACD62B,SAAS,CAACzjC,MAAD,EAAS;IAChB,MAAM;MAAC/R,GAAD;MAAMG,IAAN;MAAYD,MAAZ;MAAoBD,KAApB;MAA2BxB;IAA3B,IAAsC,IAA5C;IACA,MAAMkrB,KAAK,GAAGlrB,OAAO,CAACkrB,KAAtB;IACA,IAAI9W,QAAQ,GAAG,CAAf;IACA,IAAIoC,QAAJ,EAAciY,MAAd,EAAsBC,MAAtB;;IACA,IAAI,KAAKvd,YAAL,EAAJ,EAAyB;MACvBsd,MAAM,GAAGr8B,cAAc,CAAC84B,KAAD,EAAQxpB,IAAR,EAAcF,KAAd,CAAvB;MACAktB,MAAM,GAAGntB,GAAG,GAAG+R,MAAf;MACAkD,QAAQ,GAAGhV,KAAK,GAAGE,IAAnB;IACD,CAJD,MAIO;MACL,IAAI1B,OAAO,CAACqe,QAAR,KAAqB,MAAzB,EAAiC;QAC/BoQ,MAAM,GAAG/sB,IAAI,GAAG4R,MAAhB;QACAob,MAAM,GAAGt8B,cAAc,CAAC84B,KAAD,EAAQzpB,MAAR,EAAgBF,GAAhB,CAAvB;QACA6S,QAAQ,GAAGllB,EAAE,GAAG,CAAC,GAAjB;MACD,CAJD,MAIO;QACLu/B,MAAM,GAAGjtB,KAAK,GAAG8R,MAAjB;QACAob,MAAM,GAAGt8B,cAAc,CAAC84B,KAAD,EAAQ3pB,GAAR,EAAaE,MAAb,CAAvB;QACA2S,QAAQ,GAAGllB,EAAE,GAAG,GAAhB;MACD;;MACDsnB,QAAQ,GAAG/U,MAAM,GAAGF,GAApB;IACD;;IACD,OAAO;MAACktB,MAAD;MAASC,MAAT;MAAiBlY,QAAjB;MAA2BpC;IAA3B,CAAP;EACD;;EACDva,IAAI,GAAG;IACL,MAAMV,EAAE,GAAG,IAAX;IACA,MAAM2M,GAAG,GAAG3M,EAAE,CAAC2M,GAAf;IACA,MAAM7E,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;;IACA,IAAI,CAACiB,IAAI,CAAC2a,OAAV,EAAmB;MACjB;IACD;;IACD,MAAMo7B,QAAQ,GAAGhlD,MAAM,CAACiP,IAAI,CAACitB,IAAN,CAAvB;IACA,MAAME,UAAU,GAAG4oB,QAAQ,CAAC5oB,UAA5B;IACA,MAAM9a,MAAM,GAAG8a,UAAU,GAAG,CAAb,GAAiBj1B,EAAE,CAAC09C,QAAH,CAAYt1C,GAA5C;;IACA,MAAM;MAACktB,MAAD;MAASC,MAAT;MAAiBlY,QAAjB;MAA2BpC;IAA3B,IAAuCjb,EAAE,CAAC49C,SAAH,CAAazjC,MAAb,CAA7C;;IACAxhB,UAAU,CAACgU,GAAD,EAAM7E,IAAI,CAACoX,IAAX,EAAiB,CAAjB,EAAoB,CAApB,EAAuB2+B,QAAvB,EAAiC;MACzC1qD,KAAK,EAAE2U,IAAI,CAAC3U,KAD6B;MAEzCkqB,QAFyC;MAGzCpC,QAHyC;MAIzCmiB,SAAS,EAAErkC,kBAAkB,CAAC+O,IAAI,CAACiqB,KAAN,CAJY;MAKzCwL,YAAY,EAAE,QAL2B;MAMzCM,WAAW,EAAE,CAACvI,MAAD,EAASC,MAAT;IAN4B,CAAjC,CAAV;EAQD;;AAnFyB;;AAqF5B,SAASuoB,WAAT,CAAqB7+C,KAArB,EAA4By6B,SAA5B,EAAuC;EACrC,MAAM3e,KAAK,GAAG,IAAI0iC,KAAJ,CAAU;IACtB9wC,GAAG,EAAE1N,KAAK,CAAC0N,GADW;IAEtB9F,OAAO,EAAE6yB,SAFa;IAGtBz6B;EAHsB,CAAV,CAAd;EAKAwoB,OAAO,CAACphB,SAAR,CAAkBpH,KAAlB,EAAyB8b,KAAzB,EAAgC2e,SAAhC;EACAjS,OAAO,CAAC0C,MAAR,CAAelrB,KAAf,EAAsB8b,KAAtB;EACA9b,KAAK,CAAC8+C,UAAN,GAAmBhjC,KAAnB;AACD;;AACD,IAAIijC,YAAY,GAAG;EACjBh0C,EAAE,EAAE,OADa;EAEjBszC,QAAQ,EAAEG,KAFO;;EAGjB39C,KAAK,CAACb,KAAD,EAAQ85C,KAAR,EAAelyC,OAAf,EAAwB;IAC3Bi3C,WAAW,CAAC7+C,KAAD,EAAQ4H,OAAR,CAAX;EACD,CALgB;;EAMjB5E,IAAI,CAAChD,KAAD,EAAQ;IACV,MAAM8+C,UAAU,GAAG9+C,KAAK,CAAC8+C,UAAzB;IACAt2B,OAAO,CAAC4C,SAAR,CAAkBprB,KAAlB,EAAyB8+C,UAAzB;IACA,OAAO9+C,KAAK,CAAC8+C,UAAb;EACD,CAVgB;;EAWjB/mB,YAAY,CAAC/3B,KAAD,EAAQ85C,KAAR,EAAelyC,OAAf,EAAwB;IAClC,MAAMkU,KAAK,GAAG9b,KAAK,CAAC8+C,UAApB;IACAt2B,OAAO,CAACphB,SAAR,CAAkBpH,KAAlB,EAAyB8b,KAAzB,EAAgClU,OAAhC;IACAkU,KAAK,CAAClU,OAAN,GAAgBA,OAAhB;EACD,CAfgB;;EAgBjBpT,QAAQ,EAAE;IACRs+B,KAAK,EAAE,QADC;IAERtP,OAAO,EAAE,KAFD;IAGRsS,IAAI,EAAE;MACJ9V,KAAK,EAAE;IADH,CAHE;IAMR2I,QAAQ,EAAE,IANF;IAORsC,OAAO,EAAE,EAPD;IAQRhF,QAAQ,EAAE,KARF;IASRhG,IAAI,EAAE,EATE;IAURN,MAAM,EAAE;EAVA,CAhBO;EA4BjBiR,aAAa,EAAE;IACb18B,KAAK,EAAE;EADM,CA5BE;EA+BjBsG,WAAW,EAAE;IACXgM,WAAW,EAAE,IADF;IAEXD,UAAU,EAAE;EAFD;AA/BI,CAAnB;AAqCA,MAAMy4C,WAAW,GAAG;EAClBC,OAAO,CAAC19C,KAAD,EAAQ;IACb,IAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;MACjB,OAAO,KAAP;IACD;;IACD,IAAIrN,CAAJ,EAAOwgC,GAAP;IACA,IAAI19B,CAAC,GAAG,CAAR;IACA,IAAIE,CAAC,GAAG,CAAR;IACA,IAAI4Z,KAAK,GAAG,CAAZ;;IACA,KAAK5c,CAAC,GAAG,CAAJ,EAAOwgC,GAAG,GAAGpzB,KAAK,CAACC,MAAxB,EAAgCrN,CAAC,GAAGwgC,GAApC,EAAyC,EAAExgC,CAA3C,EAA8C;MAC5C,MAAM2xB,EAAE,GAAGvkB,KAAK,CAACpN,CAAD,CAAL,CAAS4Y,OAApB;;MACA,IAAI+Y,EAAE,IAAIA,EAAE,CAAC2K,QAAH,EAAV,EAAyB;QACvB,MAAM3I,GAAG,GAAGhC,EAAE,CAACyK,eAAH,EAAZ;QACAt5B,CAAC,IAAI6wB,GAAG,CAAC7wB,CAAT;QACAE,CAAC,IAAI2wB,GAAG,CAAC3wB,CAAT;QACA,EAAE4Z,KAAF;MACD;IACF;;IACD,OAAO;MACL9Z,CAAC,EAAEA,CAAC,GAAG8Z,KADF;MAEL5Z,CAAC,EAAEA,CAAC,GAAG4Z;IAFF,CAAP;EAID,CAtBiB;;EAuBlB2W,OAAO,CAACnmB,KAAD,EAAQ29C,aAAR,EAAuB;IAC5B,IAAIjoD,CAAC,GAAGioD,aAAa,CAACjoD,CAAtB;IACA,IAAIE,CAAC,GAAG+nD,aAAa,CAAC/nD,CAAtB;IACA,IAAI+vB,WAAW,GAAG/b,MAAM,CAACE,iBAAzB;IACA,IAAIlX,CAAJ,EAAOwgC,GAAP,EAAYwqB,cAAZ;;IACA,KAAKhrD,CAAC,GAAG,CAAJ,EAAOwgC,GAAG,GAAGpzB,KAAK,CAACC,MAAxB,EAAgCrN,CAAC,GAAGwgC,GAApC,EAAyC,EAAExgC,CAA3C,EAA8C;MAC5C,MAAM2xB,EAAE,GAAGvkB,KAAK,CAACpN,CAAD,CAAL,CAAS4Y,OAApB;;MACA,IAAI+Y,EAAE,IAAIA,EAAE,CAAC2K,QAAH,EAAV,EAAyB;QACvB,MAAMlX,MAAM,GAAGuM,EAAE,CAACqB,cAAH,EAAf;QACA,MAAM5yB,CAAC,GAAG6J,qBAAqB,CAAC8gD,aAAD,EAAgB3lC,MAAhB,CAA/B;;QACA,IAAIhlB,CAAC,GAAG2yB,WAAR,EAAqB;UACnBA,WAAW,GAAG3yB,CAAd;UACA4qD,cAAc,GAAGr5B,EAAjB;QACD;MACF;IACF;;IACD,IAAIq5B,cAAJ,EAAoB;MAClB,MAAMC,EAAE,GAAGD,cAAc,CAAC5uB,eAAf,EAAX;MACAt5B,CAAC,GAAGmoD,EAAE,CAACnoD,CAAP;MACAE,CAAC,GAAGioD,EAAE,CAACjoD,CAAP;IACD;;IACD,OAAO;MACLF,CADK;MAELE;IAFK,CAAP;EAID;;AAhDiB,CAApB;;AAkDA,SAASkoD,YAAT,CAAsBzmC,IAAtB,EAA4B0mC,MAA5B,EAAoC;EAClC,IAAIA,MAAJ,EAAY;IACV,IAAIhrD,OAAO,CAACgrD,MAAD,CAAX,EAAqB;MACnB90C,KAAK,CAACuL,SAAN,CAAgBvT,IAAhB,CAAqB+8C,KAArB,CAA2B3mC,IAA3B,EAAiC0mC,MAAjC;IACD,CAFD,MAEO;MACL1mC,IAAI,CAACpW,IAAL,CAAU88C,MAAV;IACD;EACF;;EACD,OAAO1mC,IAAP;AACD;;AACD,SAAS4mC,aAAT,CAAuBC,GAAvB,EAA4B;EAC1B,IAAI,CAAC,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,YAAYC,MAA3C,KAAsDD,GAAG,CAAC3lC,OAAJ,CAAY,IAAZ,IAAoB,CAAC,CAA/E,EAAkF;IAChF,OAAO2lC,GAAG,CAACre,KAAJ,CAAU,IAAV,CAAP;EACD;;EACD,OAAOqe,GAAP;AACD;;AACD,SAASE,iBAAT,CAA2B3/C,KAA3B,EAAkC0B,IAAlC,EAAwC;EACtC,MAAM;IAACqL,OAAD;IAAU5C,YAAV;IAAwBN;EAAxB,IAAiCnI,IAAvC;EACA,MAAMkK,UAAU,GAAG5L,KAAK,CAAC2P,cAAN,CAAqBxF,YAArB,EAAmCyB,UAAtD;EACA,MAAM;IAAC+G,KAAD;IAAQtK;EAAR,IAAiBuD,UAAU,CAAC8G,gBAAX,CAA4B7I,KAA5B,CAAvB;EACA,OAAO;IACL7J,KADK;IAEL2S,KAFK;IAGL9G,MAAM,EAAED,UAAU,CAACgG,SAAX,CAAqB/H,KAArB,CAHH;IAILoD,GAAG,EAAEjN,KAAK,CAACsK,IAAN,CAAWoF,QAAX,CAAoBvF,YAApB,EAAkCG,IAAlC,CAAuCT,KAAvC,CAJA;IAKLgX,cAAc,EAAExY,KALX;IAMLwE,OAAO,EAAEjB,UAAU,CAAC+C,UAAX,EANJ;IAOL3B,SAAS,EAAEnD,KAPN;IAQLM,YARK;IASL4C;EATK,CAAP;AAWD;;AACD,SAAS6yC,cAAT,CAAwB/jC,OAAxB,EAAiCjU,OAAjC,EAA0C;EACxC,MAAM8F,GAAG,GAAGmO,OAAO,CAAC3U,MAAR,CAAewG,GAA3B;EACA,MAAM;IAACmyC,IAAD;IAAOC,MAAP;IAAehkC;EAAf,IAAwBD,OAA9B;EACA,MAAM;IAAC0+B,QAAD;IAAWD;EAAX,IAAwB1yC,OAA9B;EACA,MAAMm4C,QAAQ,GAAGnmD,MAAM,CAACgO,OAAO,CAACm4C,QAAT,CAAvB;EACA,MAAMtC,SAAS,GAAG7jD,MAAM,CAACgO,OAAO,CAAC61C,SAAT,CAAxB;EACA,MAAMuC,UAAU,GAAGpmD,MAAM,CAACgO,OAAO,CAACo4C,UAAT,CAAzB;EACA,MAAMC,cAAc,GAAGnkC,KAAK,CAACta,MAA7B;EACA,MAAM0+C,eAAe,GAAGJ,MAAM,CAACt+C,MAA/B;EACA,MAAM2+C,iBAAiB,GAAGN,IAAI,CAACr+C,MAA/B;EACA,MAAMypB,OAAO,GAAGrzB,SAAS,CAACgQ,OAAO,CAACqjB,OAAT,CAAzB;EACA,IAAIzR,MAAM,GAAGyR,OAAO,CAACzR,MAArB;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAI2mC,kBAAkB,GAAGP,IAAI,CAACl9C,MAAL,CAAY,CAACoO,KAAD,EAAQsvC,QAAR,KAAqBtvC,KAAK,GAAGsvC,QAAQ,CAACC,MAAT,CAAgB9+C,MAAxB,GAAiC6+C,QAAQ,CAACtqB,KAAT,CAAev0B,MAAhD,GAAyD6+C,QAAQ,CAACE,KAAT,CAAe/+C,MAAzG,EAAiH,CAAjH,CAAzB;EACA4+C,kBAAkB,IAAIvkC,OAAO,CAAC2kC,UAAR,CAAmBh/C,MAAnB,GAA4Bqa,OAAO,CAAC4kC,SAAR,CAAkBj/C,MAApE;;EACA,IAAIy+C,cAAJ,EAAoB;IAClBzmC,MAAM,IAAIymC,cAAc,GAAGxC,SAAS,CAACznB,UAA3B,GACT,CAACiqB,cAAc,GAAG,CAAlB,IAAuBr4C,OAAO,CAAC84C,YADtB,GAET94C,OAAO,CAAC+4C,iBAFT;EAGD;;EACD,IAAIP,kBAAJ,EAAwB;IACtB,MAAMQ,cAAc,GAAGh5C,OAAO,CAACi5C,aAAR,GAAwBlgD,IAAI,CAACmC,GAAL,CAASw3C,SAAT,EAAoByF,QAAQ,CAAC/pB,UAA7B,CAAxB,GAAmE+pB,QAAQ,CAAC/pB,UAAnG;IACAxc,MAAM,IAAI2mC,iBAAiB,GAAGS,cAApB,GACT,CAACR,kBAAkB,GAAGD,iBAAtB,IAA2CJ,QAAQ,CAAC/pB,UAD3C,GAET,CAACoqB,kBAAkB,GAAG,CAAtB,IAA2Bx4C,OAAO,CAACk5C,WAFpC;EAGD;;EACD,IAAIZ,eAAJ,EAAqB;IACnB1mC,MAAM,IAAI5R,OAAO,CAACm5C,eAAR,GACTb,eAAe,GAAGF,UAAU,CAAChqB,UADpB,GAET,CAACkqB,eAAe,GAAG,CAAnB,IAAwBt4C,OAAO,CAACo5C,aAFjC;EAGD;;EACD,IAAIC,YAAY,GAAG,CAAnB;;EACA,MAAMC,YAAY,GAAG,UAASlgC,IAAT,EAAe;IAClCvH,KAAK,GAAG9Y,IAAI,CAACmC,GAAL,CAAS2W,KAAT,EAAgB/L,GAAG,CAACkuC,WAAJ,CAAgB56B,IAAhB,EAAsBvH,KAAtB,GAA8BwnC,YAA9C,CAAR;EACD,CAFD;;EAGAvzC,GAAG,CAACqxB,IAAJ;EACArxB,GAAG,CAACooB,IAAJ,GAAW2nB,SAAS,CAACzhB,MAArB;EACAlkC,IAAI,CAAC+jB,OAAO,CAACC,KAAT,EAAgBolC,YAAhB,CAAJ;EACAxzC,GAAG,CAACooB,IAAJ,GAAWiqB,QAAQ,CAAC/jB,MAApB;EACAlkC,IAAI,CAAC+jB,OAAO,CAAC2kC,UAAR,CAAmBnqC,MAAnB,CAA0BwF,OAAO,CAAC4kC,SAAlC,CAAD,EAA+CS,YAA/C,CAAJ;EACAD,YAAY,GAAGr5C,OAAO,CAACi5C,aAAR,GAAyBtG,QAAQ,GAAG,CAApC,GAAyC,CAAxD;EACAziD,IAAI,CAAC+nD,IAAD,EAAQQ,QAAD,IAAc;IACvBvoD,IAAI,CAACuoD,QAAQ,CAACC,MAAV,EAAkBY,YAAlB,CAAJ;IACAppD,IAAI,CAACuoD,QAAQ,CAACtqB,KAAV,EAAiBmrB,YAAjB,CAAJ;IACAppD,IAAI,CAACuoD,QAAQ,CAACE,KAAV,EAAiBW,YAAjB,CAAJ;EACD,CAJG,CAAJ;EAKAD,YAAY,GAAG,CAAf;EACAvzC,GAAG,CAACooB,IAAJ,GAAWkqB,UAAU,CAAChkB,MAAtB;EACAlkC,IAAI,CAAC+jB,OAAO,CAACikC,MAAT,EAAiBoB,YAAjB,CAAJ;EACAxzC,GAAG,CAACuxB,OAAJ;EACAxlB,KAAK,IAAIwR,OAAO,CAACxR,KAAjB;EACA,OAAO;IAACA,KAAD;IAAQD;EAAR,CAAP;AACD;;AACD,SAAS2nC,eAAT,CAAyBnhD,KAAzB,EAAgCsI,IAAhC,EAAsC;EACpC,MAAM;IAACnR,CAAD;IAAIqiB;EAAJ,IAAclR,IAApB;;EACA,IAAInR,CAAC,GAAGqiB,MAAM,GAAG,CAAjB,EAAoB;IAClB,OAAO,KAAP;EACD,CAFD,MAEO,IAAIriB,CAAC,GAAI6I,KAAK,CAACwZ,MAAN,GAAeA,MAAM,GAAG,CAAjC,EAAqC;IAC1C,OAAO,QAAP;EACD;;EACD,OAAO,QAAP;AACD;;AACD,SAAS4nC,mBAAT,CAA6BC,MAA7B,EAAqCrhD,KAArC,EAA4C4H,OAA5C,EAAqDU,IAArD,EAA2D;EACzD,MAAM;IAACrR,CAAD;IAAIwiB;EAAJ,IAAanR,IAAnB;EACA,MAAMg5C,KAAK,GAAG15C,OAAO,CAAC25C,SAAR,GAAoB35C,OAAO,CAAC45C,YAA1C;;EACA,IAAIH,MAAM,KAAK,MAAX,IAAqBpqD,CAAC,GAAGwiB,KAAJ,GAAY6nC,KAAZ,GAAoBthD,KAAK,CAACyZ,KAAnD,EAA0D;IACxD,OAAO,IAAP;EACD;;EACD,IAAI4nC,MAAM,KAAK,OAAX,IAAsBpqD,CAAC,GAAGwiB,KAAJ,GAAY6nC,KAAZ,GAAoB,CAA9C,EAAiD;IAC/C,OAAO,IAAP;EACD;AACF;;AACD,SAASG,eAAT,CAAyBzhD,KAAzB,EAAgC4H,OAAhC,EAAyCU,IAAzC,EAA+Co5C,MAA/C,EAAuD;EACrD,MAAM;IAACzqD,CAAD;IAAIwiB;EAAJ,IAAanR,IAAnB;EACA,MAAM;IAACmR,KAAK,EAAEkoC,UAAR;IAAoB1uC,SAAS,EAAE;MAAC3J,IAAD;MAAOF;IAAP;EAA/B,IAAgDpJ,KAAtD;EACA,IAAIqhD,MAAM,GAAG,QAAb;;EACA,IAAIK,MAAM,KAAK,QAAf,EAAyB;IACvBL,MAAM,GAAGpqD,CAAC,IAAI,CAACqS,IAAI,GAAGF,KAAR,IAAiB,CAAtB,GAA0B,MAA1B,GAAmC,OAA5C;EACD,CAFD,MAEO,IAAInS,CAAC,IAAIwiB,KAAK,GAAG,CAAjB,EAAoB;IACzB4nC,MAAM,GAAG,MAAT;EACD,CAFM,MAEA,IAAIpqD,CAAC,IAAI0qD,UAAU,GAAGloC,KAAK,GAAG,CAA9B,EAAiC;IACtC4nC,MAAM,GAAG,OAAT;EACD;;EACD,IAAID,mBAAmB,CAACC,MAAD,EAASrhD,KAAT,EAAgB4H,OAAhB,EAAyBU,IAAzB,CAAvB,EAAuD;IACrD+4C,MAAM,GAAG,QAAT;EACD;;EACD,OAAOA,MAAP;AACD;;AACD,SAASO,kBAAT,CAA4B5hD,KAA5B,EAAmC4H,OAAnC,EAA4CU,IAA5C,EAAkD;EAChD,MAAMo5C,MAAM,GAAG95C,OAAO,CAAC85C,MAAR,IAAkBP,eAAe,CAACnhD,KAAD,EAAQsI,IAAR,CAAhD;EACA,OAAO;IACL+4C,MAAM,EAAEz5C,OAAO,CAACy5C,MAAR,IAAkBI,eAAe,CAACzhD,KAAD,EAAQ4H,OAAR,EAAiBU,IAAjB,EAAuBo5C,MAAvB,CADpC;IAELA;EAFK,CAAP;AAID;;AACD,SAASG,MAAT,CAAgBv5C,IAAhB,EAAsB+4C,MAAtB,EAA8B;EAC5B,IAAI;IAACpqD,CAAD;IAAIwiB;EAAJ,IAAanR,IAAjB;;EACA,IAAI+4C,MAAM,KAAK,OAAf,EAAwB;IACtBpqD,CAAC,IAAIwiB,KAAL;EACD,CAFD,MAEO,IAAI4nC,MAAM,KAAK,QAAf,EAAyB;IAC9BpqD,CAAC,IAAKwiB,KAAK,GAAG,CAAd;EACD;;EACD,OAAOxiB,CAAP;AACD;;AACD,SAAS6qD,MAAT,CAAgBx5C,IAAhB,EAAsBo5C,MAAtB,EAA8BK,cAA9B,EAA8C;EAC5C,IAAI;IAAC5qD,CAAD;IAAIqiB;EAAJ,IAAclR,IAAlB;;EACA,IAAIo5C,MAAM,KAAK,KAAf,EAAsB;IACpBvqD,CAAC,IAAI4qD,cAAL;EACD,CAFD,MAEO,IAAIL,MAAM,KAAK,QAAf,EAAyB;IAC9BvqD,CAAC,IAAIqiB,MAAM,GAAGuoC,cAAd;EACD,CAFM,MAEA;IACL5qD,CAAC,IAAKqiB,MAAM,GAAG,CAAf;EACD;;EACD,OAAOriB,CAAP;AACD;;AACD,SAAS6qD,kBAAT,CAA4Bp6C,OAA5B,EAAqCU,IAArC,EAA2C25C,SAA3C,EAAsDjiD,KAAtD,EAA6D;EAC3D,MAAM;IAACuhD,SAAD;IAAYC,YAAZ;IAA0BU;EAA1B,IAA0Ct6C,OAAhD;EACA,MAAM;IAACy5C,MAAD;IAASK;EAAT,IAAmBO,SAAzB;EACA,MAAMF,cAAc,GAAGR,SAAS,GAAGC,YAAnC;EACA,MAAMW,gBAAgB,GAAGD,YAAY,GAAGV,YAAxC;EACA,IAAIvqD,CAAC,GAAG4qD,MAAM,CAACv5C,IAAD,EAAO+4C,MAAP,CAAd;EACA,MAAMlqD,CAAC,GAAG2qD,MAAM,CAACx5C,IAAD,EAAOo5C,MAAP,EAAeK,cAAf,CAAhB;;EACA,IAAIL,MAAM,KAAK,QAAf,EAAyB;IACvB,IAAIL,MAAM,KAAK,MAAf,EAAuB;MACrBpqD,CAAC,IAAI8qD,cAAL;IACD,CAFD,MAEO,IAAIV,MAAM,KAAK,OAAf,EAAwB;MAC7BpqD,CAAC,IAAI8qD,cAAL;IACD;EACF,CAND,MAMO,IAAIV,MAAM,KAAK,MAAf,EAAuB;IAC5BpqD,CAAC,IAAIkrD,gBAAL;EACD,CAFM,MAEA,IAAId,MAAM,KAAK,OAAf,EAAwB;IAC7BpqD,CAAC,IAAIkrD,gBAAL;EACD;;EACD,OAAO;IACLlrD,CAAC,EAAEC,WAAW,CAACD,CAAD,EAAI,CAAJ,EAAO+I,KAAK,CAACyZ,KAAN,GAAcnR,IAAI,CAACmR,KAA1B,CADT;IAELtiB,CAAC,EAAED,WAAW,CAACC,CAAD,EAAI,CAAJ,EAAO6I,KAAK,CAACwZ,MAAN,GAAelR,IAAI,CAACkR,MAA3B;EAFT,CAAP;AAID;;AACD,SAAS4oC,WAAT,CAAqBvmC,OAArB,EAA8BiX,KAA9B,EAAqClrB,OAArC,EAA8C;EAC5C,MAAMqjB,OAAO,GAAGrzB,SAAS,CAACgQ,OAAO,CAACqjB,OAAT,CAAzB;EACA,OAAO6H,KAAK,KAAK,QAAV,GACHjX,OAAO,CAAC5kB,CAAR,GAAY4kB,OAAO,CAACpC,KAAR,GAAgB,CADzB,GAEHqZ,KAAK,KAAK,OAAV,GACEjX,OAAO,CAAC5kB,CAAR,GAAY4kB,OAAO,CAACpC,KAApB,GAA4BwR,OAAO,CAAC7hB,KADtC,GAEEyS,OAAO,CAAC5kB,CAAR,GAAYg0B,OAAO,CAAC3hB,IAJ1B;AAKD;;AACD,SAAS+4C,uBAAT,CAAiCrpD,QAAjC,EAA2C;EACzC,OAAOqmD,YAAY,CAAC,EAAD,EAAKG,aAAa,CAACxmD,QAAD,CAAlB,CAAnB;AACD;;AACD,SAASspD,oBAAT,CAA8B31C,MAA9B,EAAsCkP,OAAtC,EAA+C0mC,YAA/C,EAA6D;EAC3D,OAAOr8C,MAAM,CAACqC,MAAP,CAAcrC,MAAM,CAAC0G,MAAP,CAAcD,MAAd,CAAd,EAAqC;IAC1CkP,OAD0C;IAE1C0mC,YAF0C;IAG1CpiD,IAAI,EAAE;EAHoC,CAArC,CAAP;AAKD;;AACD,SAASqiD,iBAAT,CAA2BpiD,SAA3B,EAAsCiT,OAAtC,EAA+C;EAC7C,MAAM2R,QAAQ,GAAG3R,OAAO,IAAIA,OAAO,CAACxG,OAAnB,IAA8BwG,OAAO,CAACxG,OAAR,CAAgBgP,OAA9C,IAAyDxI,OAAO,CAACxG,OAAR,CAAgBgP,OAAhB,CAAwBzb,SAAlG;EACA,OAAO4kB,QAAQ,GAAG5kB,SAAS,CAAC4kB,QAAV,CAAmBA,QAAnB,CAAH,GAAkC5kB,SAAjD;AACD;;AACD,MAAMqiD,OAAN,SAAsBnyB,OAAtB,CAA8B;EAC5B9wB,WAAW,CAACyH,MAAD,EAAS;IAClB;IACA,KAAKy7C,OAAL,GAAe,CAAf;IACA,KAAK/gD,OAAL,GAAe,EAAf;IACA,KAAKuF,MAAL,GAAcD,MAAM,CAACC,MAArB;IACA,KAAKy7C,cAAL,GAAsB7iD,SAAtB;IACA,KAAK8iD,KAAL,GAAa9iD,SAAb;IACA,KAAK+iD,iBAAL,GAAyB/iD,SAAzB;IACA,KAAKgjD,aAAL,GAAqB,EAArB;IACA,KAAK76C,WAAL,GAAmBnI,SAAnB;IACA,KAAKuO,QAAL,GAAgBvO,SAAhB;IACA,KAAK8H,OAAL,GAAeX,MAAM,CAACW,OAAtB;IACA,KAAKm7C,UAAL,GAAkBjjD,SAAlB;IACA,KAAKgc,KAAL,GAAahc,SAAb;IACA,KAAK0gD,UAAL,GAAkB1gD,SAAlB;IACA,KAAK+/C,IAAL,GAAY//C,SAAZ;IACA,KAAK2gD,SAAL,GAAiB3gD,SAAjB;IACA,KAAKggD,MAAL,GAAchgD,SAAd;IACA,KAAKuhD,MAAL,GAAcvhD,SAAd;IACA,KAAK4hD,MAAL,GAAc5hD,SAAd;IACA,KAAK7I,CAAL,GAAS6I,SAAT;IACA,KAAK3I,CAAL,GAAS2I,SAAT;IACA,KAAK0Z,MAAL,GAAc1Z,SAAd;IACA,KAAK2Z,KAAL,GAAa3Z,SAAb;IACA,KAAKkjD,MAAL,GAAcljD,SAAd;IACA,KAAKmjD,MAAL,GAAcnjD,SAAd;IACA,KAAKojD,WAAL,GAAmBpjD,SAAnB;IACA,KAAKqjD,gBAAL,GAAwBrjD,SAAxB;IACA,KAAKsjD,eAAL,GAAuBtjD,SAAvB;EACD;;EACDwO,UAAU,CAAC1G,OAAD,EAAU;IAClB,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKi7C,iBAAL,GAAyB/iD,SAAzB;IACA,KAAKuO,QAAL,GAAgBvO,SAAhB;EACD;;EACDmU,kBAAkB,GAAG;IACnB,MAAMlT,EAAE,GAAG,IAAX;IACA,MAAMuM,MAAM,GAAGvM,EAAE,CAAC8hD,iBAAlB;;IACA,IAAIv1C,MAAJ,EAAY;MACV,OAAOA,MAAP;IACD;;IACD,MAAMtN,KAAK,GAAGe,EAAE,CAACmG,MAAjB;IACA,MAAMU,OAAO,GAAG7G,EAAE,CAAC6G,OAAH,CAAWk1B,UAAX,CAAsB/7B,EAAE,CAAC6P,UAAH,EAAtB,CAAhB;IACA,MAAM/H,IAAI,GAAGjB,OAAO,CAAC2rB,OAAR,IAAmBvzB,KAAK,CAAC4H,OAAN,CAAcxB,SAAjC,IAA8CwB,OAAO,CAACf,UAAnE;IACA,MAAMA,UAAU,GAAG,IAAIG,UAAJ,CAAejG,EAAE,CAACmG,MAAlB,EAA0B2B,IAA1B,CAAnB;;IACA,IAAIA,IAAI,CAACuL,UAAT,EAAqB;MACnBrT,EAAE,CAAC8hD,iBAAH,GAAuB38C,MAAM,CAAC8N,MAAP,CAAcnN,UAAd,CAAvB;IACD;;IACD,OAAOA,UAAP;EACD;;EACD+J,UAAU,GAAG;IACX,MAAM7P,EAAE,GAAG,IAAX;IACA,OAAOA,EAAE,CAACsN,QAAH,KACPtN,EAAE,CAACsN,QAAH,GAAci0C,oBAAoB,CAACvhD,EAAE,CAACmG,MAAH,CAAU0J,UAAV,EAAD,EAAyB7P,EAAzB,EAA6BA,EAAE,CAAC+hD,aAAhC,CAD3B,CAAP;EAED;;EACDO,QAAQ,CAAChwC,OAAD,EAAUzL,OAAV,EAAmB;IACzB,MAAM7G,EAAE,GAAG,IAAX;IACA,MAAM;MAACX;IAAD,IAAcwH,OAApB;IACA,MAAM07C,WAAW,GAAGljD,SAAS,CAACkjD,WAAV,CAAsB/D,KAAtB,CAA4Bx+C,EAA5B,EAAgC,CAACsS,OAAD,CAAhC,CAApB;IACA,MAAMyI,KAAK,GAAG1b,SAAS,CAAC0b,KAAV,CAAgByjC,KAAhB,CAAsBx+C,EAAtB,EAA0B,CAACsS,OAAD,CAA1B,CAAd;IACA,MAAMkwC,UAAU,GAAGnjD,SAAS,CAACmjD,UAAV,CAAqBhE,KAArB,CAA2Bx+C,EAA3B,EAA+B,CAACsS,OAAD,CAA/B,CAAnB;IACA,IAAI0iB,KAAK,GAAG,EAAZ;IACAA,KAAK,GAAGspB,YAAY,CAACtpB,KAAD,EAAQypB,aAAa,CAAC8D,WAAD,CAArB,CAApB;IACAvtB,KAAK,GAAGspB,YAAY,CAACtpB,KAAD,EAAQypB,aAAa,CAAC1jC,KAAD,CAArB,CAApB;IACAia,KAAK,GAAGspB,YAAY,CAACtpB,KAAD,EAAQypB,aAAa,CAAC+D,UAAD,CAArB,CAApB;IACA,OAAOxtB,KAAP;EACD;;EACDytB,aAAa,CAACjB,YAAD,EAAe36C,OAAf,EAAwB;IACnC,OAAOy6C,uBAAuB,CAACz6C,OAAO,CAACxH,SAAR,CAAkBogD,UAAlB,CAA6BjB,KAA7B,CAAmC,IAAnC,EAAyC,CAACgD,YAAD,CAAzC,CAAD,CAA9B;EACD;;EACDkB,OAAO,CAAClB,YAAD,EAAe36C,OAAf,EAAwB;IAC7B,MAAM7G,EAAE,GAAG,IAAX;IACA,MAAM;MAACX;IAAD,IAAcwH,OAApB;IACA,MAAM87C,SAAS,GAAG,EAAlB;IACA5rD,IAAI,CAACyqD,YAAD,EAAgBlvC,OAAD,IAAa;MAC9B,MAAMgtC,QAAQ,GAAG;QACfC,MAAM,EAAE,EADO;QAEfvqB,KAAK,EAAE,EAFQ;QAGfwqB,KAAK,EAAE;MAHQ,CAAjB;MAKA,MAAMoD,MAAM,GAAGnB,iBAAiB,CAACpiD,SAAD,EAAYiT,OAAZ,CAAhC;MACAgsC,YAAY,CAACgB,QAAQ,CAACC,MAAV,EAAkBd,aAAa,CAACmE,MAAM,CAACC,WAAP,CAAmB5iD,IAAnB,CAAwBD,EAAxB,EAA4BsS,OAA5B,CAAD,CAA/B,CAAZ;MACAgsC,YAAY,CAACgB,QAAQ,CAACtqB,KAAV,EAAiB4tB,MAAM,CAAChxC,KAAP,CAAa3R,IAAb,CAAkBD,EAAlB,EAAsBsS,OAAtB,CAAjB,CAAZ;MACAgsC,YAAY,CAACgB,QAAQ,CAACE,KAAV,EAAiBf,aAAa,CAACmE,MAAM,CAACE,UAAP,CAAkB7iD,IAAlB,CAAuBD,EAAvB,EAA2BsS,OAA3B,CAAD,CAA9B,CAAZ;MACAqwC,SAAS,CAAClhD,IAAV,CAAe69C,QAAf;IACD,CAXG,CAAJ;IAYA,OAAOqD,SAAP;EACD;;EACDI,YAAY,CAACvB,YAAD,EAAe36C,OAAf,EAAwB;IAClC,OAAOy6C,uBAAuB,CAACz6C,OAAO,CAACxH,SAAR,CAAkBqgD,SAAlB,CAA4BlB,KAA5B,CAAkC,IAAlC,EAAwC,CAACgD,YAAD,CAAxC,CAAD,CAA9B;EACD;;EACDwB,SAAS,CAACxB,YAAD,EAAe36C,OAAf,EAAwB;IAC/B,MAAM7G,EAAE,GAAG,IAAX;IACA,MAAM;MAACX;IAAD,IAAcwH,OAApB;IACA,MAAMo8C,YAAY,GAAG5jD,SAAS,CAAC4jD,YAAV,CAAuBzE,KAAvB,CAA6Bx+C,EAA7B,EAAiC,CAACwhD,YAAD,CAAjC,CAArB;IACA,MAAMzC,MAAM,GAAG1/C,SAAS,CAAC0/C,MAAV,CAAiBP,KAAjB,CAAuBx+C,EAAvB,EAA2B,CAACwhD,YAAD,CAA3B,CAAf;IACA,MAAM0B,WAAW,GAAG7jD,SAAS,CAAC6jD,WAAV,CAAsB1E,KAAtB,CAA4Bx+C,EAA5B,EAAgC,CAACwhD,YAAD,CAAhC,CAApB;IACA,IAAIxsB,KAAK,GAAG,EAAZ;IACAA,KAAK,GAAGspB,YAAY,CAACtpB,KAAD,EAAQypB,aAAa,CAACwE,YAAD,CAArB,CAApB;IACAjuB,KAAK,GAAGspB,YAAY,CAACtpB,KAAD,EAAQypB,aAAa,CAACM,MAAD,CAArB,CAApB;IACA/pB,KAAK,GAAGspB,YAAY,CAACtpB,KAAD,EAAQypB,aAAa,CAACyE,WAAD,CAArB,CAApB;IACA,OAAOluB,KAAP;EACD;;EACDmuB,YAAY,CAACt8C,OAAD,EAAU;IACpB,MAAM7G,EAAE,GAAG,IAAX;IACA,MAAMqE,MAAM,GAAGrE,EAAE,CAACY,OAAlB;IACA,MAAM2I,IAAI,GAAGvJ,EAAE,CAACmG,MAAH,CAAUoD,IAAvB;IACA,MAAM44C,WAAW,GAAG,EAApB;IACA,MAAMC,gBAAgB,GAAG,EAAzB;IACA,MAAMC,eAAe,GAAG,EAAxB;IACA,IAAIb,YAAY,GAAG,EAAnB;IACA,IAAIpuD,CAAJ,EAAOwgC,GAAP;;IACA,KAAKxgC,CAAC,GAAG,CAAJ,EAAOwgC,GAAG,GAAGvvB,MAAM,CAAC5D,MAAzB,EAAiCrN,CAAC,GAAGwgC,GAArC,EAA0C,EAAExgC,CAA5C,EAA+C;MAC7CouD,YAAY,CAAC//C,IAAb,CAAkBm9C,iBAAiB,CAAC5+C,EAAE,CAACmG,MAAJ,EAAY9B,MAAM,CAACjR,CAAD,CAAlB,CAAnC;IACD;;IACD,IAAIyT,OAAO,CAAC4E,MAAZ,EAAoB;MAClB+1C,YAAY,GAAGA,YAAY,CAAC/1C,MAAb,CAAoB,CAACO,OAAD,EAAUlD,KAAV,EAAiBge,KAAjB,KAA2BjgB,OAAO,CAAC4E,MAAR,CAAeO,OAAf,EAAwBlD,KAAxB,EAA+Bge,KAA/B,EAAsCvd,IAAtC,CAA/C,CAAf;IACD;;IACD,IAAI1C,OAAO,CAACu8C,QAAZ,EAAsB;MACpB5B,YAAY,GAAGA,YAAY,CAACjsC,IAAb,CAAkB,CAACziB,CAAD,EAAIQ,CAAJ,KAAUuT,OAAO,CAACu8C,QAAR,CAAiBtwD,CAAjB,EAAoBQ,CAApB,EAAuBiW,IAAvB,CAA5B,CAAf;IACD;;IACDxS,IAAI,CAACyqD,YAAD,EAAgBlvC,OAAD,IAAa;MAC9B,MAAMswC,MAAM,GAAGnB,iBAAiB,CAAC56C,OAAO,CAACxH,SAAT,EAAoBiT,OAApB,CAAhC;MACA6vC,WAAW,CAAC1gD,IAAZ,CAAiBmhD,MAAM,CAACS,UAAP,CAAkBpjD,IAAlB,CAAuBD,EAAvB,EAA2BsS,OAA3B,CAAjB;MACA8vC,gBAAgB,CAAC3gD,IAAjB,CAAsBmhD,MAAM,CAACU,eAAP,CAAuBrjD,IAAvB,CAA4BD,EAA5B,EAAgCsS,OAAhC,CAAtB;MACA+vC,eAAe,CAAC5gD,IAAhB,CAAqBmhD,MAAM,CAACW,cAAP,CAAsBtjD,IAAtB,CAA2BD,EAA3B,EAA+BsS,OAA/B,CAArB;IACD,CALG,CAAJ;IAMAtS,EAAE,CAACmiD,WAAH,GAAiBA,WAAjB;IACAniD,EAAE,CAACoiD,gBAAH,GAAsBA,gBAAtB;IACApiD,EAAE,CAACqiD,eAAH,GAAqBA,eAArB;IACAriD,EAAE,CAACgiD,UAAH,GAAgBR,YAAhB;IACA,OAAOA,YAAP;EACD;;EACDl9C,MAAM,CAACod,OAAD,EAAUgrB,MAAV,EAAkB;IACtB,MAAM1sC,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAH,CAAWk1B,UAAX,CAAsB/7B,EAAE,CAAC6P,UAAH,EAAtB,CAAhB;IACA,MAAMxL,MAAM,GAAGrE,EAAE,CAACY,OAAlB;IACA,IAAI+E,UAAJ;IACA,IAAI67C,YAAY,GAAG,EAAnB;;IACA,IAAI,CAACn9C,MAAM,CAAC5D,MAAZ,EAAoB;MAClB,IAAIT,EAAE,CAAC2hD,OAAH,KAAe,CAAnB,EAAsB;QACpBh8C,UAAU,GAAG;UACXg8C,OAAO,EAAE;QADE,CAAb;MAGD;IACF,CAND,MAMO;MACL,MAAMz8B,QAAQ,GAAG+4B,WAAW,CAACp3C,OAAO,CAACqe,QAAT,CAAX,CAA8BjlB,IAA9B,CAAmCD,EAAnC,EAAuCqE,MAAvC,EAA+CrE,EAAE,CAAC4hD,cAAlD,CAAjB;MACAJ,YAAY,GAAGxhD,EAAE,CAACmjD,YAAH,CAAgBt8C,OAAhB,CAAf;MACA7G,EAAE,CAAC+a,KAAH,GAAW/a,EAAE,CAACsiD,QAAH,CAAYd,YAAZ,EAA0B36C,OAA1B,CAAX;MACA7G,EAAE,CAACy/C,UAAH,GAAgBz/C,EAAE,CAACyiD,aAAH,CAAiBjB,YAAjB,EAA+B36C,OAA/B,CAAhB;MACA7G,EAAE,CAAC8+C,IAAH,GAAU9+C,EAAE,CAAC0iD,OAAH,CAAWlB,YAAX,EAAyB36C,OAAzB,CAAV;MACA7G,EAAE,CAAC0/C,SAAH,GAAe1/C,EAAE,CAAC+iD,YAAH,CAAgBvB,YAAhB,EAA8B36C,OAA9B,CAAf;MACA7G,EAAE,CAAC++C,MAAH,GAAY/+C,EAAE,CAACgjD,SAAH,CAAaxB,YAAb,EAA2B36C,OAA3B,CAAZ;MACA,MAAMU,IAAI,GAAGvH,EAAE,CAAC6hD,KAAH,GAAWhD,cAAc,CAAC7+C,EAAD,EAAK6G,OAAL,CAAtC;MACA,MAAM28C,eAAe,GAAGr+C,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkB0d,QAAlB,EAA4B3d,IAA5B,CAAxB;MACA,MAAM25C,SAAS,GAAGL,kBAAkB,CAAC7gD,EAAE,CAACmG,MAAJ,EAAYU,OAAZ,EAAqB28C,eAArB,CAApC;MACA,MAAMC,eAAe,GAAGxC,kBAAkB,CAACp6C,OAAD,EAAU28C,eAAV,EAA2BtC,SAA3B,EAAsClhD,EAAE,CAACmG,MAAzC,CAA1C;MACAnG,EAAE,CAACsgD,MAAH,GAAYY,SAAS,CAACZ,MAAtB;MACAtgD,EAAE,CAAC2gD,MAAH,GAAYO,SAAS,CAACP,MAAtB;MACAh7C,UAAU,GAAG;QACXg8C,OAAO,EAAE,CADE;QAEXzrD,CAAC,EAAEutD,eAAe,CAACvtD,CAFR;QAGXE,CAAC,EAAEqtD,eAAe,CAACrtD,CAHR;QAIXsiB,KAAK,EAAEnR,IAAI,CAACmR,KAJD;QAKXD,MAAM,EAAElR,IAAI,CAACkR,MALF;QAMXwpC,MAAM,EAAE/8B,QAAQ,CAAChvB,CANN;QAOXgsD,MAAM,EAAEh9B,QAAQ,CAAC9uB;MAPN,CAAb;IASD;;IACD4J,EAAE,CAAC+hD,aAAH,GAAmBP,YAAnB;IACAxhD,EAAE,CAACsN,QAAH,GAAcvO,SAAd;;IACA,IAAI4G,UAAJ,EAAgB;MACd3F,EAAE,CAACkT,kBAAH,GAAwB5O,MAAxB,CAA+BtE,EAA/B,EAAmC2F,UAAnC;IACD;;IACD,IAAI+b,OAAO,IAAI7a,OAAO,CAAC68C,QAAvB,EAAiC;MAC/B78C,OAAO,CAAC68C,QAAR,CAAiBzjD,IAAjB,CAAsBD,EAAtB,EAA0B;QAACf,KAAK,EAAEe,EAAE,CAACmG,MAAX;QAAmB2U,OAAO,EAAE9a,EAA5B;QAAgC0sC;MAAhC,CAA1B;IACD;EACF;;EACDiX,SAAS,CAACC,YAAD,EAAej3C,GAAf,EAAoBpF,IAApB,EAA0BV,OAA1B,EAAmC;IAC1C,MAAMg9C,aAAa,GAAG,KAAKC,gBAAL,CAAsBF,YAAtB,EAAoCr8C,IAApC,EAA0CV,OAA1C,CAAtB;IACA8F,GAAG,CAACiyB,MAAJ,CAAWilB,aAAa,CAACpnB,EAAzB,EAA6BonB,aAAa,CAACnnB,EAA3C;IACA/vB,GAAG,CAACiyB,MAAJ,CAAWilB,aAAa,CAAClnB,EAAzB,EAA6BknB,aAAa,CAACjnB,EAA3C;IACAjwB,GAAG,CAACiyB,MAAJ,CAAWilB,aAAa,CAACE,EAAzB,EAA6BF,aAAa,CAACG,EAA3C;EACD;;EACDF,gBAAgB,CAACF,YAAD,EAAer8C,IAAf,EAAqBV,OAArB,EAA8B;IAC5C,MAAM;MAACy5C,MAAD;MAASK;IAAT,IAAmB,IAAzB;IACA,MAAM;MAACQ,YAAD;MAAeX;IAAf,IAA4B35C,OAAlC;IACA,MAAM;MAAC3Q,CAAC,EAAE+tD,GAAJ;MAAS7tD,CAAC,EAAE8tD;IAAZ,IAAmBN,YAAzB;IACA,MAAM;MAAClrC,KAAD;MAAQD;IAAR,IAAkBlR,IAAxB;IACA,IAAIk1B,EAAJ,EAAQE,EAAR,EAAYonB,EAAZ,EAAgBrnB,EAAhB,EAAoBE,EAApB,EAAwBonB,EAAxB;;IACA,IAAIrD,MAAM,KAAK,QAAf,EAAyB;MACvB/jB,EAAE,GAAGsnB,GAAG,GAAIzrC,MAAM,GAAG,CAArB;;MACA,IAAI6nC,MAAM,KAAK,MAAf,EAAuB;QACrB7jB,EAAE,GAAGwnB,GAAL;QACAtnB,EAAE,GAAGF,EAAE,GAAG+jB,SAAV;QACA9jB,EAAE,GAAGE,EAAE,GAAG4jB,SAAV;QACAwD,EAAE,GAAGpnB,EAAE,GAAG4jB,SAAV;MACD,CALD,MAKO;QACL/jB,EAAE,GAAGwnB,GAAG,GAAGvrC,KAAX;QACAikB,EAAE,GAAGF,EAAE,GAAG+jB,SAAV;QACA9jB,EAAE,GAAGE,EAAE,GAAG4jB,SAAV;QACAwD,EAAE,GAAGpnB,EAAE,GAAG4jB,SAAV;MACD;;MACDuD,EAAE,GAAGtnB,EAAL;IACD,CAdD,MAcO;MACL,IAAI6jB,MAAM,KAAK,MAAf,EAAuB;QACrB3jB,EAAE,GAAGsnB,GAAG,GAAG9C,YAAN,GAAsBX,SAA3B;MACD,CAFD,MAEO,IAAIF,MAAM,KAAK,OAAf,EAAwB;QAC7B3jB,EAAE,GAAGsnB,GAAG,GAAGvrC,KAAN,GAAcyoC,YAAd,GAA6BX,SAAlC;MACD,CAFM,MAEA;QACL7jB,EAAE,GAAG,KAAKslB,MAAV;MACD;;MACD,IAAItB,MAAM,KAAK,KAAf,EAAsB;QACpBjkB,EAAE,GAAGwnB,GAAL;QACAtnB,EAAE,GAAGF,EAAE,GAAG8jB,SAAV;QACA/jB,EAAE,GAAGE,EAAE,GAAG6jB,SAAV;QACAuD,EAAE,GAAGpnB,EAAE,GAAG6jB,SAAV;MACD,CALD,MAKO;QACL9jB,EAAE,GAAGwnB,GAAG,GAAGzrC,MAAX;QACAmkB,EAAE,GAAGF,EAAE,GAAG8jB,SAAV;QACA/jB,EAAE,GAAGE,EAAE,GAAG6jB,SAAV;QACAuD,EAAE,GAAGpnB,EAAE,GAAG6jB,SAAV;MACD;;MACDwD,EAAE,GAAGtnB,EAAL;IACD;;IACD,OAAO;MAACD,EAAD;MAAKE,EAAL;MAASonB,EAAT;MAAarnB,EAAb;MAAiBE,EAAjB;MAAqBonB;IAArB,CAAP;EACD;;EACD/kB,SAAS,CAACklB,EAAD,EAAKx3C,GAAL,EAAU9F,OAAV,EAAmB;IAC1B,MAAM7G,EAAE,GAAG,IAAX;IACA,MAAM+a,KAAK,GAAG/a,EAAE,CAAC+a,KAAjB;IACA,MAAMta,MAAM,GAAGsa,KAAK,CAACta,MAArB;IACA,IAAIi8C,SAAJ,EAAeiD,YAAf,EAA6BvsD,CAA7B;;IACA,IAAIqN,MAAJ,EAAY;MACV,MAAM86C,SAAS,GAAG5+C,aAAa,CAACkK,OAAO,CAAC20C,GAAT,EAAcx7C,EAAE,CAAC9J,CAAjB,EAAoB8J,EAAE,CAAC0Y,KAAvB,CAA/B;MACAyrC,EAAE,CAACjuD,CAAH,GAAOmrD,WAAW,CAACrhD,EAAD,EAAK6G,OAAO,CAACuuB,UAAb,EAAyBvuB,OAAzB,CAAlB;MACA8F,GAAG,CAACywB,SAAJ,GAAgBme,SAAS,CAACne,SAAV,CAAoBv2B,OAAO,CAACuuB,UAA5B,CAAhB;MACAzoB,GAAG,CAAC4wB,YAAJ,GAAmB,QAAnB;MACAmf,SAAS,GAAG7jD,MAAM,CAACgO,OAAO,CAAC61C,SAAT,CAAlB;MACAiD,YAAY,GAAG94C,OAAO,CAAC84C,YAAvB;MACAhzC,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAACu9C,UAAxB;MACAz3C,GAAG,CAACooB,IAAJ,GAAW2nB,SAAS,CAACzhB,MAArB;;MACA,KAAK7nC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqN,MAAhB,EAAwB,EAAErN,CAA1B,EAA6B;QAC3BuZ,GAAG,CAACyvC,QAAJ,CAAarhC,KAAK,CAAC3nB,CAAD,CAAlB,EAAuBmoD,SAAS,CAACrlD,CAAV,CAAYiuD,EAAE,CAACjuD,CAAf,CAAvB,EAA0CiuD,EAAE,CAAC/tD,CAAH,GAAOsmD,SAAS,CAACznB,UAAV,GAAuB,CAAxE;QACAkvB,EAAE,CAAC/tD,CAAH,IAAQsmD,SAAS,CAACznB,UAAV,GAAuB0qB,YAA/B;;QACA,IAAIvsD,CAAC,GAAG,CAAJ,KAAUqN,MAAd,EAAsB;UACpB0jD,EAAE,CAAC/tD,CAAH,IAAQyQ,OAAO,CAAC+4C,iBAAR,GAA4BD,YAApC;QACD;MACF;IACF;EACF;;EACD0E,aAAa,CAAC13C,GAAD,EAAMw3C,EAAN,EAAU/wD,CAAV,EAAamoD,SAAb,EAAwB10C,OAAxB,EAAiC;IAC5C,MAAM7G,EAAE,GAAG,IAAX;IACA,MAAMmiD,WAAW,GAAGniD,EAAE,CAACmiD,WAAH,CAAe/uD,CAAf,CAApB;IACA,MAAMkwD,eAAe,GAAGtjD,EAAE,CAACoiD,gBAAH,CAAoBhvD,CAApB,CAAxB;IACA,MAAM;MAACmmD,SAAD;MAAYC;IAAZ,IAAwB3yC,OAA9B;IACA,MAAMm4C,QAAQ,GAAGnmD,MAAM,CAACgO,OAAO,CAACm4C,QAAT,CAAvB;IACA,MAAMsF,MAAM,GAAGjD,WAAW,CAACrhD,EAAD,EAAK,MAAL,EAAa6G,OAAb,CAA1B;IACA,MAAM09C,SAAS,GAAGhJ,SAAS,CAACrlD,CAAV,CAAYouD,MAAZ,CAAlB;IACA,MAAME,OAAO,GAAGjL,SAAS,GAAGyF,QAAQ,CAAC/pB,UAArB,GAAkC,CAAC+pB,QAAQ,CAAC/pB,UAAT,GAAsBskB,SAAvB,IAAoC,CAAtE,GAA0E,CAA1F;IACA,MAAMkL,MAAM,GAAGN,EAAE,CAAC/tD,CAAH,GAAOouD,OAAtB;;IACA,IAAI39C,OAAO,CAAC4yC,aAAZ,EAA2B;MACzB,MAAMqC,WAAW,GAAG;QAClBlhC,MAAM,EAAEhb,IAAI,CAACC,GAAL,CAAS25C,QAAT,EAAmBD,SAAnB,IAAgC,CADtB;QAElB9H,UAAU,EAAE6R,eAAe,CAAC7R,UAFV;QAGlBx2B,QAAQ,EAAEqoC,eAAe,CAACroC,QAHR;QAIlBuD,WAAW,EAAE;MAJK,CAApB;MAMA,MAAMP,OAAO,GAAGs9B,SAAS,CAACW,UAAV,CAAqBqI,SAArB,EAAgC/K,QAAhC,IAA4CA,QAAQ,GAAG,CAAvE;MACA,MAAMt7B,OAAO,GAAGumC,MAAM,GAAGlL,SAAS,GAAG,CAArC;MACA5sC,GAAG,CAAC0S,WAAJ,GAAkBxY,OAAO,CAAC69C,kBAA1B;MACA/3C,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAAC69C,kBAAxB;MACAzoD,SAAS,CAAC0Q,GAAD,EAAMmvC,WAAN,EAAmB79B,OAAnB,EAA4BC,OAA5B,CAAT;MACAvR,GAAG,CAAC0S,WAAJ,GAAkB8iC,WAAW,CAAC7iC,WAA9B;MACA3S,GAAG,CAACwS,SAAJ,GAAgBgjC,WAAW,CAAC/iC,eAA5B;MACAnjB,SAAS,CAAC0Q,GAAD,EAAMmvC,WAAN,EAAmB79B,OAAnB,EAA4BC,OAA5B,CAAT;IACD,CAfD,MAeO;MACLvR,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAAC69C,kBAAxB;MACA/3C,GAAG,CAACsxB,QAAJ,CAAasd,SAAS,CAACW,UAAV,CAAqBqI,SAArB,EAAgC/K,QAAhC,CAAb,EAAwDiL,MAAxD,EAAgEjL,QAAhE,EAA0ED,SAA1E;MACA5sC,GAAG,CAAC4S,SAAJ,GAAgB,CAAhB;MACA5S,GAAG,CAAC0S,WAAJ,GAAkB8iC,WAAW,CAAC7iC,WAA9B;MACA3S,GAAG,CAACwvC,UAAJ,CAAeZ,SAAS,CAACW,UAAV,CAAqBqI,SAArB,EAAgC/K,QAAhC,CAAf,EAA0DiL,MAA1D,EAAkEjL,QAAlE,EAA4ED,SAA5E;MACA5sC,GAAG,CAACwS,SAAJ,GAAgBgjC,WAAW,CAAC/iC,eAA5B;MACAzS,GAAG,CAACsxB,QAAJ,CAAasd,SAAS,CAACW,UAAV,CAAqBX,SAAS,CAACS,KAAV,CAAgBuI,SAAhB,EAA2B,CAA3B,CAArB,EAAoD/K,QAAQ,GAAG,CAA/D,CAAb,EAAgFiL,MAAM,GAAG,CAAzF,EAA4FjL,QAAQ,GAAG,CAAvG,EAA0GD,SAAS,GAAG,CAAtH;IACD;;IACD5sC,GAAG,CAACwS,SAAJ,GAAgBnf,EAAE,CAACqiD,eAAH,CAAmBjvD,CAAnB,CAAhB;EACD;;EACDuxD,QAAQ,CAACR,EAAD,EAAKx3C,GAAL,EAAU9F,OAAV,EAAmB;IACzB,MAAM7G,EAAE,GAAG,IAAX;IACA,MAAM;MAAC8+C;IAAD,IAAS9+C,EAAf;IACA,MAAM;MAAC+/C,WAAD;MAAc6E,SAAd;MAAyB9E,aAAzB;MAAwCvG,SAAxC;MAAmDC;IAAnD,IAA+D3yC,OAArE;IACA,MAAMm4C,QAAQ,GAAGnmD,MAAM,CAACgO,OAAO,CAACm4C,QAAT,CAAvB;IACA,IAAIa,cAAc,GAAGb,QAAQ,CAAC/pB,UAA9B;IACA,IAAI4vB,YAAY,GAAG,CAAnB;IACA,MAAMtJ,SAAS,GAAG5+C,aAAa,CAACkK,OAAO,CAAC20C,GAAT,EAAcx7C,EAAE,CAAC9J,CAAjB,EAAoB8J,EAAE,CAAC0Y,KAAvB,CAA/B;;IACA,MAAMosC,cAAc,GAAG,UAAS7kC,IAAT,EAAe;MACpCtT,GAAG,CAACyvC,QAAJ,CAAan8B,IAAb,EAAmBs7B,SAAS,CAACrlD,CAAV,CAAYiuD,EAAE,CAACjuD,CAAH,GAAO2uD,YAAnB,CAAnB,EAAqDV,EAAE,CAAC/tD,CAAH,GAAOypD,cAAc,GAAG,CAA7E;MACAsE,EAAE,CAAC/tD,CAAH,IAAQypD,cAAc,GAAGE,WAAzB;IACD,CAHD;;IAIA,MAAMgF,uBAAuB,GAAGxJ,SAAS,CAACne,SAAV,CAAoBwnB,SAApB,CAAhC;IACA,IAAItF,QAAJ,EAAc0F,SAAd,EAAyBhwB,KAAzB,EAAgC5hC,CAAhC,EAAmCoB,CAAnC,EAAsCqU,IAAtC,EAA4C4b,IAA5C;IACA9X,GAAG,CAACywB,SAAJ,GAAgBwnB,SAAhB;IACAj4C,GAAG,CAAC4wB,YAAJ,GAAmB,QAAnB;IACA5wB,GAAG,CAACooB,IAAJ,GAAWiqB,QAAQ,CAAC/jB,MAApB;IACAkpB,EAAE,CAACjuD,CAAH,GAAOmrD,WAAW,CAACrhD,EAAD,EAAK+kD,uBAAL,EAA8Bl+C,OAA9B,CAAlB;IACA8F,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAACo+C,SAAxB;IACAluD,IAAI,CAACiJ,EAAE,CAACy/C,UAAJ,EAAgBqF,cAAhB,CAAJ;IACAD,YAAY,GAAG/E,aAAa,IAAIiF,uBAAuB,KAAK,OAA7C,GACXH,SAAS,KAAK,QAAd,GAA0BpL,QAAQ,GAAG,CAAX,GAAe,CAAzC,GAA+CA,QAAQ,GAAG,CAD/C,GAEX,CAFJ;;IAGA,KAAKpmD,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGi2C,IAAI,CAACr+C,MAAxB,EAAgCrN,CAAC,GAAGyV,IAApC,EAA0C,EAAEzV,CAA5C,EAA+C;MAC7CksD,QAAQ,GAAGR,IAAI,CAAC1rD,CAAD,CAAf;MACA4xD,SAAS,GAAGhlD,EAAE,CAACqiD,eAAH,CAAmBjvD,CAAnB,CAAZ;MACAuZ,GAAG,CAACwS,SAAJ,GAAgB6lC,SAAhB;MACAjuD,IAAI,CAACuoD,QAAQ,CAACC,MAAV,EAAkBuF,cAAlB,CAAJ;MACA9vB,KAAK,GAAGsqB,QAAQ,CAACtqB,KAAjB;;MACA,IAAI8qB,aAAa,IAAI9qB,KAAK,CAACv0B,MAA3B,EAAmC;QACjCT,EAAE,CAACqkD,aAAH,CAAiB13C,GAAjB,EAAsBw3C,EAAtB,EAA0B/wD,CAA1B,EAA6BmoD,SAA7B,EAAwC10C,OAAxC;;QACAg5C,cAAc,GAAGjgD,IAAI,CAACmC,GAAL,CAASi9C,QAAQ,CAAC/pB,UAAlB,EAA8BskB,SAA9B,CAAjB;MACD;;MACD,KAAK/kD,CAAC,GAAG,CAAJ,EAAOiwB,IAAI,GAAGuQ,KAAK,CAACv0B,MAAzB,EAAiCjM,CAAC,GAAGiwB,IAArC,EAA2C,EAAEjwB,CAA7C,EAAgD;QAC9CswD,cAAc,CAAC9vB,KAAK,CAACxgC,CAAD,CAAN,CAAd;QACAqrD,cAAc,GAAGb,QAAQ,CAAC/pB,UAA1B;MACD;;MACDl+B,IAAI,CAACuoD,QAAQ,CAACE,KAAV,EAAiBsF,cAAjB,CAAJ;IACD;;IACDD,YAAY,GAAG,CAAf;IACAhF,cAAc,GAAGb,QAAQ,CAAC/pB,UAA1B;IACAl+B,IAAI,CAACiJ,EAAE,CAAC0/C,SAAJ,EAAeoF,cAAf,CAAJ;IACAX,EAAE,CAAC/tD,CAAH,IAAQ2pD,WAAR;EACD;;EACDmF,UAAU,CAACf,EAAD,EAAKx3C,GAAL,EAAU9F,OAAV,EAAmB;IAC3B,MAAM7G,EAAE,GAAG,IAAX;IACA,MAAM++C,MAAM,GAAG/+C,EAAE,CAAC++C,MAAlB;IACA,MAAMt+C,MAAM,GAAGs+C,MAAM,CAACt+C,MAAtB;IACA,IAAIw+C,UAAJ,EAAgB7rD,CAAhB;;IACA,IAAIqN,MAAJ,EAAY;MACV,MAAM86C,SAAS,GAAG5+C,aAAa,CAACkK,OAAO,CAAC20C,GAAT,EAAcx7C,EAAE,CAAC9J,CAAjB,EAAoB8J,EAAE,CAAC0Y,KAAvB,CAA/B;MACAyrC,EAAE,CAACjuD,CAAH,GAAOmrD,WAAW,CAACrhD,EAAD,EAAK6G,OAAO,CAACs+C,WAAb,EAA0Bt+C,OAA1B,CAAlB;MACAs9C,EAAE,CAAC/tD,CAAH,IAAQyQ,OAAO,CAACm5C,eAAhB;MACArzC,GAAG,CAACywB,SAAJ,GAAgBme,SAAS,CAACne,SAAV,CAAoBv2B,OAAO,CAACs+C,WAA5B,CAAhB;MACAx4C,GAAG,CAAC4wB,YAAJ,GAAmB,QAAnB;MACA0hB,UAAU,GAAGpmD,MAAM,CAACgO,OAAO,CAACo4C,UAAT,CAAnB;MACAtyC,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAACu+C,WAAxB;MACAz4C,GAAG,CAACooB,IAAJ,GAAWkqB,UAAU,CAAChkB,MAAtB;;MACA,KAAK7nC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqN,MAAhB,EAAwB,EAAErN,CAA1B,EAA6B;QAC3BuZ,GAAG,CAACyvC,QAAJ,CAAa2C,MAAM,CAAC3rD,CAAD,CAAnB,EAAwBmoD,SAAS,CAACrlD,CAAV,CAAYiuD,EAAE,CAACjuD,CAAf,CAAxB,EAA2CiuD,EAAE,CAAC/tD,CAAH,GAAO6oD,UAAU,CAAChqB,UAAX,GAAwB,CAA1E;QACAkvB,EAAE,CAAC/tD,CAAH,IAAQ6oD,UAAU,CAAChqB,UAAX,GAAwBpuB,OAAO,CAACo5C,aAAxC;MACD;IACF;EACF;;EACDliB,cAAc,CAAComB,EAAD,EAAKx3C,GAAL,EAAU04C,WAAV,EAAuBx+C,OAAvB,EAAgC;IAC5C,MAAM;MAACy5C,MAAD;MAASK;IAAT,IAAmB,IAAzB;IACA,MAAM;MAACzqD,CAAD;MAAIE;IAAJ,IAAS+tD,EAAf;IACA,MAAM;MAACzrC,KAAD;MAAQD;IAAR,IAAkB4sC,WAAxB;IACA,MAAMzqC,MAAM,GAAG/T,OAAO,CAACs6C,YAAvB;IACAx0C,GAAG,CAACwS,SAAJ,GAAgBtY,OAAO,CAACuY,eAAxB;IACAzS,GAAG,CAAC0S,WAAJ,GAAkBxY,OAAO,CAACyY,WAA1B;IACA3S,GAAG,CAAC4S,SAAJ,GAAgB1Y,OAAO,CAAC2X,WAAxB;IACA7R,GAAG,CAAC+xB,SAAJ;IACA/xB,GAAG,CAACgyB,MAAJ,CAAWzoC,CAAC,GAAG0kB,MAAf,EAAuBxkB,CAAvB;;IACA,IAAIuqD,MAAM,KAAK,KAAf,EAAsB;MACpB,KAAKgD,SAAL,CAAeQ,EAAf,EAAmBx3C,GAAnB,EAAwB04C,WAAxB,EAAqCx+C,OAArC;IACD;;IACD8F,GAAG,CAACiyB,MAAJ,CAAW1oC,CAAC,GAAGwiB,KAAJ,GAAYkC,MAAvB,EAA+BxkB,CAA/B;IACAuW,GAAG,CAAC24C,gBAAJ,CAAqBpvD,CAAC,GAAGwiB,KAAzB,EAAgCtiB,CAAhC,EAAmCF,CAAC,GAAGwiB,KAAvC,EAA8CtiB,CAAC,GAAGwkB,MAAlD;;IACA,IAAI+lC,MAAM,KAAK,QAAX,IAAuBL,MAAM,KAAK,OAAtC,EAA+C;MAC7C,KAAKqD,SAAL,CAAeQ,EAAf,EAAmBx3C,GAAnB,EAAwB04C,WAAxB,EAAqCx+C,OAArC;IACD;;IACD8F,GAAG,CAACiyB,MAAJ,CAAW1oC,CAAC,GAAGwiB,KAAf,EAAsBtiB,CAAC,GAAGqiB,MAAJ,GAAamC,MAAnC;IACAjO,GAAG,CAAC24C,gBAAJ,CAAqBpvD,CAAC,GAAGwiB,KAAzB,EAAgCtiB,CAAC,GAAGqiB,MAApC,EAA4CviB,CAAC,GAAGwiB,KAAJ,GAAYkC,MAAxD,EAAgExkB,CAAC,GAAGqiB,MAApE;;IACA,IAAIkoC,MAAM,KAAK,QAAf,EAAyB;MACvB,KAAKgD,SAAL,CAAeQ,EAAf,EAAmBx3C,GAAnB,EAAwB04C,WAAxB,EAAqCx+C,OAArC;IACD;;IACD8F,GAAG,CAACiyB,MAAJ,CAAW1oC,CAAC,GAAG0kB,MAAf,EAAuBxkB,CAAC,GAAGqiB,MAA3B;IACA9L,GAAG,CAAC24C,gBAAJ,CAAqBpvD,CAArB,EAAwBE,CAAC,GAAGqiB,MAA5B,EAAoCviB,CAApC,EAAuCE,CAAC,GAAGqiB,MAAJ,GAAamC,MAApD;;IACA,IAAI+lC,MAAM,KAAK,QAAX,IAAuBL,MAAM,KAAK,MAAtC,EAA8C;MAC5C,KAAKqD,SAAL,CAAeQ,EAAf,EAAmBx3C,GAAnB,EAAwB04C,WAAxB,EAAqCx+C,OAArC;IACD;;IACD8F,GAAG,CAACiyB,MAAJ,CAAW1oC,CAAX,EAAcE,CAAC,GAAGwkB,MAAlB;IACAjO,GAAG,CAAC24C,gBAAJ,CAAqBpvD,CAArB,EAAwBE,CAAxB,EAA2BF,CAAC,GAAG0kB,MAA/B,EAAuCxkB,CAAvC;IACAuW,GAAG,CAAC6gC,SAAJ;IACA7gC,GAAG,CAACsW,IAAJ;;IACA,IAAIpc,OAAO,CAAC2X,WAAR,GAAsB,CAA1B,EAA6B;MAC3B7R,GAAG,CAACkyB,MAAJ;IACD;EACF;;EACD0mB,sBAAsB,CAAC1+C,OAAD,EAAU;IAC9B,MAAM7G,EAAE,GAAG,IAAX;IACA,MAAMf,KAAK,GAAGe,EAAE,CAACmG,MAAjB;IACA,MAAMjH,KAAK,GAAGc,EAAE,CAACkH,WAAjB;IACA,MAAMs+C,KAAK,GAAGtmD,KAAK,IAAIA,KAAK,CAAChJ,CAA7B;IACA,MAAMuvD,KAAK,GAAGvmD,KAAK,IAAIA,KAAK,CAAC9I,CAA7B;;IACA,IAAIovD,KAAK,IAAIC,KAAb,EAAoB;MAClB,MAAMvgC,QAAQ,GAAG+4B,WAAW,CAACp3C,OAAO,CAACqe,QAAT,CAAX,CAA8BjlB,IAA9B,CAAmCD,EAAnC,EAAuCA,EAAE,CAACY,OAA1C,EAAmDZ,EAAE,CAAC4hD,cAAtD,CAAjB;;MACA,IAAI,CAAC18B,QAAL,EAAe;QACb;MACD;;MACD,MAAM3d,IAAI,GAAGvH,EAAE,CAAC6hD,KAAH,GAAWhD,cAAc,CAAC7+C,EAAD,EAAK6G,OAAL,CAAtC;MACA,MAAM28C,eAAe,GAAGr+C,MAAM,CAACqC,MAAP,CAAc,EAAd,EAAkB0d,QAAlB,EAA4BllB,EAAE,CAAC6hD,KAA/B,CAAxB;MACA,MAAMX,SAAS,GAAGL,kBAAkB,CAAC5hD,KAAD,EAAQ4H,OAAR,EAAiB28C,eAAjB,CAApC;MACA,MAAM/oC,KAAK,GAAGwmC,kBAAkB,CAACp6C,OAAD,EAAU28C,eAAV,EAA2BtC,SAA3B,EAAsCjiD,KAAtC,CAAhC;;MACA,IAAIumD,KAAK,CAACrhD,GAAN,KAAcsW,KAAK,CAACvkB,CAApB,IAAyBuvD,KAAK,CAACthD,GAAN,KAAcsW,KAAK,CAACrkB,CAAjD,EAAoD;QAClD4J,EAAE,CAACsgD,MAAH,GAAYY,SAAS,CAACZ,MAAtB;QACAtgD,EAAE,CAAC2gD,MAAH,GAAYO,SAAS,CAACP,MAAtB;QACA3gD,EAAE,CAAC0Y,KAAH,GAAWnR,IAAI,CAACmR,KAAhB;QACA1Y,EAAE,CAACyY,MAAH,GAAYlR,IAAI,CAACkR,MAAjB;QACAzY,EAAE,CAACiiD,MAAH,GAAY/8B,QAAQ,CAAChvB,CAArB;QACA8J,EAAE,CAACkiD,MAAH,GAAYh9B,QAAQ,CAAC9uB,CAArB;;QACA4J,EAAE,CAACkT,kBAAH,GAAwB5O,MAAxB,CAA+BtE,EAA/B,EAAmCya,KAAnC;MACD;IACF;EACF;;EACD/Z,IAAI,CAACiM,GAAD,EAAM;IACR,MAAM3M,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAH,CAAWk1B,UAAX,CAAsB/7B,EAAE,CAAC6P,UAAH,EAAtB,CAAhB;IACA,IAAI8xC,OAAO,GAAG3hD,EAAE,CAAC2hD,OAAjB;;IACA,IAAI,CAACA,OAAL,EAAc;MACZ;IACD;;IACD3hD,EAAE,CAACulD,sBAAH,CAA0B1+C,OAA1B;;IACA,MAAMw+C,WAAW,GAAG;MAClB3sC,KAAK,EAAE1Y,EAAE,CAAC0Y,KADQ;MAElBD,MAAM,EAAEzY,EAAE,CAACyY;IAFO,CAApB;IAIA,MAAM0rC,EAAE,GAAG;MACTjuD,CAAC,EAAE8J,EAAE,CAAC9J,CADG;MAETE,CAAC,EAAE4J,EAAE,CAAC5J;IAFG,CAAX;IAIAurD,OAAO,GAAG/hD,IAAI,CAACgW,GAAL,CAAS+rC,OAAT,IAAoB,IAApB,GAA2B,CAA3B,GAA+BA,OAAzC;IACA,MAAMz3B,OAAO,GAAGrzB,SAAS,CAACgQ,OAAO,CAACqjB,OAAT,CAAzB;IACA,MAAMw7B,iBAAiB,GAAG1lD,EAAE,CAAC+a,KAAH,CAASta,MAAT,IAAmBT,EAAE,CAACy/C,UAAH,CAAch/C,MAAjC,IAA2CT,EAAE,CAAC8+C,IAAH,CAAQr+C,MAAnD,IAA6DT,EAAE,CAAC0/C,SAAH,CAAaj/C,MAA1E,IAAoFT,EAAE,CAAC++C,MAAH,CAAUt+C,MAAxH;;IACA,IAAIoG,OAAO,CAAC2rB,OAAR,IAAmBkzB,iBAAvB,EAA0C;MACxC/4C,GAAG,CAACqxB,IAAJ;MACArxB,GAAG,CAACg5C,WAAJ,GAAkBhE,OAAlB;MACA3hD,EAAE,CAAC+9B,cAAH,CAAkBomB,EAAlB,EAAsBx3C,GAAtB,EAA2B04C,WAA3B,EAAwCx+C,OAAxC;MACAhK,qBAAqB,CAAC8P,GAAD,EAAM9F,OAAO,CAACy1C,aAAd,CAArB;MACA6H,EAAE,CAAC/tD,CAAH,IAAQ8zB,OAAO,CAAC9hB,GAAhB;MACApI,EAAE,CAACi/B,SAAH,CAAaklB,EAAb,EAAiBx3C,GAAjB,EAAsB9F,OAAtB;MACA7G,EAAE,CAAC2kD,QAAH,CAAYR,EAAZ,EAAgBx3C,GAAhB,EAAqB9F,OAArB;MACA7G,EAAE,CAACklD,UAAH,CAAcf,EAAd,EAAkBx3C,GAAlB,EAAuB9F,OAAvB;MACA5J,oBAAoB,CAAC0P,GAAD,EAAM9F,OAAO,CAACy1C,aAAd,CAApB;MACA3vC,GAAG,CAACuxB,OAAJ;IACD;EACF;;EACDmO,iBAAiB,GAAG;IAClB,OAAO,KAAKzrC,OAAL,IAAgB,EAAvB;EACD;;EACD0rC,iBAAiB,CAACC,cAAD,EAAiB4R,aAAjB,EAAgC;IAC/C,MAAMn+C,EAAE,GAAG,IAAX;IACA,MAAMwsC,UAAU,GAAGxsC,EAAE,CAACY,OAAtB;IACA,MAAMyD,MAAM,GAAGkoC,cAAc,CAACvtB,GAAf,CAAmB,SAA2B;MAAA,IAA1B;QAAC5V,YAAD;QAAeN;MAAf,CAA0B;;MAC3D,MAAMa,IAAI,GAAG3J,EAAE,CAACmG,MAAH,CAAUyI,cAAV,CAAyBxF,YAAzB,CAAb;;MACA,IAAI,CAACO,IAAL,EAAW;QACT,MAAM,IAAI2Z,KAAJ,CAAU,oCAAoCla,YAA9C,CAAN;MACD;;MACD,OAAO;QACLA,YADK;QAEL4C,OAAO,EAAErC,IAAI,CAACJ,IAAL,CAAUT,KAAV,CAFJ;QAGLA;MAHK,CAAP;IAKD,CAVc,CAAf;IAWA,MAAM4Y,OAAO,GAAG,CAAC7mB,cAAc,CAAC2xC,UAAD,EAAanoC,MAAb,CAA/B;;IACA,MAAMuhD,eAAe,GAAG5lD,EAAE,CAAC6lD,gBAAH,CAAoBxhD,MAApB,EAA4B85C,aAA5B,CAAxB;;IACA,IAAIz8B,OAAO,IAAIkkC,eAAf,EAAgC;MAC9B5lD,EAAE,CAACY,OAAH,GAAayD,MAAb;MACArE,EAAE,CAAC4hD,cAAH,GAAoBzD,aAApB;MACAn+C,EAAE,CAACsE,MAAH,CAAU,IAAV;IACD;EACF;;EACD04C,WAAW,CAAChqD,CAAD,EAAI05C,MAAJ,EAAY;IACrB,MAAM1sC,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAM2lC,UAAU,GAAGxsC,EAAE,CAACY,OAAH,IAAc,EAAjC;IACA,IAAI8gB,OAAO,GAAG,KAAd;IACA,IAAIrd,MAAM,GAAG,EAAb;;IACA,IAAIrR,CAAC,CAACoM,IAAF,KAAW,UAAf,EAA2B;MACzBiF,MAAM,GAAGrE,EAAE,CAACmG,MAAH,CAAUqlC,yBAAV,CAAoCx4C,CAApC,EAAuC6T,OAAO,CAACsC,IAA/C,EAAqDtC,OAArD,EAA8D6lC,MAA9D,CAAT;;MACA,IAAI7lC,OAAO,CAACkB,OAAZ,EAAqB;QACnB1D,MAAM,CAAC0D,OAAP;MACD;IACF;;IACD,MAAM69C,eAAe,GAAG5lD,EAAE,CAAC6lD,gBAAH,CAAoBxhD,MAApB,EAA4BrR,CAA5B,CAAxB;;IACA0uB,OAAO,GAAGgrB,MAAM,IAAI,CAAC7xC,cAAc,CAACwJ,MAAD,EAASmoC,UAAT,CAAzB,IAAiDoZ,eAA3D;;IACA,IAAIlkC,OAAJ,EAAa;MACX1hB,EAAE,CAACY,OAAH,GAAayD,MAAb;;MACA,IAAIwC,OAAO,CAAC2rB,OAAR,IAAmB3rB,OAAO,CAAC68C,QAA/B,EAAyC;QACvC1jD,EAAE,CAAC4hD,cAAH,GAAoB;UAClB1rD,CAAC,EAAElD,CAAC,CAACkD,CADa;UAElBE,CAAC,EAAEpD,CAAC,CAACoD;QAFa,CAApB;QAIA4J,EAAE,CAACsE,MAAH,CAAU,IAAV,EAAgBooC,MAAhB;MACD;IACF;;IACD,OAAOhrB,OAAP;EACD;;EACDmkC,gBAAgB,CAACxhD,MAAD,EAASrR,CAAT,EAAY;IAC1B,MAAMgN,EAAE,GAAG,IAAX;IACA,MAAMklB,QAAQ,GAAG+4B,WAAW,CAACj+C,EAAE,CAAC6G,OAAH,CAAWqe,QAAZ,CAAX,CAAiCjlB,IAAjC,CAAsCD,EAAtC,EAA0CqE,MAA1C,EAAkDrR,CAAlD,CAAjB;IACA,OAAOgN,EAAE,CAACiiD,MAAH,KAAc/8B,QAAQ,CAAChvB,CAAvB,IAA4B8J,EAAE,CAACkiD,MAAH,KAAch9B,QAAQ,CAAC9uB,CAA1D;EACD;;AApf2B;;AAsf9BsrD,OAAO,CAACzD,WAAR,GAAsBA,WAAtB;AACA,IAAI6H,cAAc,GAAG;EACnB97C,EAAE,EAAE,SADe;EAEnBszC,QAAQ,EAAEoE,OAFS;EAGnBzD,WAHmB;;EAInB8H,SAAS,CAAC9mD,KAAD,EAAQ85C,KAAR,EAAelyC,OAAf,EAAwB;IAC/B,IAAIA,OAAJ,EAAa;MACX5H,KAAK,CAAC6b,OAAN,GAAgB,IAAI4mC,OAAJ,CAAY;QAACv7C,MAAM,EAAElH,KAAT;QAAgB4H;MAAhB,CAAZ,CAAhB;IACD;EACF,CARkB;;EASnBmwB,YAAY,CAAC/3B,KAAD,EAAQ85C,KAAR,EAAelyC,OAAf,EAAwB;IAClC,IAAI5H,KAAK,CAAC6b,OAAV,EAAmB;MACjB7b,KAAK,CAAC6b,OAAN,CAAcvN,UAAd,CAAyB1G,OAAzB;IACD;EACF,CAbkB;;EAcnBkI,KAAK,CAAC9P,KAAD,EAAQ85C,KAAR,EAAelyC,OAAf,EAAwB;IAC3B,IAAI5H,KAAK,CAAC6b,OAAV,EAAmB;MACjB7b,KAAK,CAAC6b,OAAN,CAAcvN,UAAd,CAAyB1G,OAAzB;IACD;EACF,CAlBkB;;EAmBnBm/C,SAAS,CAAC/mD,KAAD,EAAQ;IACf,MAAM6b,OAAO,GAAG7b,KAAK,CAAC6b,OAAtB;IACA,MAAMgU,IAAI,GAAG;MACXhU;IADW,CAAb;;IAGA,IAAI7b,KAAK,CAAC25B,aAAN,CAAoB,mBAApB,EAAyC9J,IAAzC,MAAmD,KAAvD,EAA8D;MAC5D;IACD;;IACD,IAAIhU,OAAJ,EAAa;MACXA,OAAO,CAACpa,IAAR,CAAazB,KAAK,CAAC0N,GAAnB;IACD;;IACD1N,KAAK,CAAC25B,aAAN,CAAoB,kBAApB,EAAwC9J,IAAxC;EACD,CA/BkB;;EAgCnByuB,UAAU,CAACt+C,KAAD,EAAQ6vB,IAAR,EAAc;IACtB,IAAI7vB,KAAK,CAAC6b,OAAV,EAAmB;MACjB,MAAM+K,gBAAgB,GAAGiJ,IAAI,CAAC4d,MAA9B;;MACA,IAAIztC,KAAK,CAAC6b,OAAN,CAAckiC,WAAd,CAA0BluB,IAAI,CAACvtB,KAA/B,EAAsCskB,gBAAtC,CAAJ,EAA6D;QAC3DiJ,IAAI,CAACpN,OAAL,GAAe,IAAf;MACD;IACF;EACF,CAvCkB;;EAwCnBjuB,QAAQ,EAAE;IACR++B,OAAO,EAAE,IADD;IAERkxB,QAAQ,EAAE,IAFF;IAGRx+B,QAAQ,EAAE,SAHF;IAIR9F,eAAe,EAAE,iBAJT;IAKRglC,UAAU,EAAE,MALJ;IAMR1H,SAAS,EAAE;MACTz9B,KAAK,EAAE;IADE,CANH;IASR0gC,YAAY,EAAE,CATN;IAURC,iBAAiB,EAAE,CAVX;IAWRxqB,UAAU,EAAE,MAXJ;IAYR6vB,SAAS,EAAE,MAZH;IAaRlF,WAAW,EAAE,CAbL;IAcRf,QAAQ,EAAE,EAdF;IAgBR4F,SAAS,EAAE,MAhBH;IAiBRQ,WAAW,EAAE,MAjBL;IAkBRnF,aAAa,EAAE,CAlBP;IAmBRD,eAAe,EAAE,CAnBT;IAoBRf,UAAU,EAAE;MACVhgC,KAAK,EAAE;IADG,CApBJ;IAuBRkmC,WAAW,EAAE,MAvBL;IAwBRj7B,OAAO,EAAE,CAxBD;IAyBRu2B,YAAY,EAAE,CAzBN;IA0BRD,SAAS,EAAE,CA1BH;IA2BRW,YAAY,EAAE,CA3BN;IA4BR5H,SAAS,EAAE,CAAC5sC,GAAD,EAAM7E,IAAN,KAAeA,IAAI,CAACk3C,QAAL,CAAcz3C,IA5BhC;IA6BRiyC,QAAQ,EAAE,CAAC7sC,GAAD,EAAM7E,IAAN,KAAeA,IAAI,CAACk3C,QAAL,CAAcz3C,IA7B/B;IA8BRm9C,kBAAkB,EAAE,MA9BZ;IA+BR5E,aAAa,EAAE,IA/BP;IAgCRxgC,WAAW,EAAE,eAhCL;IAiCRd,WAAW,EAAE,CAjCL;IAkCRnZ,SAAS,EAAE;MACT7F,QAAQ,EAAE,GADD;MAETiE,MAAM,EAAE;IAFC,CAlCH;IAsCRqC,UAAU,EAAE;MACVd,OAAO,EAAE;QACP5F,IAAI,EAAE,QADC;QAEPuG,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,EAAoB,QAApB,EAA8B,QAA9B,EAAwC,QAAxC;MAFL,CADC;MAKVg8C,OAAO,EAAE;QACPl+C,MAAM,EAAE,QADD;QAEPjE,QAAQ,EAAE;MAFH;IALC,CAtCJ;IAgDRH,SAAS,EAAE;MACTkjD,WAAW,EAAEplD,IADJ;;MAET4d,KAAK,CAACymC,YAAD,EAAe;QAClB,IAAIA,YAAY,CAAC/gD,MAAb,GAAsB,CAA1B,EAA6B;UAC3B,MAAME,IAAI,GAAG6gD,YAAY,CAAC,CAAD,CAAzB;UACA,MAAMhxC,MAAM,GAAG7P,IAAI,CAAC1B,KAAL,CAAWsK,IAAX,CAAgBiH,MAA/B;UACA,MAAMy1C,UAAU,GAAGz1C,MAAM,GAAGA,MAAM,CAAC/P,MAAV,GAAmB,CAA5C;;UACA,IAAI,QAAQ,KAAKoG,OAAb,IAAwB,KAAKA,OAAL,CAAasC,IAAb,KAAsB,SAAlD,EAA6D;YAC3D,OAAOxI,IAAI,CAACmL,OAAL,CAAa8F,KAAb,IAAsB,EAA7B;UACD,CAFD,MAEO,IAAIjR,IAAI,CAACiR,KAAT,EAAgB;YACrB,OAAOjR,IAAI,CAACiR,KAAZ;UACD,CAFM,MAEA,IAAIq0C,UAAU,GAAG,CAAb,IAAkBtlD,IAAI,CAACsL,SAAL,GAAiBg6C,UAAvC,EAAmD;YACxD,OAAOz1C,MAAM,CAAC7P,IAAI,CAACsL,SAAN,CAAb;UACD;QACF;;QACD,OAAO,EAAP;MACD,CAhBQ;;MAiBTu2C,UAAU,EAAErlD,IAjBH;MAkBTsiD,UAAU,EAAEtiD,IAlBH;MAmBT0lD,WAAW,EAAE1lD,IAnBJ;;MAoBTyU,KAAK,CAACgO,WAAD,EAAc;QACjB,IAAI,QAAQ,KAAK/Y,OAAb,IAAwB,KAAKA,OAAL,CAAasC,IAAb,KAAsB,SAAlD,EAA6D;UAC3D,OAAOyW,WAAW,CAAChO,KAAZ,GAAoB,IAApB,GAA2BgO,WAAW,CAACE,cAAvC,IAAyDF,WAAW,CAACE,cAA5E;QACD;;QACD,IAAIlO,KAAK,GAAGgO,WAAW,CAAC9T,OAAZ,CAAoB8F,KAApB,IAA6B,EAAzC;;QACA,IAAIA,KAAJ,EAAW;UACTA,KAAK,IAAI,IAAT;QACD;;QACD,MAAMtK,KAAK,GAAGsY,WAAW,CAACE,cAA1B;;QACA,IAAI,CAACrrB,aAAa,CAAC6S,KAAD,CAAlB,EAA2B;UACzBsK,KAAK,IAAItK,KAAT;QACD;;QACD,OAAOsK,KAAP;MACD,CAjCQ;;MAkCTyxC,UAAU,CAACzjC,WAAD,EAAc;QACtB,MAAMjW,IAAI,GAAGiW,WAAW,CAAC3gB,KAAZ,CAAkB2P,cAAlB,CAAiCgR,WAAW,CAACxW,YAA7C,CAAb;QACA,MAAMvC,OAAO,GAAG8C,IAAI,CAACkB,UAAL,CAAgBsH,QAAhB,CAAyByN,WAAW,CAAC3T,SAArC,CAAhB;QACA,OAAO;UACLqT,WAAW,EAAEzY,OAAO,CAACyY,WADhB;UAELF,eAAe,EAAEvY,OAAO,CAACuY;QAFpB,CAAP;MAID,CAzCQ;;MA0CTmkC,cAAc,GAAG;QACf,OAAO,KAAK18C,OAAL,CAAao+C,SAApB;MACD,CA5CQ;;MA6CT3B,eAAe,CAAC1jC,WAAD,EAAc;QAC3B,MAAMjW,IAAI,GAAGiW,WAAW,CAAC3gB,KAAZ,CAAkB2P,cAAlB,CAAiCgR,WAAW,CAACxW,YAA7C,CAAb;QACA,MAAMvC,OAAO,GAAG8C,IAAI,CAACkB,UAAL,CAAgBsH,QAAhB,CAAyByN,WAAW,CAAC3T,SAArC,CAAhB;QACA,OAAO;UACLwlC,UAAU,EAAE5qC,OAAO,CAAC4qC,UADf;UAELx2B,QAAQ,EAAEpU,OAAO,CAACoU;QAFb,CAAP;MAID,CApDQ;;MAqDT6nC,UAAU,EAAE3lD,IArDH;MAsDTuiD,SAAS,EAAEviD,IAtDF;MAuDT8lD,YAAY,EAAE9lD,IAvDL;MAwDT4hD,MAAM,EAAE5hD,IAxDC;MAyDT+lD,WAAW,EAAE/lD;IAzDJ;EAhDH,CAxCS;EAoJnB0yB,aAAa,EAAE;IACbmvB,QAAQ,EAAE,MADG;IAEbC,UAAU,EAAE,MAFC;IAGbvC,SAAS,EAAE;EAHE,CApJI;EAyJnBjjD,WAAW,EAAE;IACXgM,WAAW,EAAGC,IAAD,IAAUA,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,UAA9B,IAA4CA,IAAI,KAAK,UADjE;IAEXF,UAAU,EAAE,KAFD;IAGXnG,SAAS,EAAE;MACToG,WAAW,EAAE,KADJ;MAETD,UAAU,EAAE;IAFH,CAHA;IAOXH,SAAS,EAAE;MACTE,SAAS,EAAE;IADF,CAPA;IAUXO,UAAU,EAAE;MACVP,SAAS,EAAE;IADD;EAVD,CAzJM;EAuKnBogC,sBAAsB,EAAE,CAAC,aAAD;AAvKL,CAArB;AA0KA,IAAI9qB,OAAO,GAAG,aAAa1V,MAAM,CAAC8N,MAAP,CAAc;EACzCmQ,SAAS,EAAE,IAD8B;EAEzC8iC,UAAU,EAAE5Q,iBAF6B;EAGzC6Q,MAAM,EAAEtN,aAHiC;EAIzCe,MAAM,EAAEyD,aAJiC;EAKzCI,KAAK,EAAEO,YALkC;EAMzC0D,OAAO,EAAEoE;AANgC,CAAd,CAA3B;;AASA,MAAMM,WAAW,GAAG,CAAC51C,MAAD,EAAStE,GAAT,EAAcpD,KAAd,KAAwB,OAAOoD,GAAP,KAAe,QAAf,GACxCsE,MAAM,CAAC/O,IAAP,CAAYyK,GAAZ,IAAmB,CADqB,GAExC4M,KAAK,CAAC5M,GAAD,CAAL,GAAa,IAAb,GAAoBpD,KAFxB;;AAGA,SAASu9C,cAAT,CAAwB71C,MAAxB,EAAgCtE,GAAhC,EAAqCpD,KAArC,EAA4C;EAC1C,MAAM6pB,KAAK,GAAGniB,MAAM,CAACuI,OAAP,CAAe7M,GAAf,CAAd;;EACA,IAAIymB,KAAK,KAAK,CAAC,CAAf,EAAkB;IAChB,OAAOyzB,WAAW,CAAC51C,MAAD,EAAStE,GAAT,EAAcpD,KAAd,CAAlB;EACD;;EACD,MAAM8P,IAAI,GAAGpI,MAAM,CAAC81C,WAAP,CAAmBp6C,GAAnB,CAAb;EACA,OAAOymB,KAAK,KAAK/Z,IAAV,GAAiB9P,KAAjB,GAAyB6pB,KAAhC;AACD;;AACD,MAAM0B,UAAU,GAAG,CAACvrB,KAAD,EAAQ/G,GAAR,KAAgB+G,KAAK,KAAK,IAAV,GAAiB,IAAjB,GAAwB3S,WAAW,CAACyJ,IAAI,CAACozB,KAAL,CAAWlqB,KAAX,CAAD,EAAoB,CAApB,EAAuB/G,GAAvB,CAAtE;;AACA,MAAMwkD,aAAN,SAA4B/wB,KAA5B,CAAkC;EAChC/2B,WAAW,CAAC0E,GAAD,EAAM;IACf,MAAMA,GAAN;IACA,KAAKqjD,WAAL,GAAmBznD,SAAnB;IACA,KAAK0nD,WAAL,GAAmB,CAAnB;EACD;;EACD12C,KAAK,CAAC7D,GAAD,EAAMpD,KAAN,EAAa;IAChB,IAAIrU,aAAa,CAACyX,GAAD,CAAjB,EAAwB;MACtB,OAAO,IAAP;IACD;;IACD,MAAMsE,MAAM,GAAG,KAAKC,SAAL,EAAf;IACA3H,KAAK,GAAG49C,QAAQ,CAAC59C,KAAD,CAAR,IAAmB0H,MAAM,CAAC1H,KAAD,CAAN,KAAkBoD,GAArC,GAA2CpD,KAA3C,GACJu9C,cAAc,CAAC71C,MAAD,EAAStE,GAAT,EAAcvY,cAAc,CAACmV,KAAD,EAAQoD,GAAR,CAA5B,CADlB;IAEA,OAAOmoB,UAAU,CAACvrB,KAAD,EAAQ0H,MAAM,CAAC/P,MAAP,GAAgB,CAAxB,CAAjB;EACD;;EACD82B,mBAAmB,GAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAX;IACA,MAAM;MAACkK,UAAD;MAAaC;IAAb,IAA2BnK,EAAE,CAACiK,aAAH,EAAjC;IACA,IAAI;MAACpK,GAAD;MAAMkC;IAAN,IAAa/B,EAAE,CAACmR,SAAH,CAAa,IAAb,CAAjB;;IACA,IAAInR,EAAE,CAAC6G,OAAH,CAAW8pB,MAAX,KAAsB,OAA1B,EAAmC;MACjC,IAAI,CAACzmB,UAAL,EAAiB;QACfrK,GAAG,GAAG,CAAN;MACD;;MACD,IAAI,CAACsK,UAAL,EAAiB;QACfpI,GAAG,GAAG/B,EAAE,CAACyQ,SAAH,GAAehQ,MAAf,GAAwB,CAA9B;MACD;IACF;;IACDT,EAAE,CAACH,GAAH,GAASA,GAAT;IACAG,EAAE,CAAC+B,GAAH,GAASA,GAAT;EACD;;EACD21B,UAAU,GAAG;IACX,MAAM13B,EAAE,GAAG,IAAX;IACA,MAAMH,GAAG,GAAGG,EAAE,CAACH,GAAf;IACA,MAAMkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAf;IACA,MAAMoY,MAAM,GAAGna,EAAE,CAAC6G,OAAH,CAAWsT,MAA1B;IACA,MAAMrE,KAAK,GAAG,EAAd;IACA,IAAItF,MAAM,GAAGxQ,EAAE,CAACyQ,SAAH,EAAb;IACAD,MAAM,GAAI3Q,GAAG,KAAK,CAAR,IAAakC,GAAG,KAAKyO,MAAM,CAAC/P,MAAP,GAAgB,CAAtC,GAA2C+P,MAA3C,GAAoDA,MAAM,CAACuP,KAAP,CAAalgB,GAAb,EAAkBkC,GAAG,GAAG,CAAxB,CAA7D;IACA/B,EAAE,CAACymD,WAAH,GAAiB7mD,IAAI,CAACmC,GAAL,CAASyO,MAAM,CAAC/P,MAAP,IAAiB0Z,MAAM,GAAG,CAAH,GAAO,CAA9B,CAAT,EAA2C,CAA3C,CAAjB;IACAna,EAAE,CAACwmD,WAAH,GAAiBxmD,EAAE,CAACH,GAAH,IAAUsa,MAAM,GAAG,GAAH,GAAS,CAAzB,CAAjB;;IACA,KAAK,IAAI7S,KAAK,GAAGzH,GAAjB,EAAsByH,KAAK,IAAIvF,GAA/B,EAAoCuF,KAAK,EAAzC,EAA6C;MAC3CwO,KAAK,CAACrU,IAAN,CAAW;QAAC6F;MAAD,CAAX;IACD;;IACD,OAAOwO,KAAP;EACD;;EACDjE,gBAAgB,CAACvK,KAAD,EAAQ;IACtB,MAAMtH,EAAE,GAAG,IAAX;IACA,MAAMwQ,MAAM,GAAGxQ,EAAE,CAACyQ,SAAH,EAAf;;IACA,IAAInJ,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGkJ,MAAM,CAAC/P,MAAjC,EAAyC;MACvC,OAAO+P,MAAM,CAAClJ,KAAD,CAAb;IACD;;IACD,OAAOA,KAAP;EACD;;EACDjB,SAAS,GAAG;IACV,MAAMrG,EAAE,GAAG,IAAX;IACA,MAAMqG,SAAN;;IACA,IAAI,CAACrG,EAAE,CAACgY,YAAH,EAAL,EAAwB;MACtBhY,EAAE,CAAC8kB,cAAH,GAAoB,CAAC9kB,EAAE,CAAC8kB,cAAxB;IACD;EACF;;EACDjP,gBAAgB,CAACvO,KAAD,EAAQ;IACtB,MAAMtH,EAAE,GAAG,IAAX;;IACA,IAAI,OAAOsH,KAAP,KAAiB,QAArB,EAA+B;MAC7BA,KAAK,GAAGtH,EAAE,CAAC+P,KAAH,CAASzI,KAAT,CAAR;IACD;;IACD,OAAOA,KAAK,KAAK,IAAV,GAAiB4J,GAAjB,GAAuBlR,EAAE,CAAC0a,kBAAH,CAAsB,CAACpT,KAAK,GAAGtH,EAAE,CAACwmD,WAAZ,IAA2BxmD,EAAE,CAACymD,WAApD,CAA9B;EACD;;EACD1wC,eAAe,CAACjN,KAAD,EAAQ;IACrB,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAM8V,KAAK,GAAG9V,EAAE,CAAC8V,KAAjB;;IACA,IAAIhN,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGgN,KAAK,CAACrV,MAAN,GAAe,CAAxC,EAA2C;MACzC,OAAO,IAAP;IACD;;IACD,OAAOT,EAAE,CAAC6V,gBAAH,CAAoBC,KAAK,CAAChN,KAAD,CAAL,CAAaxB,KAAjC,CAAP;EACD;;EACD8zB,gBAAgB,CAACC,KAAD,EAAQ;IACtB,MAAMr7B,EAAE,GAAG,IAAX;IACA,OAAOJ,IAAI,CAACozB,KAAL,CAAWhzB,EAAE,CAACwmD,WAAH,GAAiBxmD,EAAE,CAACu7B,kBAAH,CAAsBF,KAAtB,IAA+Br7B,EAAE,CAACymD,WAA9D,CAAP;EACD;;EACD3uC,YAAY,GAAG;IACb,OAAO,KAAKxP,MAAZ;EACD;;AAjF+B;;AAmFlCi+C,aAAa,CAACv8C,EAAd,GAAmB,UAAnB;AACAu8C,aAAa,CAAC9yD,QAAd,GAAyB;EACvBqiB,KAAK,EAAE;IACL7d,QAAQ,EAAEsuD,aAAa,CAACvxC,SAAd,CAAwBnD;EAD7B;AADgB,CAAzB;;AAMA,SAAS80C,eAAT,CAAyBC,iBAAzB,EAA4CC,SAA5C,EAAuD;EACrD,MAAM/wC,KAAK,GAAG,EAAd;EACA,MAAMgxC,WAAW,GAAG,KAApB;EACA,MAAM;IAACC,IAAD;IAAOlnD,GAAP;IAAYkC,GAAZ;IAAiBilD,SAAjB;IAA4Bh3C,KAA5B;IAAmCi3C;EAAnC,IAA+CL,iBAArD;EACA,MAAMhjC,IAAI,GAAGmjC,IAAI,IAAI,CAArB;EACA,MAAMG,SAAS,GAAGD,QAAQ,GAAG,CAA7B;EACA,MAAM;IAACpnD,GAAG,EAAEsnD,IAAN;IAAYplD,GAAG,EAAEqlD;EAAjB,IAAyBP,SAA/B;EACA,MAAM38C,UAAU,GAAG,CAACzV,aAAa,CAACoL,GAAD,CAAjC;EACA,MAAMsK,UAAU,GAAG,CAAC1V,aAAa,CAACsN,GAAD,CAAjC;EACA,MAAMslD,YAAY,GAAG,CAAC5yD,aAAa,CAACub,KAAD,CAAnC;EACA,IAAI+M,OAAO,GAAGpf,OAAO,CAAC,CAACypD,IAAI,GAAGD,IAAR,IAAgBD,SAAhB,GAA4BtjC,IAA7B,CAAP,GAA4CA,IAA1D;EACA,IAAIjhB,MAAJ,EAAY2kD,OAAZ,EAAqBC,OAArB,EAA8BC,SAA9B;;EACA,IAAIzqC,OAAO,GAAG+pC,WAAV,IAAyB,CAAC58C,UAA1B,IAAwC,CAACC,UAA7C,EAAyD;IACvD,OAAO,CAAC;MAAC7C,KAAK,EAAE6/C;IAAR,CAAD,EAAgB;MAAC7/C,KAAK,EAAE8/C;IAAR,CAAhB,CAAP;EACD;;EACDI,SAAS,GAAG5nD,IAAI,CAAC6zB,IAAL,CAAU2zB,IAAI,GAAGrqC,OAAjB,IAA4Bnd,IAAI,CAACgE,KAAL,CAAWujD,IAAI,GAAGpqC,OAAlB,CAAxC;;EACA,IAAIyqC,SAAS,GAAGN,SAAhB,EAA2B;IACzBnqC,OAAO,GAAGpf,OAAO,CAAC6pD,SAAS,GAAGzqC,OAAZ,GAAsBmqC,SAAtB,GAAkCtjC,IAAnC,CAAP,GAAkDA,IAA5D;EACD;;EACD,IAAI,CAACnvB,aAAa,CAACuyD,SAAD,CAAlB,EAA+B;IAC7BrkD,MAAM,GAAG/C,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAaqhC,SAAb,CAAT;IACAjqC,OAAO,GAAGnd,IAAI,CAAC6zB,IAAL,CAAU1W,OAAO,GAAGpa,MAApB,IAA8BA,MAAxC;EACD;;EACD2kD,OAAO,GAAG1nD,IAAI,CAACgE,KAAL,CAAWujD,IAAI,GAAGpqC,OAAlB,IAA6BA,OAAvC;EACAwqC,OAAO,GAAG3nD,IAAI,CAAC6zB,IAAL,CAAU2zB,IAAI,GAAGrqC,OAAjB,IAA4BA,OAAtC;;EACA,IAAI7S,UAAU,IAAIC,UAAd,IAA4B48C,IAA5B,IAAoClpD,WAAW,CAAC,CAACkE,GAAG,GAAGlC,GAAP,IAAcknD,IAAf,EAAqBhqC,OAAO,GAAG,IAA/B,CAAnD,EAAyF;IACvFyqC,SAAS,GAAG5nD,IAAI,CAACC,GAAL,CAAS,CAACkC,GAAG,GAAGlC,GAAP,IAAckd,OAAvB,EAAgCkqC,QAAhC,CAAZ;IACAlqC,OAAO,GAAG,CAAChb,GAAG,GAAGlC,GAAP,IAAc2nD,SAAxB;IACAF,OAAO,GAAGznD,GAAV;IACA0nD,OAAO,GAAGxlD,GAAV;EACD,CALD,MAKO,IAAIslD,YAAJ,EAAkB;IACvBC,OAAO,GAAGp9C,UAAU,GAAGrK,GAAH,GAASynD,OAA7B;IACAC,OAAO,GAAGp9C,UAAU,GAAGpI,GAAH,GAASwlD,OAA7B;IACAC,SAAS,GAAGx3C,KAAK,GAAG,CAApB;IACA+M,OAAO,GAAG,CAACwqC,OAAO,GAAGD,OAAX,IAAsBE,SAAhC;EACD,CALM,MAKA;IACLA,SAAS,GAAG,CAACD,OAAO,GAAGD,OAAX,IAAsBvqC,OAAlC;;IACA,IAAIhf,YAAY,CAACypD,SAAD,EAAY5nD,IAAI,CAACozB,KAAL,CAAWw0B,SAAX,CAAZ,EAAmCzqC,OAAO,GAAG,IAA7C,CAAhB,EAAoE;MAClEyqC,SAAS,GAAG5nD,IAAI,CAACozB,KAAL,CAAWw0B,SAAX,CAAZ;IACD,CAFD,MAEO;MACLA,SAAS,GAAG5nD,IAAI,CAAC6zB,IAAL,CAAU+zB,SAAV,CAAZ;IACD;EACF;;EACD7kD,MAAM,GAAG/C,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAalxB,aAAa,CAACuyD,SAAD,CAAb,GAA2B/oD,cAAc,CAAC8e,OAAD,CAAzC,GAAqDiqC,SAAlE,CAAT;EACAM,OAAO,GAAG1nD,IAAI,CAACozB,KAAL,CAAWs0B,OAAO,GAAG3kD,MAArB,IAA+BA,MAAzC;EACA4kD,OAAO,GAAG3nD,IAAI,CAACozB,KAAL,CAAWu0B,OAAO,GAAG5kD,MAArB,IAA+BA,MAAzC;EACA,IAAInO,CAAC,GAAG,CAAR;;EACA,IAAI0V,UAAJ,EAAgB;IACd4L,KAAK,CAACrU,IAAN,CAAW;MAAC6F,KAAK,EAAEzH;IAAR,CAAX;;IACA,IAAIynD,OAAO,IAAIznD,GAAf,EAAoB;MAClBrL,CAAC;IACF;;IACD,IAAIuJ,YAAY,CAAC6B,IAAI,CAACozB,KAAL,CAAW,CAACs0B,OAAO,GAAG9yD,CAAC,GAAGuoB,OAAf,IAA0Bpa,MAArC,IAA+CA,MAAhD,EAAwD9C,GAAxD,EAA6Dkd,OAAO,GAAG,EAAvE,CAAhB,EAA4F;MAC1FvoB,CAAC;IACF;EACF;;EACD,OAAOA,CAAC,GAAGgzD,SAAX,EAAsB,EAAEhzD,CAAxB,EAA2B;IACzBshB,KAAK,CAACrU,IAAN,CAAW;MAAC6F,KAAK,EAAE1H,IAAI,CAACozB,KAAL,CAAW,CAACs0B,OAAO,GAAG9yD,CAAC,GAAGuoB,OAAf,IAA0Bpa,MAArC,IAA+CA;IAAvD,CAAX;EACD;;EACD,IAAIwH,UAAJ,EAAgB;IACd,IAAIpM,YAAY,CAAC+X,KAAK,CAACA,KAAK,CAACrV,MAAN,GAAe,CAAhB,CAAL,CAAwB6G,KAAzB,EAAgCvF,GAAhC,EAAqCgb,OAAO,GAAG,EAA/C,CAAhB,EAAoE;MAClEjH,KAAK,CAACA,KAAK,CAACrV,MAAN,GAAe,CAAhB,CAAL,CAAwB6G,KAAxB,GAAgCvF,GAAhC;IACD,CAFD,MAEO;MACL+T,KAAK,CAACrU,IAAN,CAAW;QAAC6F,KAAK,EAAEvF;MAAR,CAAX;IACD;EACF,CAND,MAMO;IACL+T,KAAK,CAACrU,IAAN,CAAW;MAAC6F,KAAK,EAAEigD;IAAR,CAAX;EACD;;EACD,OAAOzxC,KAAP;AACD;;AACD,MAAM2xC,eAAN,SAA8BjyB,KAA9B,CAAoC;EAClC/2B,WAAW,CAAC0E,GAAD,EAAM;IACf,MAAMA,GAAN;IACA,KAAKrD,KAAL,GAAaf,SAAb;IACA,KAAKiJ,GAAL,GAAWjJ,SAAX;IACA,KAAKynD,WAAL,GAAmBznD,SAAnB;IACA,KAAK2oD,SAAL,GAAiB3oD,SAAjB;IACA,KAAK0nD,WAAL,GAAmB,CAAnB;EACD;;EACD12C,KAAK,CAAC7D,GAAD,EAAMpD,KAAN,EAAa;IAChB,IAAIrU,aAAa,CAACyX,GAAD,CAAjB,EAAwB;MACtB,OAAO,IAAP;IACD;;IACD,IAAI,CAAC,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,YAAY9B,MAA3C,KAAsD,CAACs8C,QAAQ,CAAC,CAACx6C,GAAF,CAAnE,EAA2E;MACzE,OAAO,IAAP;IACD;;IACD,OAAO,CAACA,GAAR;EACD;;EACDy7C,sBAAsB,GAAG;IACvB,MAAM3nD,EAAE,GAAG,IAAX;IACA,MAAM;MAACsa,WAAD;MAAc1Q;IAAd,IAAyB5J,EAAE,CAAC6G,OAAlC;IACA,MAAM;MAACqD,UAAD;MAAaC;IAAb,IAA2BnK,EAAE,CAACiK,aAAH,EAAjC;IACA,IAAI;MAACpK,GAAD;MAAMkC;IAAN,IAAa/B,EAAjB;;IACA,MAAM4nD,MAAM,GAAGl0D,CAAC,IAAKmM,GAAG,GAAGqK,UAAU,GAAGrK,GAAH,GAASnM,CAA9C;;IACA,MAAMm0D,MAAM,GAAGn0D,CAAC,IAAKqO,GAAG,GAAGoI,UAAU,GAAGpI,GAAH,GAASrO,CAA9C;;IACA,IAAI4mB,WAAW,IAAI1Q,OAAnB,EAA4B;MAC1B,MAAMk+C,OAAO,GAAGvzD,IAAI,CAACsL,GAAD,CAApB;MACA,MAAMkoD,OAAO,GAAGxzD,IAAI,CAACwN,GAAD,CAApB;;MACA,IAAI+lD,OAAO,GAAG,CAAV,IAAeC,OAAO,GAAG,CAA7B,EAAgC;QAC9BF,MAAM,CAAC,CAAD,CAAN;MACD,CAFD,MAEO,IAAIC,OAAO,GAAG,CAAV,IAAeC,OAAO,GAAG,CAA7B,EAAgC;QACrCH,MAAM,CAAC,CAAD,CAAN;MACD;IACF;;IACD,IAAI/nD,GAAG,KAAKkC,GAAZ,EAAiB;MACf8lD,MAAM,CAAC9lD,GAAG,GAAG,CAAP,CAAN;;MACA,IAAI,CAACuY,WAAL,EAAkB;QAChBstC,MAAM,CAAC/nD,GAAG,GAAG,CAAP,CAAN;MACD;IACF;;IACDG,EAAE,CAACH,GAAH,GAASA,GAAT;IACAG,EAAE,CAAC+B,GAAH,GAASA,GAAT;EACD;;EACDimD,YAAY,GAAG;IACb,MAAMhoD,EAAE,GAAG,IAAX;IACA,MAAMmyB,QAAQ,GAAGnyB,EAAE,CAAC6G,OAAH,CAAWiP,KAA5B;IACA,IAAI;MAACuc,aAAD;MAAgB41B;IAAhB,IAA4B91B,QAAhC;IACA,IAAI80B,QAAJ;;IACA,IAAIgB,QAAJ,EAAc;MACZhB,QAAQ,GAAGrnD,IAAI,CAAC6zB,IAAL,CAAUzzB,EAAE,CAAC+B,GAAH,GAASkmD,QAAnB,IAA+BroD,IAAI,CAACgE,KAAL,CAAW5D,EAAE,CAACH,GAAH,GAASooD,QAApB,CAA/B,GAA+D,CAA1E;IACD,CAFD,MAEO;MACLhB,QAAQ,GAAGjnD,EAAE,CAACkoD,gBAAH,EAAX;MACA71B,aAAa,GAAGA,aAAa,IAAI,EAAjC;IACD;;IACD,IAAIA,aAAJ,EAAmB;MACjB40B,QAAQ,GAAGrnD,IAAI,CAACC,GAAL,CAASwyB,aAAT,EAAwB40B,QAAxB,CAAX;IACD;;IACD,OAAOA,QAAP;EACD;;EACDiB,gBAAgB,GAAG;IACjB,OAAO99C,MAAM,CAACE,iBAAd;EACD;;EACDotB,UAAU,GAAG;IACX,MAAM13B,EAAE,GAAG,IAAX;IACA,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;IACA,MAAMsrB,QAAQ,GAAGrqB,IAAI,CAACgO,KAAtB;IACA,IAAImxC,QAAQ,GAAGjnD,EAAE,CAACgoD,YAAH,EAAf;IACAf,QAAQ,GAAGrnD,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYklD,QAAZ,CAAX;IACA,MAAMkB,uBAAuB,GAAG;MAC9BlB,QAD8B;MAE9BpnD,GAAG,EAAEiI,IAAI,CAACjI,GAFoB;MAG9BkC,GAAG,EAAE+F,IAAI,CAAC/F,GAHoB;MAI9BilD,SAAS,EAAE70B,QAAQ,CAAC60B,SAJU;MAK9BD,IAAI,EAAE50B,QAAQ,CAAC81B,QALe;MAM9Bj4C,KAAK,EAAEmiB,QAAQ,CAACniB;IANc,CAAhC;IAQA,MAAM8F,KAAK,GAAG6wC,eAAe,CAACwB,uBAAD,EAA0B5qD,SAAS,CAACyC,EAAD,EAAK8H,IAAI,CAAC8oB,KAAV,CAAnC,CAA7B;;IACA,IAAI9oB,IAAI,CAAC6oB,MAAL,KAAgB,OAApB,EAA6B;MAC3BlzB,kBAAkB,CAACqY,KAAD,EAAQ9V,EAAR,EAAY,OAAZ,CAAlB;IACD;;IACD,IAAI8H,IAAI,CAACC,OAAT,EAAkB;MAChB+N,KAAK,CAAC/N,OAAN;MACA/H,EAAE,CAACF,KAAH,GAAWE,EAAE,CAAC+B,GAAd;MACA/B,EAAE,CAACgI,GAAH,GAAShI,EAAE,CAACH,GAAZ;IACD,CAJD,MAIO;MACLG,EAAE,CAACF,KAAH,GAAWE,EAAE,CAACH,GAAd;MACAG,EAAE,CAACgI,GAAH,GAAShI,EAAE,CAAC+B,GAAZ;IACD;;IACD,OAAO+T,KAAP;EACD;;EACDzP,SAAS,GAAG;IACV,MAAMrG,EAAE,GAAG,IAAX;IACA,MAAM8V,KAAK,GAAG9V,EAAE,CAAC8V,KAAjB;IACA,IAAIhW,KAAK,GAAGE,EAAE,CAACH,GAAf;IACA,IAAImI,GAAG,GAAGhI,EAAE,CAAC+B,GAAb;IACA,MAAMsE,SAAN;;IACA,IAAIrG,EAAE,CAAC6G,OAAH,CAAWsT,MAAX,IAAqBrE,KAAK,CAACrV,MAA/B,EAAuC;MACrC,MAAM0Z,MAAM,GAAG,CAACnS,GAAG,GAAGlI,KAAP,IAAgBF,IAAI,CAACmC,GAAL,CAAS+T,KAAK,CAACrV,MAAN,GAAe,CAAxB,EAA2B,CAA3B,CAAhB,GAAgD,CAA/D;MACAX,KAAK,IAAIqa,MAAT;MACAnS,GAAG,IAAImS,MAAP;IACD;;IACDna,EAAE,CAACwmD,WAAH,GAAiB1mD,KAAjB;IACAE,EAAE,CAAC0nD,SAAH,GAAe1/C,GAAf;IACAhI,EAAE,CAACymD,WAAH,GAAiBz+C,GAAG,GAAGlI,KAAvB;EACD;;EACD+R,gBAAgB,CAACvK,KAAD,EAAQ;IACtB,OAAO7R,YAAY,CAAC6R,KAAD,EAAQ,KAAKrI,KAAL,CAAW4H,OAAX,CAAmByX,MAA3B,CAAnB;EACD;;AA3GiC;;AA8GpC,MAAM8pC,WAAN,SAA0BX,eAA1B,CAA0C;EACxClwB,mBAAmB,GAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAX;IACA,MAAM;MAACH,GAAD;MAAMkC;IAAN,IAAa/B,EAAE,CAACmR,SAAH,CAAa,IAAb,CAAnB;IACAnR,EAAE,CAACH,GAAH,GAAS1L,cAAc,CAAC0L,GAAD,CAAd,GAAsBA,GAAtB,GAA4B,CAArC;IACAG,EAAE,CAAC+B,GAAH,GAAS5N,cAAc,CAAC4N,GAAD,CAAd,GAAsBA,GAAtB,GAA4B,CAArC;IACA/B,EAAE,CAAC2nD,sBAAH;EACD;;EACDO,gBAAgB,GAAG;IACjB,MAAMloD,EAAE,GAAG,IAAX;;IACA,IAAIA,EAAE,CAACgY,YAAH,EAAJ,EAAuB;MACrB,OAAOpY,IAAI,CAAC6zB,IAAL,CAAUzzB,EAAE,CAAC0Y,KAAH,GAAW,EAArB,CAAP;IACD;;IACD,MAAMmiB,QAAQ,GAAG76B,EAAE,CAACg7B,uBAAH,CAA2B,CAA3B,CAAjB;;IACA,OAAOp7B,IAAI,CAAC6zB,IAAL,CAAUzzB,EAAE,CAACyY,MAAH,GAAYoiB,QAAQ,CAAC5F,UAA/B,CAAP;EACD;;EACDpf,gBAAgB,CAACvO,KAAD,EAAQ;IACtB,OAAOA,KAAK,KAAK,IAAV,GAAiB4J,GAAjB,GAAuB,KAAKwJ,kBAAL,CAAwB,CAACpT,KAAK,GAAG,KAAKk/C,WAAd,IAA6B,KAAKC,WAA1D,CAA9B;EACD;;EACDrrB,gBAAgB,CAACC,KAAD,EAAQ;IACtB,OAAO,KAAKmrB,WAAL,GAAmB,KAAKjrB,kBAAL,CAAwBF,KAAxB,IAAiC,KAAKorB,WAAhE;EACD;;AArBuC;;AAuB1C2B,WAAW,CAACp+C,EAAZ,GAAiB,QAAjB;AACAo+C,WAAW,CAAC30D,QAAZ,GAAuB;EACrBqiB,KAAK,EAAE;IACL7d,QAAQ,EAAEy4B,KAAK,CAACZ,UAAN,CAAiBC;EADtB;AADc,CAAvB;;AAMA,SAASs4B,OAAT,CAAiBC,OAAjB,EAA0B;EACxB,MAAM9jD,MAAM,GAAG8jD,OAAO,GAAI1oD,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAa/lB,IAAI,CAACgE,KAAL,CAAWjM,KAAK,CAAC2wD,OAAD,CAAhB,CAAb,CAA1B;EACA,OAAO9jD,MAAM,KAAK,CAAlB;AACD;;AACD,SAAS+jD,aAAT,CAAuB3B,iBAAvB,EAA0CC,SAA1C,EAAqD;EACnD,MAAM2B,MAAM,GAAG5oD,IAAI,CAACgE,KAAL,CAAWjM,KAAK,CAACkvD,SAAS,CAAC9kD,GAAX,CAAhB,CAAf;EACA,MAAM0mD,cAAc,GAAG7oD,IAAI,CAAC6zB,IAAL,CAAUozB,SAAS,CAAC9kD,GAAV,GAAgBnC,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAa6iC,MAAb,CAA1B,CAAvB;EACA,MAAM1yC,KAAK,GAAG,EAAd;EACA,IAAIwyC,OAAO,GAAGvwD,eAAe,CAAC6uD,iBAAiB,CAAC/mD,GAAnB,EAAwBD,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAa/lB,IAAI,CAACgE,KAAL,CAAWjM,KAAK,CAACkvD,SAAS,CAAChnD,GAAX,CAAhB,CAAb,CAAxB,CAA7B;EACA,IAAI6oD,GAAG,GAAG9oD,IAAI,CAACgE,KAAL,CAAWjM,KAAK,CAAC2wD,OAAD,CAAhB,CAAV;EACA,IAAIK,WAAW,GAAG/oD,IAAI,CAACgE,KAAL,CAAW0kD,OAAO,GAAG1oD,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAa+iC,GAAb,CAArB,CAAlB;EACA,IAAI1B,SAAS,GAAG0B,GAAG,GAAG,CAAN,GAAU9oD,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAa/lB,IAAI,CAACgW,GAAL,CAAS8yC,GAAT,CAAb,CAAV,GAAwC,CAAxD;;EACA,GAAG;IACD5yC,KAAK,CAACrU,IAAN,CAAW;MAAC6F,KAAK,EAAEghD,OAAR;MAAiBx2B,KAAK,EAAEu2B,OAAO,CAACC,OAAD;IAA/B,CAAX;IACA,EAAEK,WAAF;;IACA,IAAIA,WAAW,KAAK,EAApB,EAAwB;MACtBA,WAAW,GAAG,CAAd;MACA,EAAED,GAAF;MACA1B,SAAS,GAAG0B,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe1B,SAA3B;IACD;;IACDsB,OAAO,GAAG1oD,IAAI,CAACozB,KAAL,CAAW21B,WAAW,GAAG/oD,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAa+iC,GAAb,CAAd,GAAkC1B,SAA7C,IAA0DA,SAApE;EACD,CATD,QASS0B,GAAG,GAAGF,MAAN,IAAiBE,GAAG,KAAKF,MAAR,IAAkBG,WAAW,GAAGF,cAT1D;;EAUA,MAAMG,QAAQ,GAAG7wD,eAAe,CAAC6uD,iBAAiB,CAAC7kD,GAAnB,EAAwBumD,OAAxB,CAAhC;EACAxyC,KAAK,CAACrU,IAAN,CAAW;IAAC6F,KAAK,EAAEshD,QAAR;IAAkB92B,KAAK,EAAEu2B,OAAO,CAACC,OAAD;EAAhC,CAAX;EACA,OAAOxyC,KAAP;AACD;;AACD,MAAM+yC,gBAAN,SAA+BrzB,KAA/B,CAAqC;EACnC/2B,WAAW,CAAC0E,GAAD,EAAM;IACf,MAAMA,GAAN;IACA,KAAKrD,KAAL,GAAaf,SAAb;IACA,KAAKiJ,GAAL,GAAWjJ,SAAX;IACA,KAAKynD,WAAL,GAAmBznD,SAAnB;IACA,KAAK0nD,WAAL,GAAmB,CAAnB;EACD;;EACD12C,KAAK,CAAC7D,GAAD,EAAMpD,KAAN,EAAa;IAChB,MAAMxB,KAAK,GAAGmgD,eAAe,CAACzyC,SAAhB,CAA0BjF,KAA1B,CAAgCyuC,KAAhC,CAAsC,IAAtC,EAA4C,CAACtyC,GAAD,EAAMpD,KAAN,CAA5C,CAAd;;IACA,IAAIxB,KAAK,KAAK,CAAd,EAAiB;MACf,KAAKwhD,KAAL,GAAa,IAAb;MACA,OAAO/pD,SAAP;IACD;;IACD,OAAO5K,cAAc,CAACmT,KAAD,CAAd,IAAyBA,KAAK,GAAG,CAAjC,GAAqCA,KAArC,GAA6C,IAApD;EACD;;EACDiwB,mBAAmB,GAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAX;IACA,MAAM;MAACH,GAAD;MAAMkC;IAAN,IAAa/B,EAAE,CAACmR,SAAH,CAAa,IAAb,CAAnB;IACAnR,EAAE,CAACH,GAAH,GAAS1L,cAAc,CAAC0L,GAAD,CAAd,GAAsBD,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYlC,GAAZ,CAAtB,GAAyC,IAAlD;IACAG,EAAE,CAAC+B,GAAH,GAAS5N,cAAc,CAAC4N,GAAD,CAAd,GAAsBnC,IAAI,CAACmC,GAAL,CAAS,CAAT,EAAYA,GAAZ,CAAtB,GAAyC,IAAlD;;IACA,IAAI/B,EAAE,CAAC6G,OAAH,CAAWyT,WAAf,EAA4B;MAC1Bta,EAAE,CAAC8oD,KAAH,GAAW,IAAX;IACD;;IACD9oD,EAAE,CAAC2nD,sBAAH;EACD;;EACDA,sBAAsB,GAAG;IACvB,MAAM3nD,EAAE,GAAG,IAAX;IACA,MAAM;MAACkK,UAAD;MAAaC;IAAb,IAA2BnK,EAAE,CAACiK,aAAH,EAAjC;IACA,IAAIpK,GAAG,GAAGG,EAAE,CAACH,GAAb;IACA,IAAIkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAb;;IACA,MAAM6lD,MAAM,GAAGl0D,CAAC,IAAKmM,GAAG,GAAGqK,UAAU,GAAGrK,GAAH,GAASnM,CAA9C;;IACA,MAAMm0D,MAAM,GAAGn0D,CAAC,IAAKqO,GAAG,GAAGoI,UAAU,GAAGpI,GAAH,GAASrO,CAA9C;;IACA,MAAMg1D,GAAG,GAAG,CAACh1D,CAAD,EAAIkB,CAAJ,KAAUgL,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAa/lB,IAAI,CAACgE,KAAL,CAAWjM,KAAK,CAACjE,CAAD,CAAhB,IAAuBkB,CAApC,CAAtB;;IACA,IAAIiL,GAAG,KAAKkC,GAAZ,EAAiB;MACf,IAAIlC,GAAG,IAAI,CAAX,EAAc;QACZ+nD,MAAM,CAAC,CAAD,CAAN;QACAC,MAAM,CAAC,EAAD,CAAN;MACD,CAHD,MAGO;QACLD,MAAM,CAACc,GAAG,CAAC7oD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;QACAgoD,MAAM,CAACa,GAAG,CAAC3mD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;MACD;IACF;;IACD,IAAIlC,GAAG,IAAI,CAAX,EAAc;MACZ+nD,MAAM,CAACc,GAAG,CAAC3mD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;IACD;;IACD,IAAIA,GAAG,IAAI,CAAX,EAAc;MACZ8lD,MAAM,CAACa,GAAG,CAAC7oD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;IACD;;IACD,IAAIG,EAAE,CAAC8oD,KAAH,IAAY9oD,EAAE,CAACH,GAAH,KAAWG,EAAE,CAACs2B,aAA1B,IAA2Cz2B,GAAG,KAAK6oD,GAAG,CAAC1oD,EAAE,CAACH,GAAJ,EAAS,CAAT,CAA1D,EAAuE;MACrE+nD,MAAM,CAACc,GAAG,CAAC7oD,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;IACD;;IACDG,EAAE,CAACH,GAAH,GAASA,GAAT;IACAG,EAAE,CAAC+B,GAAH,GAASA,GAAT;EACD;;EACD21B,UAAU,GAAG;IACX,MAAM13B,EAAE,GAAG,IAAX;IACA,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;IACA,MAAM+/C,iBAAiB,GAAG;MACxB/mD,GAAG,EAAEG,EAAE,CAACo2B,QADgB;MAExBr0B,GAAG,EAAE/B,EAAE,CAACm2B;IAFgB,CAA1B;IAIA,MAAMrgB,KAAK,GAAGyyC,aAAa,CAAC3B,iBAAD,EAAoB5mD,EAApB,CAA3B;;IACA,IAAI8H,IAAI,CAAC6oB,MAAL,KAAgB,OAApB,EAA6B;MAC3BlzB,kBAAkB,CAACqY,KAAD,EAAQ9V,EAAR,EAAY,OAAZ,CAAlB;IACD;;IACD,IAAI8H,IAAI,CAACC,OAAT,EAAkB;MAChB+N,KAAK,CAAC/N,OAAN;MACA/H,EAAE,CAACF,KAAH,GAAWE,EAAE,CAAC+B,GAAd;MACA/B,EAAE,CAACgI,GAAH,GAAShI,EAAE,CAACH,GAAZ;IACD,CAJD,MAIO;MACLG,EAAE,CAACF,KAAH,GAAWE,EAAE,CAACH,GAAd;MACAG,EAAE,CAACgI,GAAH,GAAShI,EAAE,CAAC+B,GAAZ;IACD;;IACD,OAAO+T,KAAP;EACD;;EACDjE,gBAAgB,CAACvK,KAAD,EAAQ;IACtB,OAAOA,KAAK,KAAKvI,SAAV,GAAsB,GAAtB,GAA4BtJ,YAAY,CAAC6R,KAAD,EAAQ,KAAKrI,KAAL,CAAW4H,OAAX,CAAmByX,MAA3B,CAA/C;EACD;;EACDjY,SAAS,GAAG;IACV,MAAMrG,EAAE,GAAG,IAAX;IACA,MAAMF,KAAK,GAAGE,EAAE,CAACH,GAAjB;IACA,MAAMwG,SAAN;IACArG,EAAE,CAACwmD,WAAH,GAAiB7uD,KAAK,CAACmI,KAAD,CAAtB;IACAE,EAAE,CAACymD,WAAH,GAAiB9uD,KAAK,CAACqI,EAAE,CAAC+B,GAAJ,CAAL,GAAgBpK,KAAK,CAACmI,KAAD,CAAtC;EACD;;EACD+V,gBAAgB,CAACvO,KAAD,EAAQ;IACtB,MAAMtH,EAAE,GAAG,IAAX;;IACA,IAAIsH,KAAK,KAAKvI,SAAV,IAAuBuI,KAAK,KAAK,CAArC,EAAwC;MACtCA,KAAK,GAAGtH,EAAE,CAACH,GAAX;IACD;;IACD,IAAIyH,KAAK,KAAK,IAAV,IAAkBwR,KAAK,CAACxR,KAAD,CAA3B,EAAoC;MAClC,OAAO4J,GAAP;IACD;;IACD,OAAOlR,EAAE,CAAC0a,kBAAH,CAAsBpT,KAAK,KAAKtH,EAAE,CAACH,GAAb,GACzB,CADyB,GAEzB,CAAClI,KAAK,CAAC2P,KAAD,CAAL,GAAetH,EAAE,CAACwmD,WAAnB,IAAkCxmD,EAAE,CAACymD,WAFlC,CAAP;EAGD;;EACDrrB,gBAAgB,CAACC,KAAD,EAAQ;IACtB,MAAMr7B,EAAE,GAAG,IAAX;IACA,MAAMs7B,OAAO,GAAGt7B,EAAE,CAACu7B,kBAAH,CAAsBF,KAAtB,CAAhB;IACA,OAAOz7B,IAAI,CAAC+lB,GAAL,CAAS,EAAT,EAAa3lB,EAAE,CAACwmD,WAAH,GAAiBlrB,OAAO,GAAGt7B,EAAE,CAACymD,WAA3C,CAAP;EACD;;AAtGkC;;AAwGrCoC,gBAAgB,CAAC7+C,EAAjB,GAAsB,aAAtB;AACA6+C,gBAAgB,CAACp1D,QAAjB,GAA4B;EAC1BqiB,KAAK,EAAE;IACL7d,QAAQ,EAAEy4B,KAAK,CAACZ,UAAN,CAAiBW,WADtB;IAELqB,KAAK,EAAE;MACLU,OAAO,EAAE;IADJ;EAFF;AADmB,CAA5B;;AASA,SAASu2B,qBAAT,CAA+BjhD,IAA/B,EAAqC;EACnC,MAAMqqB,QAAQ,GAAGrqB,IAAI,CAACgO,KAAtB;;EACA,IAAIqc,QAAQ,CAAC1P,OAAT,IAAoB3a,IAAI,CAAC2a,OAA7B,EAAsC;IACpC,MAAMyH,OAAO,GAAGrzB,SAAS,CAACs7B,QAAQ,CAAC62B,eAAV,CAAzB;IACA,OAAOr1D,cAAc,CAACw+B,QAAQ,CAAC4C,IAAT,IAAiB5C,QAAQ,CAAC4C,IAAT,CAAcxtB,IAAhC,EAAsC9T,QAAQ,CAACshC,IAAT,CAAcxtB,IAApD,CAAd,GAA0E2iB,OAAO,CAACzR,MAAzF;EACD;;EACD,OAAO,CAAP;AACD;;AACD,SAASwwC,gBAAT,CAA0Bt8C,GAA1B,EAA+BsoB,UAA/B,EAA2CrjB,KAA3C,EAAkD;EAChD,IAAIre,OAAO,CAACqe,KAAD,CAAX,EAAoB;IAClB,OAAO;MACL5b,CAAC,EAAEmI,YAAY,CAACwO,GAAD,EAAMA,GAAG,CAACooB,IAAV,EAAgBnjB,KAAhB,CADV;MAELxd,CAAC,EAAEwd,KAAK,CAACnR,MAAN,GAAew0B;IAFb,CAAP;EAID;;EACD,OAAO;IACLj/B,CAAC,EAAE2W,GAAG,CAACkuC,WAAJ,CAAgBjpC,KAAhB,EAAuB8G,KADrB;IAELtkB,CAAC,EAAE6gC;EAFE,CAAP;AAID;;AACD,SAASi0B,eAAT,CAAyBjtC,KAAzB,EAAgC8K,GAAhC,EAAqCxf,IAArC,EAA2C1H,GAA3C,EAAgDkC,GAAhD,EAAqD;EACnD,IAAIka,KAAK,KAAKpc,GAAV,IAAiBoc,KAAK,KAAKla,GAA/B,EAAoC;IAClC,OAAO;MACLjC,KAAK,EAAEinB,GAAG,GAAIxf,IAAI,GAAG,CADhB;MAELS,GAAG,EAAE+e,GAAG,GAAIxf,IAAI,GAAG;IAFd,CAAP;EAID,CALD,MAKO,IAAI0U,KAAK,GAAGpc,GAAR,IAAeoc,KAAK,GAAGla,GAA3B,EAAgC;IACrC,OAAO;MACLjC,KAAK,EAAEinB,GAAG,GAAGxf,IADR;MAELS,GAAG,EAAE+e;IAFA,CAAP;EAID;;EACD,OAAO;IACLjnB,KAAK,EAAEinB,GADF;IAEL/e,GAAG,EAAE+e,GAAG,GAAGxf;EAFN,CAAP;AAID;;AACD,SAAS4hD,kBAAT,CAA4BvhD,KAA5B,EAAmC;EACjC,MAAMwhD,cAAc,GAAG;IACrBt1D,CAAC,EAAE,CADkB;IAErBlB,CAAC,EAAEgV,KAAK,CAAC8Q,KAFY;IAGrB1jB,CAAC,EAAE,CAHkB;IAIrB1B,CAAC,EAAEsU,KAAK,CAAC6Q,MAAN,GAAe7Q,KAAK,CAAC8tB;EAJH,CAAvB;EAMA,MAAM2zB,cAAc,GAAG,EAAvB;EACA,IAAIj2D,CAAJ,EAAOuqD,QAAP,EAAiB56B,aAAjB;EACA,MAAMoW,UAAU,GAAG,EAAnB;EACA,MAAMjP,OAAO,GAAG,EAAhB;EACA,MAAMo/B,UAAU,GAAG1hD,KAAK,CAAC6I,SAAN,GAAkBhQ,MAArC;;EACA,KAAKrN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGk2D,UAAhB,EAA4Bl2D,CAAC,EAA7B,EAAiC;IAC/B,MAAM0U,IAAI,GAAGF,KAAK,CAACf,OAAN,CAAc8b,WAAd,CAA0BoZ,UAA1B,CAAqCn0B,KAAK,CAACiI,UAAN,CAAiBzc,CAAjB,CAArC,CAAb;IACA82B,OAAO,CAAC92B,CAAD,CAAP,GAAa0U,IAAI,CAACoiB,OAAlB;IACAnH,aAAa,GAAGnb,KAAK,CAAC2hD,gBAAN,CAAuBn2D,CAAvB,EAA0BwU,KAAK,CAAC4hD,WAAN,GAAoBt/B,OAAO,CAAC92B,CAAD,CAArD,CAAhB;IACA,MAAMq2D,MAAM,GAAG5wD,MAAM,CAACiP,IAAI,CAACitB,IAAN,CAArB;IACAntB,KAAK,CAAC+E,GAAN,CAAUooB,IAAV,GAAiB00B,MAAM,CAACxuB,MAAxB;IACA0iB,QAAQ,GAAGsL,gBAAgB,CAACrhD,KAAK,CAAC+E,GAAP,EAAY88C,MAAM,CAACx0B,UAAnB,EAA+BrtB,KAAK,CAAC8hD,YAAN,CAAmBt2D,CAAnB,CAA/B,CAA3B;IACA+lC,UAAU,CAAC/lC,CAAD,CAAV,GAAgBuqD,QAAhB;IACA,MAAM7jB,YAAY,GAAGlyB,KAAK,CAACua,aAAN,CAAoB/uB,CAApB,CAArB;IACA,MAAM6oB,KAAK,GAAG9jB,SAAS,CAAC2hC,YAAD,CAAvB;IACA,MAAM6vB,OAAO,GAAGT,eAAe,CAACjtC,KAAD,EAAQ8G,aAAa,CAAC7sB,CAAtB,EAAyBynD,QAAQ,CAAC3nD,CAAlC,EAAqC,CAArC,EAAwC,GAAxC,CAA/B;IACA,MAAM4zD,OAAO,GAAGV,eAAe,CAACjtC,KAAD,EAAQ8G,aAAa,CAAC3sB,CAAtB,EAAyBunD,QAAQ,CAACvpD,CAAlC,EAAqC,EAArC,EAAyC,GAAzC,CAA/B;;IACA,IAAIu1D,OAAO,CAAC7pD,KAAR,GAAgBspD,cAAc,CAACt1D,CAAnC,EAAsC;MACpCs1D,cAAc,CAACt1D,CAAf,GAAmB61D,OAAO,CAAC7pD,KAA3B;MACAupD,cAAc,CAACv1D,CAAf,GAAmBgmC,YAAnB;IACD;;IACD,IAAI6vB,OAAO,CAAC3hD,GAAR,GAAcohD,cAAc,CAACx2D,CAAjC,EAAoC;MAClCw2D,cAAc,CAACx2D,CAAf,GAAmB+2D,OAAO,CAAC3hD,GAA3B;MACAqhD,cAAc,CAACz2D,CAAf,GAAmBknC,YAAnB;IACD;;IACD,IAAI8vB,OAAO,CAAC9pD,KAAR,GAAgBspD,cAAc,CAACp0D,CAAnC,EAAsC;MACpCo0D,cAAc,CAACp0D,CAAf,GAAmB40D,OAAO,CAAC9pD,KAA3B;MACAupD,cAAc,CAACr0D,CAAf,GAAmB8kC,YAAnB;IACD;;IACD,IAAI8vB,OAAO,CAAC5hD,GAAR,GAAcohD,cAAc,CAAC91D,CAAjC,EAAoC;MAClC81D,cAAc,CAAC91D,CAAf,GAAmBs2D,OAAO,CAAC5hD,GAA3B;MACAqhD,cAAc,CAAC/1D,CAAf,GAAmBwmC,YAAnB;IACD;EACF;;EACDlyB,KAAK,CAACiiD,cAAN,CAAqBjiD,KAAK,CAAC4hD,WAA3B,EAAwCJ,cAAxC,EAAwDC,cAAxD;;EACAzhD,KAAK,CAACkiD,gBAAN,GAAyB,EAAzB;EACA,MAAMhiD,IAAI,GAAGF,KAAK,CAACf,OAAnB;EACA,MAAMkjD,kBAAkB,GAAGhB,qBAAqB,CAACjhD,IAAD,CAAhD;EACA,MAAMkiD,aAAa,GAAGpiD,KAAK,CAAC2a,6BAAN,CAAoCza,IAAI,CAACgO,KAAL,CAAW/N,OAAX,GAAqBH,KAAK,CAAC/H,GAA3B,GAAiC+H,KAAK,CAAC7F,GAA3E,CAAtB;;EACA,KAAK3O,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGk2D,UAAhB,EAA4Bl2D,CAAC,EAA7B,EAAiC;IAC/B,MAAM62D,KAAK,GAAI72D,CAAC,KAAK,CAAN,GAAU22D,kBAAkB,GAAG,CAA/B,GAAmC,CAAlD;IACA,MAAMG,kBAAkB,GAAGtiD,KAAK,CAAC2hD,gBAAN,CAAuBn2D,CAAvB,EAA0B42D,aAAa,GAAGC,KAAhB,GAAwB//B,OAAO,CAAC92B,CAAD,CAAzD,CAA3B;IACA,MAAM6oB,KAAK,GAAG9jB,SAAS,CAACyP,KAAK,CAACua,aAAN,CAAoB/uB,CAApB,CAAD,CAAvB;IACA,MAAMmU,IAAI,GAAG4xB,UAAU,CAAC/lC,CAAD,CAAvB;IACA+2D,iCAAiC,CAACluC,KAAD,EAAQ1U,IAAR,EAAc2iD,kBAAd,CAAjC;IACA,MAAM9sB,SAAS,GAAGgtB,oBAAoB,CAACnuC,KAAD,CAAtC;IACA,IAAI1T,IAAJ;;IACA,IAAI60B,SAAS,KAAK,MAAlB,EAA0B;MACxB70B,IAAI,GAAG2hD,kBAAkB,CAACh0D,CAA1B;IACD,CAFD,MAEO,IAAIknC,SAAS,KAAK,QAAlB,EAA4B;MACjC70B,IAAI,GAAG2hD,kBAAkB,CAACh0D,CAAnB,GAAwBqR,IAAI,CAACvR,CAAL,GAAS,CAAxC;IACD,CAFM,MAEA;MACLuS,IAAI,GAAG2hD,kBAAkB,CAACh0D,CAAnB,GAAuBqR,IAAI,CAACvR,CAAnC;IACD;;IACD,MAAMqS,KAAK,GAAGE,IAAI,GAAGhB,IAAI,CAACvR,CAA1B;IACA4R,KAAK,CAACkiD,gBAAN,CAAuB12D,CAAvB,IAA4B;MAC1B8C,CAAC,EAAEg0D,kBAAkB,CAACh0D,CADI;MAE1BE,CAAC,EAAE8zD,kBAAkB,CAAC9zD,CAFI;MAG1BgnC,SAH0B;MAI1B70B,IAJ0B;MAK1BH,GAAG,EAAE8hD,kBAAkB,CAAC9zD,CALE;MAM1BiS,KAN0B;MAO1BC,MAAM,EAAE4hD,kBAAkB,CAAC9zD,CAAnB,GAAuBmR,IAAI,CAACnT;IAPV,CAA5B;EASD;AACF;;AACD,SAASg2D,oBAAT,CAA8BnuC,KAA9B,EAAqC;EACnC,IAAIA,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,GAA7B,EAAkC;IAChC,OAAO,QAAP;EACD,CAFD,MAEO,IAAIA,KAAK,GAAG,GAAZ,EAAiB;IACtB,OAAO,MAAP;EACD;;EACD,OAAO,OAAP;AACD;;AACD,SAASkuC,iCAAT,CAA2CluC,KAA3C,EAAkD0hC,QAAlD,EAA4Dz4B,QAA5D,EAAsE;EACpE,IAAIjJ,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,GAA9B,EAAmC;IACjCiJ,QAAQ,CAAC9uB,CAAT,IAAeunD,QAAQ,CAACvpD,CAAT,GAAa,CAA5B;EACD,CAFD,MAEO,IAAI6nB,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,EAA3B,EAA+B;IACpCiJ,QAAQ,CAAC9uB,CAAT,IAAcunD,QAAQ,CAACvpD,CAAvB;EACD;AACF;;AACD,SAASi2D,eAAT,CAAyBziD,KAAzB,EAAgCq+C,UAAhC,EAA4C;EAC1C,MAAM;IAACt5C,GAAD;IAAM9F,OAAO,EAAE;MAAC8b;IAAD;EAAf,IAAgC/a,KAAtC;;EACA,KAAK,IAAIxU,CAAC,GAAG6yD,UAAU,GAAG,CAA1B,EAA6B7yD,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;IACxC,MAAM0pC,WAAW,GAAGna,WAAW,CAACoZ,UAAZ,CAAuBn0B,KAAK,CAACiI,UAAN,CAAiBzc,CAAjB,CAAvB,CAApB;IACA,MAAMq2D,MAAM,GAAG5wD,MAAM,CAACikC,WAAW,CAAC/H,IAAb,CAArB;IACA,MAAM;MAAC7+B,CAAD;MAAIE,CAAJ;MAAOgnC,SAAP;MAAkB70B,IAAlB;MAAwBH,GAAxB;MAA6BC,KAA7B;MAAoCC;IAApC,IAA8CV,KAAK,CAACkiD,gBAAN,CAAuB12D,CAAvB,CAApD;IACA,MAAM;MAACk3D;IAAD,IAAkBxtB,WAAxB;;IACA,IAAI,CAACroC,aAAa,CAAC61D,aAAD,CAAlB,EAAmC;MACjC,MAAMpgC,OAAO,GAAGrzB,SAAS,CAACimC,WAAW,CAACksB,eAAb,CAAzB;MACAr8C,GAAG,CAACwS,SAAJ,GAAgBmrC,aAAhB;MACA39C,GAAG,CAACsxB,QAAJ,CAAa11B,IAAI,GAAG2hB,OAAO,CAAC3hB,IAA5B,EAAkCH,GAAG,GAAG8hB,OAAO,CAAC9hB,GAAhD,EAAqDC,KAAK,GAAGE,IAAR,GAAe2hB,OAAO,CAACxR,KAA5E,EAAmFpQ,MAAM,GAAGF,GAAT,GAAe8hB,OAAO,CAACzR,MAA1G;IACD;;IACD9f,UAAU,CACRgU,GADQ,EAER/E,KAAK,CAAC8hD,YAAN,CAAmBt2D,CAAnB,CAFQ,EAGR8C,CAHQ,EAIRE,CAAC,GAAIqzD,MAAM,CAACx0B,UAAP,GAAoB,CAJjB,EAKRw0B,MALQ,EAMR;MACEt2D,KAAK,EAAE2pC,WAAW,CAAC3pC,KADrB;MAEEiqC,SAAS,EAAEA,SAFb;MAGEG,YAAY,EAAE;IAHhB,CANQ,CAAV;EAYD;AACF;;AACD,SAASgtB,cAAT,CAAwB3iD,KAAxB,EAA+BgT,MAA/B,EAAuC8H,QAAvC,EAAiDujC,UAAjD,EAA6D;EAC3D,MAAM;IAACt5C;EAAD,IAAQ/E,KAAd;;EACA,IAAI8a,QAAJ,EAAc;IACZ/V,GAAG,CAACyR,GAAJ,CAAQxW,KAAK,CAACoa,OAAd,EAAuBpa,KAAK,CAACqa,OAA7B,EAAsCrH,MAAtC,EAA8C,CAA9C,EAAiDrlB,GAAjD;EACD,CAFD,MAEO;IACL,IAAIwtB,aAAa,GAAGnb,KAAK,CAAC2hD,gBAAN,CAAuB,CAAvB,EAA0B3uC,MAA1B,CAApB;IACAjO,GAAG,CAACgyB,MAAJ,CAAW5b,aAAa,CAAC7sB,CAAzB,EAA4B6sB,aAAa,CAAC3sB,CAA1C;;IACA,KAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6yD,UAApB,EAAgC7yD,CAAC,EAAjC,EAAqC;MACnC2vB,aAAa,GAAGnb,KAAK,CAAC2hD,gBAAN,CAAuBn2D,CAAvB,EAA0BwnB,MAA1B,CAAhB;MACAjO,GAAG,CAACiyB,MAAJ,CAAW7b,aAAa,CAAC7sB,CAAzB,EAA4B6sB,aAAa,CAAC3sB,CAA1C;IACD;EACF;AACF;;AACD,SAASo0D,cAAT,CAAwB5iD,KAAxB,EAA+B6iD,YAA/B,EAA6C7vC,MAA7C,EAAqDqrC,UAArD,EAAiE;EAC/D,MAAMt5C,GAAG,GAAG/E,KAAK,CAAC+E,GAAlB;EACA,MAAM+V,QAAQ,GAAG+nC,YAAY,CAAC/nC,QAA9B;EACA,MAAM;IAACvvB,KAAD;IAAQosB;EAAR,IAAqBkrC,YAA3B;;EACA,IAAK,CAAC/nC,QAAD,IAAa,CAACujC,UAAf,IAA8B,CAAC9yD,KAA/B,IAAwC,CAACosB,SAAzC,IAAsD3E,MAAM,GAAG,CAAnE,EAAsE;IACpE;EACD;;EACDjO,GAAG,CAACqxB,IAAJ;EACArxB,GAAG,CAAC0S,WAAJ,GAAkBlsB,KAAlB;EACAwZ,GAAG,CAAC4S,SAAJ,GAAgBA,SAAhB;EACA5S,GAAG,CAAC6xB,WAAJ,CAAgBisB,YAAY,CAACt5B,UAA7B;EACAxkB,GAAG,CAAC8xB,cAAJ,GAAqBgsB,YAAY,CAACr5B,gBAAlC;EACAzkB,GAAG,CAAC+xB,SAAJ;EACA6rB,cAAc,CAAC3iD,KAAD,EAAQgT,MAAR,EAAgB8H,QAAhB,EAA0BujC,UAA1B,CAAd;EACAt5C,GAAG,CAAC6gC,SAAJ;EACA7gC,GAAG,CAACkyB,MAAJ;EACAlyB,GAAG,CAACuxB,OAAJ;AACD;;AACD,SAASwsB,YAAT,CAAsBC,KAAtB,EAA6B;EAC3B,OAAO10D,QAAQ,CAAC00D,KAAD,CAAR,GAAkBA,KAAlB,GAA0B,CAAjC;AACD;;AACD,MAAMC,iBAAN,SAAgCnD,eAAhC,CAAgD;EAC9ChpD,WAAW,CAAC0E,GAAD,EAAM;IACf,MAAMA,GAAN;IACA,KAAK6e,OAAL,GAAejjB,SAAf;IACA,KAAKkjB,OAAL,GAAeljB,SAAf;IACA,KAAKyqD,WAAL,GAAmBzqD,SAAnB;IACA,KAAK2qD,YAAL,GAAoB,EAApB;IACA,KAAKI,gBAAL,GAAwB,EAAxB;EACD;;EACD1yB,aAAa,GAAG;IACd,MAAMp3B,EAAE,GAAG,IAAX;IACAA,EAAE,CAAC0Y,KAAH,GAAW1Y,EAAE,CAACqd,QAAd;IACArd,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAACsd,SAAf;IACAtd,EAAE,CAAC01B,UAAH,GAAgBqzB,qBAAqB,CAAC/oD,EAAE,CAAC6G,OAAJ,CAArB,GAAoC,CAApD;IACA7G,EAAE,CAACgiB,OAAH,GAAapiB,IAAI,CAACgE,KAAL,CAAW5D,EAAE,CAAC0Y,KAAH,GAAW,CAAtB,CAAb;IACA1Y,EAAE,CAACiiB,OAAH,GAAariB,IAAI,CAACgE,KAAL,CAAW,CAAC5D,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAAC01B,UAAhB,IAA8B,CAAzC,CAAb;IACA11B,EAAE,CAACwpD,WAAH,GAAiB5pD,IAAI,CAACC,GAAL,CAASG,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAAC01B,UAAxB,EAAoC11B,EAAE,CAAC0Y,KAAvC,IAAgD,CAAjE;EACD;;EACD6e,mBAAmB,GAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAX;IACA,MAAM;MAACH,GAAD;MAAMkC;IAAN,IAAa/B,EAAE,CAACmR,SAAH,CAAa,KAAb,CAAnB;IACAnR,EAAE,CAACH,GAAH,GAAS1L,cAAc,CAAC0L,GAAD,CAAd,IAAuB,CAACiZ,KAAK,CAACjZ,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAApD;IACAG,EAAE,CAAC+B,GAAH,GAAS5N,cAAc,CAAC4N,GAAD,CAAd,IAAuB,CAAC+W,KAAK,CAAC/W,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAApD;IACA/B,EAAE,CAAC2nD,sBAAH;EACD;;EACDO,gBAAgB,GAAG;IACjB,OAAOtoD,IAAI,CAAC6zB,IAAL,CAAU,KAAK+1B,WAAL,GAAmBT,qBAAqB,CAAC,KAAKliD,OAAN,CAAlD,CAAP;EACD;;EACDiyB,kBAAkB,CAAChjB,KAAD,EAAQ;IACxB,MAAM9V,EAAE,GAAG,IAAX;IACAynD,eAAe,CAACzyC,SAAhB,CAA0B8jB,kBAA1B,CAA6C74B,IAA7C,CAAkDD,EAAlD,EAAsD8V,KAAtD;IACA9V,EAAE,CAAC0pD,YAAH,GAAkB1pD,EAAE,CAACyQ,SAAH,GAAeuO,GAAf,CAAmB,CAAC1X,KAAD,EAAQwB,KAAR,KAAkB;MACrD,MAAM8I,KAAK,GAAG3Z,QAAQ,CAAC+H,EAAE,CAAC6G,OAAH,CAAW8b,WAAX,CAAuB1qB,QAAxB,EAAkC,CAACqP,KAAD,EAAQwB,KAAR,CAAlC,EAAkD9I,EAAlD,CAAtB;MACA,OAAO4R,KAAK,IAAIA,KAAK,KAAK,CAAnB,GAAuBA,KAAvB,GAA+B,EAAtC;IACD,CAHiB,CAAlB;EAID;;EACDumB,GAAG,GAAG;IACJ,MAAMn4B,EAAE,GAAG,IAAX;IACA,MAAM8H,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;;IACA,IAAIiB,IAAI,CAAC2a,OAAL,IAAgB3a,IAAI,CAAC6a,WAAL,CAAiBF,OAArC,EAA8C;MAC5C0mC,kBAAkB,CAACnpD,EAAD,CAAlB;IACD,CAFD,MAEO;MACLA,EAAE,CAAC6qD,cAAH,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;IACD;EACF;;EACDhB,cAAc,CAACiB,qBAAD,EAAwB1B,cAAxB,EAAwCC,cAAxC,EAAwD;IACpE,MAAMrpD,EAAE,GAAG,IAAX;IACA,IAAI+qD,mBAAmB,GAAG3B,cAAc,CAACt1D,CAAf,GAAmB8L,IAAI,CAACic,GAAL,CAASwtC,cAAc,CAACv1D,CAAxB,CAA7C;IACA,IAAIk3D,oBAAoB,GAAGprD,IAAI,CAACmC,GAAL,CAASqnD,cAAc,CAACx2D,CAAf,GAAmBoN,EAAE,CAAC0Y,KAA/B,EAAsC,CAAtC,IAA2C9Y,IAAI,CAACic,GAAL,CAASwtC,cAAc,CAACz2D,CAAxB,CAAtE;IACA,IAAIq4D,kBAAkB,GAAG,CAAC7B,cAAc,CAACp0D,CAAhB,GAAoB4K,IAAI,CAAC+b,GAAL,CAAS0tC,cAAc,CAACr0D,CAAxB,CAA7C;IACA,IAAIk2D,qBAAqB,GAAG,CAACtrD,IAAI,CAACmC,GAAL,CAASqnD,cAAc,CAAC91D,CAAf,IAAoB0M,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAAC01B,UAAnC,CAAT,EAAyD,CAAzD,CAAD,GAA+D91B,IAAI,CAAC+b,GAAL,CAAS0tC,cAAc,CAAC/1D,CAAxB,CAA3F;IACAy3D,mBAAmB,GAAGL,YAAY,CAACK,mBAAD,CAAlC;IACAC,oBAAoB,GAAGN,YAAY,CAACM,oBAAD,CAAnC;IACAC,kBAAkB,GAAGP,YAAY,CAACO,kBAAD,CAAjC;IACAC,qBAAqB,GAAGR,YAAY,CAACQ,qBAAD,CAApC;IACAlrD,EAAE,CAACwpD,WAAH,GAAiB5pD,IAAI,CAACmC,GAAL,CAAS+oD,qBAAqB,GAAG,CAAjC,EAAoClrD,IAAI,CAACC,GAAL,CACnDD,IAAI,CAACgE,KAAL,CAAWknD,qBAAqB,GAAG,CAACC,mBAAmB,GAAGC,oBAAvB,IAA+C,CAAlF,CADmD,EAEnDprD,IAAI,CAACgE,KAAL,CAAWknD,qBAAqB,GAAG,CAACG,kBAAkB,GAAGC,qBAAtB,IAA+C,CAAlF,CAFmD,CAApC,CAAjB;IAGAlrD,EAAE,CAAC6qD,cAAH,CAAkBE,mBAAlB,EAAuCC,oBAAvC,EAA6DC,kBAA7D,EAAiFC,qBAAjF;EACD;;EACDL,cAAc,CAACM,YAAD,EAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,cAA3C,EAA2D;IACvE,MAAMtrD,EAAE,GAAG,IAAX;IACA,MAAMurD,QAAQ,GAAGvrD,EAAE,CAAC0Y,KAAH,GAAW0yC,aAAX,GAA2BprD,EAAE,CAACwpD,WAA/C;IACA,MAAMgC,OAAO,GAAGL,YAAY,GAAGnrD,EAAE,CAACwpD,WAAlC;IACA,MAAMiC,MAAM,GAAGJ,WAAW,GAAGrrD,EAAE,CAACwpD,WAAhC;IACA,MAAMkC,SAAS,GAAI1rD,EAAE,CAACyY,MAAH,GAAYzY,EAAE,CAAC01B,UAAhB,GAA8B41B,cAA9B,GAA+CtrD,EAAE,CAACwpD,WAApE;IACAxpD,EAAE,CAACgiB,OAAH,GAAapiB,IAAI,CAACgE,KAAL,CAAY,CAAC4nD,OAAO,GAAGD,QAAX,IAAuB,CAAxB,GAA6BvrD,EAAE,CAACuI,IAA3C,CAAb;IACAvI,EAAE,CAACiiB,OAAH,GAAariB,IAAI,CAACgE,KAAL,CAAY,CAAC6nD,MAAM,GAAGC,SAAV,IAAuB,CAAxB,GAA6B1rD,EAAE,CAACoI,GAAhC,GAAsCpI,EAAE,CAAC01B,UAApD,CAAb;EACD;;EACDvT,aAAa,CAACrZ,KAAD,EAAQ;IACnB,MAAM6iD,eAAe,GAAGp2D,GAAG,GAAG,KAAKkb,SAAL,GAAiBhQ,MAA/C;IACA,MAAM+a,UAAU,GAAG,KAAK3U,OAAL,CAAa2U,UAAb,IAA2B,CAA9C;IACA,OAAO/e,eAAe,CAACqM,KAAK,GAAG6iD,eAAR,GAA0B12D,SAAS,CAACumB,UAAD,CAApC,CAAtB;EACD;;EACD+G,6BAA6B,CAACjb,KAAD,EAAQ;IACnC,MAAMtH,EAAE,GAAG,IAAX;;IACA,IAAIvL,aAAa,CAAC6S,KAAD,CAAjB,EAA0B;MACxB,OAAO4J,GAAP;IACD;;IACD,MAAM06C,aAAa,GAAG5rD,EAAE,CAACwpD,WAAH,IAAkBxpD,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACH,GAA9B,CAAtB;;IACA,IAAIG,EAAE,CAAC6G,OAAH,CAAWkB,OAAf,EAAwB;MACtB,OAAO,CAAC/H,EAAE,CAAC+B,GAAH,GAASuF,KAAV,IAAmBskD,aAA1B;IACD;;IACD,OAAO,CAACtkD,KAAK,GAAGtH,EAAE,CAACH,GAAZ,IAAmB+rD,aAA1B;EACD;;EACDC,6BAA6B,CAACxlC,QAAD,EAAW;IACtC,IAAI5xB,aAAa,CAAC4xB,QAAD,CAAjB,EAA6B;MAC3B,OAAOnV,GAAP;IACD;;IACD,MAAMlR,EAAE,GAAG,IAAX;IACA,MAAM8rD,cAAc,GAAGzlC,QAAQ,IAAIrmB,EAAE,CAACwpD,WAAH,IAAkBxpD,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACH,GAA9B,CAAJ,CAA/B;IACA,OAAOG,EAAE,CAAC6G,OAAH,CAAWkB,OAAX,GAAqB/H,EAAE,CAAC+B,GAAH,GAAS+pD,cAA9B,GAA+C9rD,EAAE,CAACH,GAAH,GAASisD,cAA/D;EACD;;EACDvC,gBAAgB,CAACzgD,KAAD,EAAQijD,kBAAR,EAA4B;IAC1C,MAAM/rD,EAAE,GAAG,IAAX;IACA,MAAMic,KAAK,GAAGjc,EAAE,CAACmiB,aAAH,CAAiBrZ,KAAjB,IAA0BjT,OAAxC;IACA,OAAO;MACLK,CAAC,EAAE0J,IAAI,CAAC+b,GAAL,CAASM,KAAT,IAAkB8vC,kBAAlB,GAAuC/rD,EAAE,CAACgiB,OADxC;MAEL5rB,CAAC,EAAEwJ,IAAI,CAACic,GAAL,CAASI,KAAT,IAAkB8vC,kBAAlB,GAAuC/rD,EAAE,CAACiiB,OAFxC;MAGLhG;IAHK,CAAP;EAKD;;EACD+G,wBAAwB,CAACla,KAAD,EAAQxB,KAAR,EAAe;IACrC,OAAO,KAAKiiD,gBAAL,CAAsBzgD,KAAtB,EAA6B,KAAKyZ,6BAAL,CAAmCjb,KAAnC,CAA7B,CAAP;EACD;;EACD0kD,eAAe,CAACljD,KAAD,EAAQ;IACrB,OAAO,KAAKka,wBAAL,CAA8Bla,KAAK,IAAI,CAAvC,EAA0C,KAAK0yB,YAAL,EAA1C,CAAP;EACD;;EACDywB,qBAAqB,CAACnjD,KAAD,EAAQ;IAC3B,MAAM;MAACP,IAAD;MAAOH,GAAP;MAAYC,KAAZ;MAAmBC;IAAnB,IAA6B,KAAKwhD,gBAAL,CAAsBhhD,KAAtB,CAAnC;IACA,OAAO;MACLP,IADK;MAELH,GAFK;MAGLC,KAHK;MAILC;IAJK,CAAP;EAMD;;EACDy1B,cAAc,GAAG;IACf,MAAM/9B,EAAE,GAAG,IAAX;IACA,MAAM;MAACof,eAAD;MAAkBhF,IAAI,EAAE;QAACsI;MAAD;IAAxB,IAAsC1iB,EAAE,CAAC6G,OAA/C;;IACA,IAAIuY,eAAJ,EAAqB;MACnB,MAAMzS,GAAG,GAAG3M,EAAE,CAAC2M,GAAf;MACAA,GAAG,CAACqxB,IAAJ;MACArxB,GAAG,CAAC+xB,SAAJ;MACA6rB,cAAc,CAACvqD,EAAD,EAAKA,EAAE,CAACuiB,6BAAH,CAAiCviB,EAAE,CAAC0nD,SAApC,CAAL,EAAqDhlC,QAArD,EAA+D1iB,EAAE,CAACyQ,SAAH,GAAehQ,MAA9E,CAAd;MACAkM,GAAG,CAAC6gC,SAAJ;MACA7gC,GAAG,CAACwS,SAAJ,GAAgBC,eAAhB;MACAzS,GAAG,CAACsW,IAAJ;MACAtW,GAAG,CAACuxB,OAAJ;IACD;EACF;;EACDE,QAAQ,GAAG;IACT,MAAMp+B,EAAE,GAAG,IAAX;IACA,MAAM2M,GAAG,GAAG3M,EAAE,CAAC2M,GAAf;IACA,MAAM7E,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;IACA,MAAM;MAAC2b,UAAD;MAAapI;IAAb,IAAqBtS,IAA3B;IACA,MAAMm+C,UAAU,GAAGjmD,EAAE,CAACyQ,SAAH,GAAehQ,MAAlC;IACA,IAAIrN,CAAJ,EAAO+mB,MAAP,EAAe+K,QAAf;;IACA,IAAIpd,IAAI,CAAC6a,WAAL,CAAiBF,OAArB,EAA8B;MAC5B4nC,eAAe,CAACrqD,EAAD,EAAKimD,UAAL,CAAf;IACD;;IACD,IAAI7rC,IAAI,CAACqI,OAAT,EAAkB;MAChBziB,EAAE,CAAC8V,KAAH,CAASrW,OAAT,CAAiB,CAACqB,IAAD,EAAOgI,KAAP,KAAiB;QAChC,IAAIA,KAAK,KAAK,CAAd,EAAiB;UACfqR,MAAM,GAAGna,EAAE,CAACuiB,6BAAH,CAAiCzhB,IAAI,CAACwG,KAAtC,CAAT;UACA,MAAMw1B,WAAW,GAAG1iB,IAAI,CAAC2hB,UAAL,CAAgB/7B,EAAE,CAAC6P,UAAH,CAAc/G,KAAK,GAAG,CAAtB,CAAhB,CAApB;UACA0hD,cAAc,CAACxqD,EAAD,EAAK88B,WAAL,EAAkB3iB,MAAlB,EAA0B8rC,UAA1B,CAAd;QACD;MACF,CAND;IAOD;;IACD,IAAIzjC,UAAU,CAACC,OAAf,EAAwB;MACtB9V,GAAG,CAACqxB,IAAJ;;MACA,KAAK5qC,CAAC,GAAG4M,EAAE,CAACyQ,SAAH,GAAehQ,MAAf,GAAwB,CAAjC,EAAoCrN,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;QAC/C,MAAM0pC,WAAW,GAAGta,UAAU,CAACuZ,UAAX,CAAsB/7B,EAAE,CAAC6P,UAAH,CAAczc,CAAd,CAAtB,CAApB;QACA,MAAM;UAACD,KAAD;UAAQosB;QAAR,IAAqBud,WAA3B;;QACA,IAAI,CAACvd,SAAD,IAAc,CAACpsB,KAAnB,EAA0B;UACxB;QACD;;QACDwZ,GAAG,CAAC4S,SAAJ,GAAgBA,SAAhB;QACA5S,GAAG,CAAC0S,WAAJ,GAAkBlsB,KAAlB;QACAwZ,GAAG,CAAC6xB,WAAJ,CAAgB1B,WAAW,CAAC3L,UAA5B;QACAxkB,GAAG,CAAC8xB,cAAJ,GAAqB3B,WAAW,CAAC1L,gBAAjC;QACAjX,MAAM,GAAGna,EAAE,CAACuiB,6BAAH,CAAiCza,IAAI,CAACgO,KAAL,CAAW/N,OAAX,GAAqB/H,EAAE,CAACH,GAAxB,GAA8BG,EAAE,CAAC+B,GAAlE,CAAT;QACAmjB,QAAQ,GAAGllB,EAAE,CAACupD,gBAAH,CAAoBn2D,CAApB,EAAuB+mB,MAAvB,CAAX;QACAxN,GAAG,CAAC+xB,SAAJ;QACA/xB,GAAG,CAACgyB,MAAJ,CAAW3+B,EAAE,CAACgiB,OAAd,EAAuBhiB,EAAE,CAACiiB,OAA1B;QACAtV,GAAG,CAACiyB,MAAJ,CAAW1Z,QAAQ,CAAChvB,CAApB,EAAuBgvB,QAAQ,CAAC9uB,CAAhC;QACAuW,GAAG,CAACkyB,MAAJ;MACD;;MACDlyB,GAAG,CAACuxB,OAAJ;IACD;EACF;;EACDc,UAAU,GAAG;IACX,MAAMh/B,EAAE,GAAG,IAAX;IACA,MAAM2M,GAAG,GAAG3M,EAAE,CAAC2M,GAAf;IACA,MAAM7E,IAAI,GAAG9H,EAAE,CAAC6G,OAAhB;IACA,MAAMsrB,QAAQ,GAAGrqB,IAAI,CAACgO,KAAtB;;IACA,IAAI,CAACqc,QAAQ,CAAC1P,OAAd,EAAuB;MACrB;IACD;;IACD,MAAMjH,UAAU,GAAGxb,EAAE,CAACmiB,aAAH,CAAiB,CAAjB,CAAnB;IACA,IAAIhI,MAAJ,EAAYzB,KAAZ;IACA/L,GAAG,CAACqxB,IAAJ;IACArxB,GAAG,CAAC2hC,SAAJ,CAActuC,EAAE,CAACgiB,OAAjB,EAA0BhiB,EAAE,CAACiiB,OAA7B;IACAtV,GAAG,CAACu/C,MAAJ,CAAW1wC,UAAX;IACA7O,GAAG,CAACywB,SAAJ,GAAgB,QAAhB;IACAzwB,GAAG,CAAC4wB,YAAJ,GAAmB,QAAnB;IACAv9B,EAAE,CAAC8V,KAAH,CAASrW,OAAT,CAAiB,CAACqB,IAAD,EAAOgI,KAAP,KAAiB;MAChC,IAAIA,KAAK,KAAK,CAAV,IAAe,CAAChB,IAAI,CAACC,OAAzB,EAAkC;QAChC;MACD;;MACD,MAAM+0B,WAAW,GAAG3K,QAAQ,CAAC4J,UAAT,CAAoB/7B,EAAE,CAAC6P,UAAH,CAAc/G,KAAd,CAApB,CAApB;MACA,MAAM+xB,QAAQ,GAAGhiC,MAAM,CAACikC,WAAW,CAAC/H,IAAb,CAAvB;MACA5a,MAAM,GAAGna,EAAE,CAACuiB,6BAAH,CAAiCviB,EAAE,CAAC8V,KAAH,CAAShN,KAAT,EAAgBxB,KAAjD,CAAT;;MACA,IAAIw1B,WAAW,CAACqvB,iBAAhB,EAAmC;QACjCzzC,KAAK,GAAG/L,GAAG,CAACkuC,WAAJ,CAAgB/5C,IAAI,CAAC8Q,KAArB,EAA4B8G,KAApC;QACA/L,GAAG,CAACwS,SAAJ,GAAgB2d,WAAW,CAACwtB,aAA5B;QACA,MAAMpgC,OAAO,GAAGrzB,SAAS,CAACimC,WAAW,CAACksB,eAAb,CAAzB;QACAr8C,GAAG,CAACsxB,QAAJ,CACE,CAACvlB,KAAD,GAAS,CAAT,GAAawR,OAAO,CAAC3hB,IADvB,EAEE,CAAC4R,MAAD,GAAU0gB,QAAQ,CAACtzB,IAAT,GAAgB,CAA1B,GAA8B2iB,OAAO,CAAC9hB,GAFxC,EAGEsQ,KAAK,GAAGwR,OAAO,CAACxR,KAHlB,EAIEmiB,QAAQ,CAACtzB,IAAT,GAAgB2iB,OAAO,CAACzR,MAJ1B;MAMD;;MACD9f,UAAU,CAACgU,GAAD,EAAM7L,IAAI,CAAC8Q,KAAX,EAAkB,CAAlB,EAAqB,CAACuI,MAAtB,EAA8B0gB,QAA9B,EAAwC;QAChD1nC,KAAK,EAAE2pC,WAAW,CAAC3pC;MAD6B,CAAxC,CAAV;IAGD,CArBD;IAsBAwZ,GAAG,CAACuxB,OAAJ;EACD;;EACDe,SAAS,GAAG,CAAE;;AAnNgC;;AAqNhD2rB,iBAAiB,CAAC5gD,EAAlB,GAAuB,cAAvB;AACA4gD,iBAAiB,CAACn3D,QAAlB,GAA6B;EAC3BgvB,OAAO,EAAE,IADkB;EAE3B2pC,OAAO,EAAE,IAFkB;EAG3BlnC,QAAQ,EAAE,WAHiB;EAI3B1C,UAAU,EAAE;IACVC,OAAO,EAAE,IADC;IAEVlD,SAAS,EAAE,CAFD;IAGV4R,UAAU,EAAE,EAHF;IAIVC,gBAAgB,EAAE;EAJR,CAJe;EAU3BhX,IAAI,EAAE;IACJsI,QAAQ,EAAE;EADN,CAVqB;EAa3BlH,UAAU,EAAE,CAbe;EAc3B1F,KAAK,EAAE;IACLq2C,iBAAiB,EAAE,IADd;IAEL7B,aAAa,EAAE,wBAFV;IAGLtB,eAAe,EAAE,CAHZ;IAIL/wD,QAAQ,EAAEy4B,KAAK,CAACZ,UAAN,CAAiBC;EAJtB,CAdoB;EAoB3BpN,WAAW,EAAE;IACX2nC,aAAa,EAAEvrD,SADJ;IAEXiqD,eAAe,EAAE,CAFN;IAGXvmC,OAAO,EAAE,IAHE;IAIXsS,IAAI,EAAE;MACJxtB,IAAI,EAAE;IADF,CAJK;;IAOXtP,QAAQ,CAAC2Z,KAAD,EAAQ;MACd,OAAOA,KAAP;IACD,CATU;;IAUXsY,OAAO,EAAE;EAVE;AApBc,CAA7B;AAiCA0gC,iBAAiB,CAAC/6B,aAAlB,GAAkC;EAChC,oBAAoB,aADY;EAEhC,qBAAqB,OAFW;EAGhC,eAAe;AAHiB,CAAlC;AAKA+6B,iBAAiB,CAACnxD,WAAlB,GAAgC;EAC9B+oB,UAAU,EAAE;IACVjd,SAAS,EAAE;EADD;AADkB,CAAhC;AAMA,MAAM8mD,SAAS,GAAG;EAChBC,WAAW,EAAE;IAACC,MAAM,EAAE,IAAT;IAAehlD,IAAI,EAAE,CAArB;IAAwBilD,KAAK,EAAE;EAA/B,CADG;EAEhBC,MAAM,EAAE;IAACF,MAAM,EAAE,IAAT;IAAehlD,IAAI,EAAE,IAArB;IAA2BilD,KAAK,EAAE;EAAlC,CAFQ;EAGhBE,MAAM,EAAE;IAACH,MAAM,EAAE,IAAT;IAAehlD,IAAI,EAAE,KAArB;IAA4BilD,KAAK,EAAE;EAAnC,CAHQ;EAIhBG,IAAI,EAAE;IAACJ,MAAM,EAAE,IAAT;IAAehlD,IAAI,EAAE,OAArB;IAA8BilD,KAAK,EAAE;EAArC,CAJU;EAKhBI,GAAG,EAAE;IAACL,MAAM,EAAE,IAAT;IAAehlD,IAAI,EAAE,QAArB;IAA+BilD,KAAK,EAAE;EAAtC,CALW;EAMhBK,IAAI,EAAE;IAACN,MAAM,EAAE,KAAT;IAAgBhlD,IAAI,EAAE,SAAtB;IAAiCilD,KAAK,EAAE;EAAxC,CANU;EAOhBM,KAAK,EAAE;IAACP,MAAM,EAAE,IAAT;IAAehlD,IAAI,EAAE,OAArB;IAA8BilD,KAAK,EAAE;EAArC,CAPS;EAQhBO,OAAO,EAAE;IAACR,MAAM,EAAE,KAAT;IAAgBhlD,IAAI,EAAE,OAAtB;IAA+BilD,KAAK,EAAE;EAAtC,CARO;EAShBQ,IAAI,EAAE;IAACT,MAAM,EAAE,IAAT;IAAehlD,IAAI,EAAE;EAArB;AATU,CAAlB;AAWA,MAAM0lD,KAAK,GAAI9nD,MAAM,CAACC,IAAP,CAAYinD,SAAZ,CAAf;;AACA,SAASa,MAAT,CAAgBp6D,CAAhB,EAAmBQ,CAAnB,EAAsB;EACpB,OAAOR,CAAC,GAAGQ,CAAX;AACD;;AACD,SAASyc,KAAT,CAAenI,KAAf,EAAsBulD,KAAtB,EAA6B;EAC3B,IAAI14D,aAAa,CAAC04D,KAAD,CAAjB,EAA0B;IACxB,OAAO,IAAP;EACD;;EACD,MAAMC,OAAO,GAAGxlD,KAAK,CAACylD,QAAtB;EACA,MAAMxmD,OAAO,GAAGe,KAAK,CAACf,OAAN,CAAcymD,IAA9B;EACA,MAAM;IAACC,MAAD;IAASv6B,KAAT;IAAgBw6B;EAAhB,IAA8B3mD,OAApC;EACA,IAAIS,KAAK,GAAG6lD,KAAZ;;EACA,IAAI,OAAOI,MAAP,KAAkB,UAAtB,EAAkC;IAChCjmD,KAAK,GAAGimD,MAAM,CAACjmD,KAAD,CAAd;EACD;;EACD,IAAI,CAACnT,cAAc,CAACmT,KAAD,CAAnB,EAA4B;IAC1BA,KAAK,GAAG,OAAOimD,MAAP,KAAkB,QAAlB,GACJH,OAAO,CAACr9C,KAAR,CAAczI,KAAd,EAAqBimD,MAArB,CADI,GAEJH,OAAO,CAACr9C,KAAR,CAAczI,KAAd,CAFJ;EAGD;;EACD,IAAIA,KAAK,KAAK,IAAd,EAAoB;IAClB,OAAO,IAAP;EACD;;EACD,IAAI0rB,KAAJ,EAAW;IACT1rB,KAAK,GAAG0rB,KAAK,KAAK,MAAV,KAAqB/8B,QAAQ,CAACu3D,UAAD,CAAR,IAAwBA,UAAU,KAAK,IAA5D,IACJJ,OAAO,CAACtpC,OAAR,CAAgBxc,KAAhB,EAAuB,SAAvB,EAAkCkmD,UAAlC,CADI,GAEJJ,OAAO,CAACtpC,OAAR,CAAgBxc,KAAhB,EAAuB0rB,KAAvB,CAFJ;EAGD;;EACD,OAAO,CAAC1rB,KAAR;AACD;;AACD,SAASmmD,yBAAT,CAAmCC,OAAnC,EAA4C7tD,GAA5C,EAAiDkC,GAAjD,EAAsD4rD,QAAtD,EAAgE;EAC9D,MAAM9kD,IAAI,GAAGokD,KAAK,CAACxsD,MAAnB;;EACA,KAAK,IAAIrN,CAAC,GAAG65D,KAAK,CAACl0C,OAAN,CAAc20C,OAAd,CAAb,EAAqCt6D,CAAC,GAAGyV,IAAI,GAAG,CAAhD,EAAmD,EAAEzV,CAArD,EAAwD;IACtD,MAAMw6D,QAAQ,GAAGvB,SAAS,CAACY,KAAK,CAAC75D,CAAD,CAAN,CAA1B;IACA,MAAMuP,MAAM,GAAGirD,QAAQ,CAACpB,KAAT,GAAiBoB,QAAQ,CAACpB,KAA1B,GAAkCpiD,MAAM,CAACyjD,gBAAxD;;IACA,IAAID,QAAQ,CAACrB,MAAT,IAAmB3sD,IAAI,CAAC6zB,IAAL,CAAU,CAAC1xB,GAAG,GAAGlC,GAAP,KAAe8C,MAAM,GAAGirD,QAAQ,CAACrmD,IAAjC,CAAV,KAAqDomD,QAA5E,EAAsF;MACpF,OAAOV,KAAK,CAAC75D,CAAD,CAAZ;IACD;EACF;;EACD,OAAO65D,KAAK,CAACpkD,IAAI,GAAG,CAAR,CAAZ;AACD;;AACD,SAASilD,0BAAT,CAAoClmD,KAApC,EAA2CoxB,QAA3C,EAAqD00B,OAArD,EAA8D7tD,GAA9D,EAAmEkC,GAAnE,EAAwE;EACtE,KAAK,IAAI3O,CAAC,GAAG65D,KAAK,CAACxsD,MAAN,GAAe,CAA5B,EAA+BrN,CAAC,IAAI65D,KAAK,CAACl0C,OAAN,CAAc20C,OAAd,CAApC,EAA4Dt6D,CAAC,EAA7D,EAAiE;IAC/D,MAAMwwB,IAAI,GAAGqpC,KAAK,CAAC75D,CAAD,CAAlB;;IACA,IAAIi5D,SAAS,CAACzoC,IAAD,CAAT,CAAgB2oC,MAAhB,IAA0B3kD,KAAK,CAACylD,QAAN,CAAexpC,IAAf,CAAoB9hB,GAApB,EAAyBlC,GAAzB,EAA8B+jB,IAA9B,KAAuCoV,QAAQ,GAAG,CAAhF,EAAmF;MACjF,OAAOpV,IAAP;IACD;EACF;;EACD,OAAOqpC,KAAK,CAACS,OAAO,GAAGT,KAAK,CAACl0C,OAAN,CAAc20C,OAAd,CAAH,GAA4B,CAApC,CAAZ;AACD;;AACD,SAASK,kBAAT,CAA4BnqC,IAA5B,EAAkC;EAChC,KAAK,IAAIxwB,CAAC,GAAG65D,KAAK,CAACl0C,OAAN,CAAc6K,IAAd,IAAsB,CAA9B,EAAiC/a,IAAI,GAAGokD,KAAK,CAACxsD,MAAnD,EAA2DrN,CAAC,GAAGyV,IAA/D,EAAqE,EAAEzV,CAAvE,EAA0E;IACxE,IAAIi5D,SAAS,CAACY,KAAK,CAAC75D,CAAD,CAAN,CAAT,CAAoBm5D,MAAxB,EAAgC;MAC9B,OAAOU,KAAK,CAAC75D,CAAD,CAAZ;IACD;EACF;AACF;;AACD,SAAS46D,OAAT,CAAiBl4C,KAAjB,EAAwBw3C,IAAxB,EAA8BW,UAA9B,EAA0C;EACxC,IAAI,CAACA,UAAL,EAAiB;IACfn4C,KAAK,CAACw3C,IAAD,CAAL,GAAc,IAAd;EACD,CAFD,MAEO,IAAIW,UAAU,CAACxtD,MAAf,EAAuB;IAC5B,MAAM;MAACygB,EAAD;MAAKC;IAAL,IAAW5iB,OAAO,CAAC0vD,UAAD,EAAaX,IAAb,CAAxB;;IACA,MAAM5pC,SAAS,GAAGuqC,UAAU,CAAC/sC,EAAD,CAAV,IAAkBosC,IAAlB,GAAyBW,UAAU,CAAC/sC,EAAD,CAAnC,GAA0C+sC,UAAU,CAAC9sC,EAAD,CAAtE;IACArL,KAAK,CAAC4N,SAAD,CAAL,GAAmB,IAAnB;EACD;AACF;;AACD,SAASwqC,aAAT,CAAuBtmD,KAAvB,EAA8BkO,KAA9B,EAAqCkJ,GAArC,EAA0CmvC,SAA1C,EAAqD;EACnD,MAAMf,OAAO,GAAGxlD,KAAK,CAACylD,QAAtB;EACA,MAAM16B,KAAK,GAAG,CAACy6B,OAAO,CAACtpC,OAAR,CAAgBhO,KAAK,CAAC,CAAD,CAAL,CAASxO,KAAzB,EAAgC6mD,SAAhC,CAAf;EACA,MAAMv1C,IAAI,GAAG9C,KAAK,CAACA,KAAK,CAACrV,MAAN,GAAe,CAAhB,CAAL,CAAwB6G,KAArC;EACA,IAAIwqB,KAAJ,EAAWhpB,KAAX;;EACA,KAAKgpB,KAAK,GAAGa,KAAb,EAAoBb,KAAK,IAAIlZ,IAA7B,EAAmCkZ,KAAK,GAAG,CAACs7B,OAAO,CAAC1rD,GAAR,CAAYowB,KAAZ,EAAmB,CAAnB,EAAsBq8B,SAAtB,CAA5C,EAA8E;IAC5ErlD,KAAK,GAAGkW,GAAG,CAAC8S,KAAD,CAAX;;IACA,IAAIhpB,KAAK,IAAI,CAAb,EAAgB;MACdgN,KAAK,CAAChN,KAAD,CAAL,CAAagpB,KAAb,GAAqB,IAArB;IACD;EACF;;EACD,OAAOhc,KAAP;AACD;;AACD,SAASs4C,mBAAT,CAA6BxmD,KAA7B,EAAoCjB,MAApC,EAA4CwnD,SAA5C,EAAuD;EACrD,MAAMr4C,KAAK,GAAG,EAAd;EACA,MAAMkJ,GAAG,GAAG,EAAZ;EACA,MAAMnW,IAAI,GAAGlC,MAAM,CAAClG,MAApB;EACA,IAAIrN,CAAJ,EAAOkU,KAAP;;EACA,KAAKlU,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyV,IAAhB,EAAsB,EAAEzV,CAAxB,EAA2B;IACzBkU,KAAK,GAAGX,MAAM,CAACvT,CAAD,CAAd;IACA4rB,GAAG,CAAC1X,KAAD,CAAH,GAAalU,CAAb;IACA0iB,KAAK,CAACrU,IAAN,CAAW;MACT6F,KADS;MAETwqB,KAAK,EAAE;IAFE,CAAX;EAID;;EACD,OAAQjpB,IAAI,KAAK,CAAT,IAAc,CAACslD,SAAhB,GAA6Br4C,KAA7B,GAAqCo4C,aAAa,CAACtmD,KAAD,EAAQkO,KAAR,EAAekJ,GAAf,EAAoBmvC,SAApB,CAAzD;AACD;;AACD,MAAME,SAAN,SAAwB74B,KAAxB,CAA8B;EAC5B/2B,WAAW,CAAC2I,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAK8N,MAAL,GAAc;MACZ3L,IAAI,EAAE,EADM;MAEZiH,MAAM,EAAE,EAFI;MAGZ9I,GAAG,EAAE;IAHO,CAAd;IAKA,KAAK4mD,KAAL,GAAa,KAAb;IACA,KAAKC,UAAL,GAAkBxvD,SAAlB;IACA,KAAKyvD,QAAL,GAAgB,EAAhB;IACA,KAAKC,WAAL,GAAmB,KAAnB;EACD;;EACD/3B,IAAI,CAACkT,SAAD,EAAY9hC,IAAZ,EAAkB;IACpB,MAAMwlD,IAAI,GAAG1jB,SAAS,CAAC0jB,IAAV,KAAmB1jB,SAAS,CAAC0jB,IAAV,GAAiB,EAApC,CAAb;IACA,MAAMF,OAAO,GAAG,KAAKC,QAAL,GAAgB,IAAIlpC,QAAQ,CAACC,KAAb,CAAmBwlB,SAAS,CAACzlB,QAAV,CAAmBhlB,IAAtC,CAAhC;IACAhF,OAAO,CAACmzD,IAAI,CAACoB,cAAN,EAAsBtB,OAAO,CAAC5pC,OAAR,EAAtB,CAAP;IACA,MAAMkT,IAAN,CAAWkT,SAAX;IACA,KAAK6kB,WAAL,GAAmB3mD,IAAI,CAAC6mD,UAAxB;EACD;;EACD5+C,KAAK,CAAC7D,GAAD,EAAMpD,KAAN,EAAa;IAChB,IAAIoD,GAAG,KAAKnN,SAAZ,EAAuB;MACrB,OAAO,IAAP;IACD;;IACD,OAAOgR,KAAK,CAAC,IAAD,EAAO7D,GAAP,CAAZ;EACD;;EACDwe,YAAY,GAAG;IACb,MAAMA,YAAN;IACA,KAAKxV,MAAL,GAAc;MACZ3L,IAAI,EAAE,EADM;MAEZiH,MAAM,EAAE,EAFI;MAGZ9I,GAAG,EAAE;IAHO,CAAd;EAKD;;EACD6vB,mBAAmB,GAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAMumD,OAAO,GAAGptD,EAAE,CAACqtD,QAAnB;IACA,MAAMzpC,IAAI,GAAG/c,OAAO,CAACymD,IAAR,CAAa1pC,IAAb,IAAqB,KAAlC;IACA,IAAI;MAAC/jB,GAAD;MAAMkC,GAAN;MAAWmI,UAAX;MAAuBC;IAAvB,IAAqCnK,EAAE,CAACiK,aAAH,EAAzC;;IACA,SAAS2kD,YAAT,CAAsBj+B,MAAtB,EAA8B;MAC5B,IAAI,CAACzmB,UAAD,IAAe,CAAC4O,KAAK,CAAC6X,MAAM,CAAC9wB,GAAR,CAAzB,EAAuC;QACrCA,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAc8wB,MAAM,CAAC9wB,GAArB,CAAN;MACD;;MACD,IAAI,CAACsK,UAAD,IAAe,CAAC2O,KAAK,CAAC6X,MAAM,CAAC5uB,GAAR,CAAzB,EAAuC;QACrCA,GAAG,GAAGnC,IAAI,CAACmC,GAAL,CAASA,GAAT,EAAc4uB,MAAM,CAAC5uB,GAArB,CAAN;MACD;IACF;;IACD,IAAI,CAACmI,UAAD,IAAe,CAACC,UAApB,EAAgC;MAC9BykD,YAAY,CAAC5uD,EAAE,CAAC6uD,eAAH,EAAD,CAAZ;;MACA,IAAIhoD,OAAO,CAAC8pB,MAAR,KAAmB,OAAnB,IAA8B9pB,OAAO,CAACiP,KAAR,CAAcmiB,MAAd,KAAyB,QAA3D,EAAqE;QACnE22B,YAAY,CAAC5uD,EAAE,CAACmR,SAAH,CAAa,KAAb,CAAD,CAAZ;MACD;IACF;;IACDtR,GAAG,GAAG1L,cAAc,CAAC0L,GAAD,CAAd,IAAuB,CAACiZ,KAAK,CAACjZ,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAACutD,OAAO,CAACtpC,OAAR,CAAgB1jB,IAAI,CAACC,GAAL,EAAhB,EAA4BujB,IAA5B,CAAlD;IACA7hB,GAAG,GAAG5N,cAAc,CAAC4N,GAAD,CAAd,IAAuB,CAAC+W,KAAK,CAAC/W,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAACqrD,OAAO,CAACppC,KAAR,CAAc5jB,IAAI,CAACC,GAAL,EAAd,EAA0BujB,IAA1B,CAAD,GAAmC,CAApF;IACA5jB,EAAE,CAACH,GAAH,GAASD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAckC,GAAG,GAAG,CAApB,CAAT;IACA/B,EAAE,CAAC+B,GAAH,GAASnC,IAAI,CAACmC,GAAL,CAASlC,GAAG,GAAG,CAAf,EAAkBkC,GAAlB,CAAT;EACD;;EACD8sD,eAAe,GAAG;IAChB,MAAMv6C,GAAG,GAAG,KAAKw6C,kBAAL,EAAZ;IACA,IAAIjvD,GAAG,GAAGuK,MAAM,CAACE,iBAAjB;IACA,IAAIvI,GAAG,GAAGqI,MAAM,CAACC,iBAAjB;;IACA,IAAIiK,GAAG,CAAC7T,MAAR,EAAgB;MACdZ,GAAG,GAAGyU,GAAG,CAAC,CAAD,CAAT;MACAvS,GAAG,GAAGuS,GAAG,CAACA,GAAG,CAAC7T,MAAJ,GAAa,CAAd,CAAT;IACD;;IACD,OAAO;MAACZ,GAAD;MAAMkC;IAAN,CAAP;EACD;;EACD21B,UAAU,GAAG;IACX,MAAM13B,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAMkoD,QAAQ,GAAGloD,OAAO,CAACymD,IAAzB;IACA,MAAMn7B,QAAQ,GAAGtrB,OAAO,CAACiP,KAAzB;IACA,MAAMm4C,UAAU,GAAG97B,QAAQ,CAAC8F,MAAT,KAAoB,QAApB,GAA+Bj4B,EAAE,CAAC8uD,kBAAH,EAA/B,GAAyD9uD,EAAE,CAACgvD,SAAH,EAA5E;;IACA,IAAInoD,OAAO,CAAC8pB,MAAR,KAAmB,OAAnB,IAA8Bs9B,UAAU,CAACxtD,MAA7C,EAAqD;MACnDT,EAAE,CAACH,GAAH,GAASG,EAAE,CAACo2B,QAAH,IAAe63B,UAAU,CAAC,CAAD,CAAlC;MACAjuD,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACm2B,QAAH,IAAe83B,UAAU,CAACA,UAAU,CAACxtD,MAAX,GAAoB,CAArB,CAAlC;IACD;;IACD,MAAMZ,GAAG,GAAGG,EAAE,CAACH,GAAf;IACA,MAAMkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAf;;IACA,MAAM+T,KAAK,GAAGzX,cAAc,CAAC4vD,UAAD,EAAapuD,GAAb,EAAkBkC,GAAlB,CAA5B;;IACA/B,EAAE,CAACsuD,KAAH,GAAWS,QAAQ,CAACnrC,IAAT,KAAkBuO,QAAQ,CAACT,QAAT,GACzB+7B,yBAAyB,CAACsB,QAAQ,CAACrB,OAAV,EAAmB1tD,EAAE,CAACH,GAAtB,EAA2BG,EAAE,CAAC+B,GAA9B,EAAmC/B,EAAE,CAACivD,iBAAH,CAAqBpvD,GAArB,CAAnC,CADA,GAEzBiuD,0BAA0B,CAAC9tD,EAAD,EAAK8V,KAAK,CAACrV,MAAX,EAAmBsuD,QAAQ,CAACrB,OAA5B,EAAqC1tD,EAAE,CAACH,GAAxC,EAA6CG,EAAE,CAAC+B,GAAhD,CAFnB,CAAX;IAGA/B,EAAE,CAACuuD,UAAH,GAAgB,CAACp8B,QAAQ,CAACL,KAAT,CAAeU,OAAhB,IAA2BxyB,EAAE,CAACsuD,KAAH,KAAa,MAAxC,GAAiDvvD,SAAjD,GACZgvD,kBAAkB,CAAC/tD,EAAE,CAACsuD,KAAJ,CADtB;IAEAtuD,EAAE,CAACkvD,WAAH,CAAejB,UAAf;;IACA,IAAIpnD,OAAO,CAACkB,OAAZ,EAAqB;MACnB+N,KAAK,CAAC/N,OAAN;IACD;;IACD,OAAOqmD,mBAAmB,CAACpuD,EAAD,EAAK8V,KAAL,EAAY9V,EAAE,CAACuuD,UAAf,CAA1B;EACD;;EACDW,WAAW,CAACjB,UAAD,EAAa;IACtB,MAAMjuD,EAAE,GAAG,IAAX;IACA,IAAIF,KAAK,GAAG,CAAZ;IACA,IAAIkI,GAAG,GAAG,CAAV;IACA,IAAI2qB,KAAJ,EAAW/Z,IAAX;;IACA,IAAI5Y,EAAE,CAAC6G,OAAH,CAAWsT,MAAX,IAAqB8zC,UAAU,CAACxtD,MAApC,EAA4C;MAC1CkyB,KAAK,GAAG3yB,EAAE,CAACmvD,kBAAH,CAAsBlB,UAAU,CAAC,CAAD,CAAhC,CAAR;;MACA,IAAIA,UAAU,CAACxtD,MAAX,KAAsB,CAA1B,EAA6B;QAC3BX,KAAK,GAAG,IAAI6yB,KAAZ;MACD,CAFD,MAEO;QACL7yB,KAAK,GAAG,CAACE,EAAE,CAACmvD,kBAAH,CAAsBlB,UAAU,CAAC,CAAD,CAAhC,IAAuCt7B,KAAxC,IAAiD,CAAzD;MACD;;MACD/Z,IAAI,GAAG5Y,EAAE,CAACmvD,kBAAH,CAAsBlB,UAAU,CAACA,UAAU,CAACxtD,MAAX,GAAoB,CAArB,CAAhC,CAAP;;MACA,IAAIwtD,UAAU,CAACxtD,MAAX,KAAsB,CAA1B,EAA6B;QAC3BuH,GAAG,GAAG4Q,IAAN;MACD,CAFD,MAEO;QACL5Q,GAAG,GAAG,CAAC4Q,IAAI,GAAG5Y,EAAE,CAACmvD,kBAAH,CAAsBlB,UAAU,CAACA,UAAU,CAACxtD,MAAX,GAAoB,CAArB,CAAhC,CAAR,IAAoE,CAA1E;MACD;IACF;;IACD,MAAM2uD,KAAK,GAAGnB,UAAU,CAACxtD,MAAX,GAAoB,CAApB,GAAwB,GAAxB,GAA8B,IAA5C;IACAX,KAAK,GAAG3J,WAAW,CAAC2J,KAAD,EAAQ,CAAR,EAAWsvD,KAAX,CAAnB;IACApnD,GAAG,GAAG7R,WAAW,CAAC6R,GAAD,EAAM,CAAN,EAASonD,KAAT,CAAjB;IACApvD,EAAE,CAACwuD,QAAH,GAAc;MAAC1uD,KAAD;MAAQkI,GAAR;MAAarF,MAAM,EAAE,KAAK7C,KAAK,GAAG,CAAR,GAAYkI,GAAjB;IAArB,CAAd;EACD;;EACDgnD,SAAS,GAAG;IACV,MAAMhvD,EAAE,GAAG,IAAX;IACA,MAAMotD,OAAO,GAAGptD,EAAE,CAACqtD,QAAnB;IACA,MAAMxtD,GAAG,GAAGG,EAAE,CAACH,GAAf;IACA,MAAMkC,GAAG,GAAG/B,EAAE,CAAC+B,GAAf;IACA,MAAM8E,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAMkoD,QAAQ,GAAGloD,OAAO,CAACymD,IAAzB;IACA,MAAMz7B,KAAK,GAAGk9B,QAAQ,CAACnrC,IAAT,IAAiB6pC,yBAAyB,CAACsB,QAAQ,CAACrB,OAAV,EAAmB7tD,GAAnB,EAAwBkC,GAAxB,EAA6B/B,EAAE,CAACivD,iBAAH,CAAqBpvD,GAArB,CAA7B,CAAxD;IACA,MAAMooD,QAAQ,GAAGt0D,cAAc,CAACo7D,QAAQ,CAAC9G,QAAV,EAAoB,CAApB,CAA/B;IACA,MAAMlkC,OAAO,GAAG8N,KAAK,KAAK,MAAV,GAAmBk9B,QAAQ,CAACvB,UAA5B,GAAyC,KAAzD;IACA,MAAM6B,UAAU,GAAGp5D,QAAQ,CAAC8tB,OAAD,CAAR,IAAqBA,OAAO,KAAK,IAApD;IACA,MAAMjO,KAAK,GAAG,EAAd;IACA,IAAI6c,KAAK,GAAG9yB,GAAZ;IACA,IAAIytD,IAAJ,EAAUt9C,KAAV;;IACA,IAAIq/C,UAAJ,EAAgB;MACd18B,KAAK,GAAG,CAACy6B,OAAO,CAACtpC,OAAR,CAAgB6O,KAAhB,EAAuB,SAAvB,EAAkC5O,OAAlC,CAAT;IACD;;IACD4O,KAAK,GAAG,CAACy6B,OAAO,CAACtpC,OAAR,CAAgB6O,KAAhB,EAAuB08B,UAAU,GAAG,KAAH,GAAWx9B,KAA5C,CAAT;;IACA,IAAIu7B,OAAO,CAACvpC,IAAR,CAAa9hB,GAAb,EAAkBlC,GAAlB,EAAuBgyB,KAAvB,IAAgC,SAASo2B,QAA7C,EAAuD;MACrD,MAAM,IAAI3kC,KAAJ,CAAUzjB,GAAG,GAAG,OAAN,GAAgBkC,GAAhB,GAAsB,sCAAtB,GAA+DkmD,QAA/D,GAA0E,GAA1E,GAAgFp2B,KAA1F,CAAN;IACD;;IACD,MAAMo8B,UAAU,GAAGpnD,OAAO,CAACiP,KAAR,CAAcmiB,MAAd,KAAyB,MAAzB,IAAmCj4B,EAAE,CAACsvD,iBAAH,EAAtD;;IACA,KAAKhC,IAAI,GAAG36B,KAAP,EAAc3iB,KAAK,GAAG,CAA3B,EAA8Bs9C,IAAI,GAAGvrD,GAArC,EAA0CurD,IAAI,GAAG,CAACF,OAAO,CAAC1rD,GAAR,CAAY4rD,IAAZ,EAAkBrF,QAAlB,EAA4Bp2B,KAA5B,CAAR,EAA4C7hB,KAAK,EAA3F,EAA+F;MAC7Fg+C,OAAO,CAACl4C,KAAD,EAAQw3C,IAAR,EAAcW,UAAd,CAAP;IACD;;IACD,IAAIX,IAAI,KAAKvrD,GAAT,IAAgB8E,OAAO,CAAC8pB,MAAR,KAAmB,OAAnC,IAA8C3gB,KAAK,KAAK,CAA5D,EAA+D;MAC7Dg+C,OAAO,CAACl4C,KAAD,EAAQw3C,IAAR,EAAcW,UAAd,CAAP;IACD;;IACD,OAAO9oD,MAAM,CAACC,IAAP,CAAY0Q,KAAZ,EAAmBP,IAAnB,CAAwB,CAACziB,CAAD,EAAIQ,CAAJ,KAAUR,CAAC,GAAGQ,CAAtC,EAAyC0rB,GAAzC,CAA6C9oB,CAAC,IAAI,CAACA,CAAnD,CAAP;EACD;;EACD2b,gBAAgB,CAACvK,KAAD,EAAQ;IACtB,MAAMtH,EAAE,GAAG,IAAX;IACA,MAAMotD,OAAO,GAAGptD,EAAE,CAACqtD,QAAnB;IACA,MAAM0B,QAAQ,GAAG/uD,EAAE,CAAC6G,OAAH,CAAWymD,IAA5B;;IACA,IAAIyB,QAAQ,CAACQ,aAAb,EAA4B;MAC1B,OAAOnC,OAAO,CAAC3pC,MAAR,CAAenc,KAAf,EAAsBynD,QAAQ,CAACQ,aAA/B,CAAP;IACD;;IACD,OAAOnC,OAAO,CAAC3pC,MAAR,CAAenc,KAAf,EAAsBynD,QAAQ,CAACL,cAAT,CAAwBc,QAA9C,CAAP;EACD;;EACDC,mBAAmB,CAACnC,IAAD,EAAOxkD,KAAP,EAAcgN,KAAd,EAAqB2N,MAArB,EAA6B;IAC9C,MAAMzjB,EAAE,GAAG,IAAX;IACA,MAAM6G,OAAO,GAAG7G,EAAE,CAAC6G,OAAnB;IACA,MAAM2c,OAAO,GAAG3c,OAAO,CAACymD,IAAR,CAAaoB,cAA7B;IACA,MAAM9qC,IAAI,GAAG5jB,EAAE,CAACsuD,KAAhB;IACA,MAAMH,SAAS,GAAGnuD,EAAE,CAACuuD,UAArB;IACA,MAAMmB,WAAW,GAAG9rC,IAAI,IAAIJ,OAAO,CAACI,IAAD,CAAnC;IACA,MAAM+rC,WAAW,GAAGxB,SAAS,IAAI3qC,OAAO,CAAC2qC,SAAD,CAAxC;IACA,MAAMrtD,IAAI,GAAGgV,KAAK,CAAChN,KAAD,CAAlB;IACA,MAAMgpB,KAAK,GAAGq8B,SAAS,IAAIwB,WAAb,IAA4B7uD,IAA5B,IAAoCA,IAAI,CAACgxB,KAAvD;;IACA,MAAMlgB,KAAK,GAAG5R,EAAE,CAACqtD,QAAH,CAAY5pC,MAAZ,CAAmB6pC,IAAnB,EAAyB7pC,MAAM,KAAKqO,KAAK,GAAG69B,WAAH,GAAiBD,WAA3B,CAA/B,CAAd;;IACA,MAAME,SAAS,GAAG/oD,OAAO,CAACiP,KAAR,CAAc7d,QAAhC;IACA,OAAO23D,SAAS,GAAGA,SAAS,CAACh+C,KAAD,EAAQ9I,KAAR,EAAegN,KAAf,CAAZ,GAAoClE,KAApD;EACD;;EACDknB,kBAAkB,CAAChjB,KAAD,EAAQ;IACxB,IAAI1iB,CAAJ,EAAOyV,IAAP,EAAa/H,IAAb;;IACA,KAAK1N,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGiN,KAAK,CAACrV,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2C,EAAEzV,CAA7C,EAAgD;MAC9C0N,IAAI,GAAGgV,KAAK,CAAC1iB,CAAD,CAAZ;MACA0N,IAAI,CAAC8Q,KAAL,GAAa,KAAK69C,mBAAL,CAAyB3uD,IAAI,CAACwG,KAA9B,EAAqClU,CAArC,EAAwC0iB,KAAxC,CAAb;IACD;EACF;;EACDq5C,kBAAkB,CAAC7nD,KAAD,EAAQ;IACxB,MAAMtH,EAAE,GAAG,IAAX;IACA,OAAOsH,KAAK,KAAK,IAAV,GAAiB4J,GAAjB,GAAuB,CAAC5J,KAAK,GAAGtH,EAAE,CAACH,GAAZ,KAAoBG,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACH,GAAhC,CAA9B;EACD;;EACDgW,gBAAgB,CAACvO,KAAD,EAAQ;IACtB,MAAMtH,EAAE,GAAG,IAAX;IACA,MAAM6vD,OAAO,GAAG7vD,EAAE,CAACwuD,QAAnB;IACA,MAAMznC,GAAG,GAAG/mB,EAAE,CAACmvD,kBAAH,CAAsB7nD,KAAtB,CAAZ;IACA,OAAOtH,EAAE,CAAC0a,kBAAH,CAAsB,CAACm1C,OAAO,CAAC/vD,KAAR,GAAgBinB,GAAjB,IAAwB8oC,OAAO,CAACltD,MAAtD,CAAP;EACD;;EACDy4B,gBAAgB,CAACC,KAAD,EAAQ;IACtB,MAAMr7B,EAAE,GAAG,IAAX;IACA,MAAM6vD,OAAO,GAAG7vD,EAAE,CAACwuD,QAAnB;IACA,MAAMznC,GAAG,GAAG/mB,EAAE,CAACu7B,kBAAH,CAAsBF,KAAtB,IAA+Bw0B,OAAO,CAACltD,MAAvC,GAAgDktD,OAAO,CAAC7nD,GAApE;IACA,OAAOhI,EAAE,CAACH,GAAH,GAASknB,GAAG,IAAI/mB,EAAE,CAAC+B,GAAH,GAAS/B,EAAE,CAACH,GAAhB,CAAnB;EACD;;EACDiwD,aAAa,CAACl+C,KAAD,EAAQ;IACnB,MAAM5R,EAAE,GAAG,IAAX;IACA,MAAM+vD,SAAS,GAAG/vD,EAAE,CAAC6G,OAAH,CAAWiP,KAA7B;IACA,MAAMk6C,cAAc,GAAGhwD,EAAE,CAAC2M,GAAH,CAAOkuC,WAAP,CAAmBjpC,KAAnB,EAA0B8G,KAAjD;IACA,MAAMuD,KAAK,GAAGhnB,SAAS,CAAC+K,EAAE,CAACgY,YAAH,KAAoB+3C,SAAS,CAACz+B,WAA9B,GAA4Cy+B,SAAS,CAAC1+B,WAAvD,CAAvB;IACA,MAAM4+B,WAAW,GAAGrwD,IAAI,CAAC+b,GAAL,CAASM,KAAT,CAApB;IACA,MAAMi0C,WAAW,GAAGtwD,IAAI,CAACic,GAAL,CAASI,KAAT,CAApB;;IACA,MAAMk0C,YAAY,GAAGnwD,EAAE,CAACg7B,uBAAH,CAA2B,CAA3B,EAA8BzzB,IAAnD;;IACA,OAAO;MACLvR,CAAC,EAAGg6D,cAAc,GAAGC,WAAlB,GAAkCE,YAAY,GAAGD,WAD/C;MAEL97D,CAAC,EAAG47D,cAAc,GAAGE,WAAlB,GAAkCC,YAAY,GAAGF;IAF/C,CAAP;EAID;;EACDhB,iBAAiB,CAACmB,WAAD,EAAc;IAC7B,MAAMpwD,EAAE,GAAG,IAAX;IACA,MAAM+uD,QAAQ,GAAG/uD,EAAE,CAAC6G,OAAH,CAAWymD,IAA5B;IACA,MAAMoB,cAAc,GAAGK,QAAQ,CAACL,cAAhC;IACA,MAAMjrC,MAAM,GAAGirC,cAAc,CAACK,QAAQ,CAACnrC,IAAV,CAAd,IAAiC8qC,cAAc,CAACpC,WAA/D;;IACA,MAAM+D,YAAY,GAAGrwD,EAAE,CAACyvD,mBAAH,CAAuBW,WAAvB,EAAoC,CAApC,EAAuChC,mBAAmB,CAACpuD,EAAD,EAAK,CAACowD,WAAD,CAAL,EAAoBpwD,EAAE,CAACuuD,UAAvB,CAA1D,EAA8F9qC,MAA9F,CAArB;;IACA,MAAMlc,IAAI,GAAGvH,EAAE,CAAC8vD,aAAH,CAAiBO,YAAjB,CAAb;;IACA,MAAM1C,QAAQ,GAAG/tD,IAAI,CAACgE,KAAL,CAAW5D,EAAE,CAACgY,YAAH,KAAoBhY,EAAE,CAAC0Y,KAAH,GAAWnR,IAAI,CAACvR,CAApC,GAAwCgK,EAAE,CAACyY,MAAH,GAAYlR,IAAI,CAACnT,CAApE,IAAyE,CAA1F;IACA,OAAOu5D,QAAQ,GAAG,CAAX,GAAeA,QAAf,GAA0B,CAAjC;EACD;;EACD2B,iBAAiB,GAAG;IAClB,MAAMtvD,EAAE,GAAG,IAAX;IACA,IAAIiuD,UAAU,GAAGjuD,EAAE,CAACkV,MAAH,CAAU3L,IAAV,IAAkB,EAAnC;IACA,IAAInW,CAAJ,EAAOyV,IAAP;;IACA,IAAIolD,UAAU,CAACxtD,MAAf,EAAuB;MACrB,OAAOwtD,UAAP;IACD;;IACD,MAAM74C,KAAK,GAAGpV,EAAE,CAACqV,uBAAH,EAAd;;IACA,IAAIrV,EAAE,CAACyuD,WAAH,IAAkBr5C,KAAK,CAAC3U,MAA5B,EAAoC;MAClC,OAAQT,EAAE,CAACkV,MAAH,CAAU3L,IAAV,GAAiB6L,KAAK,CAAC,CAAD,CAAL,CAASvK,UAAT,CAAoB4G,kBAApB,CAAuCzR,EAAvC,CAAzB;IACD;;IACD,KAAK5M,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGuM,KAAK,CAAC3U,MAAzB,EAAiCrN,CAAC,GAAGyV,IAArC,EAA2C,EAAEzV,CAA7C,EAAgD;MAC9C66D,UAAU,GAAGA,UAAU,CAAC34C,MAAX,CAAkBF,KAAK,CAAChiB,CAAD,CAAL,CAASyX,UAAT,CAAoB4G,kBAApB,CAAuCzR,EAAvC,CAAlB,CAAb;IACD;;IACD,OAAQA,EAAE,CAACkV,MAAH,CAAU3L,IAAV,GAAiBvJ,EAAE,CAACswD,SAAH,CAAarC,UAAb,CAAzB;EACD;;EACDa,kBAAkB,GAAG;IACnB,MAAM9uD,EAAE,GAAG,IAAX;IACA,MAAMiuD,UAAU,GAAGjuD,EAAE,CAACkV,MAAH,CAAU1E,MAAV,IAAoB,EAAvC;IACA,IAAIpd,CAAJ,EAAOyV,IAAP;;IACA,IAAIolD,UAAU,CAACxtD,MAAf,EAAuB;MACrB,OAAOwtD,UAAP;IACD;;IACD,MAAMz9C,MAAM,GAAGxQ,EAAE,CAACyQ,SAAH,EAAf;;IACA,KAAKrd,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAG2H,MAAM,CAAC/P,MAA1B,EAAkCrN,CAAC,GAAGyV,IAAtC,EAA4C,EAAEzV,CAA9C,EAAiD;MAC/C66D,UAAU,CAACxsD,IAAX,CAAgBsO,KAAK,CAAC/P,EAAD,EAAKwQ,MAAM,CAACpd,CAAD,CAAX,CAArB;IACD;;IACD,OAAQ4M,EAAE,CAACkV,MAAH,CAAU1E,MAAV,GAAmBxQ,EAAE,CAACyuD,WAAH,GAAiBR,UAAjB,GAA8BjuD,EAAE,CAACswD,SAAH,CAAarC,UAAb,CAAzD;EACD;;EACDqC,SAAS,CAAC3pD,MAAD,EAAS;IAChB,OAAO5R,YAAY,CAAC4R,MAAM,CAAC4O,IAAP,CAAY23C,MAAZ,CAAD,CAAnB;EACD;;AAvP2B;;AAyP9BmB,SAAS,CAACrkD,EAAV,GAAe,MAAf;AACAqkD,SAAS,CAAC56D,QAAV,GAAqB;EACnBk9B,MAAM,EAAE,MADW;EAEnBxM,QAAQ,EAAE,EAFS;EAGnBmpC,IAAI,EAAE;IACJC,MAAM,EAAE,KADJ;IAEJ3pC,IAAI,EAAE,KAFF;IAGJoP,KAAK,EAAE,KAHH;IAIJw6B,UAAU,EAAE,KAJR;IAKJE,OAAO,EAAE,aALL;IAMJgB,cAAc,EAAE;EANZ,CAHa;EAWnB54C,KAAK,EAAE;IACLmiB,MAAM,EAAE,MADH;IAELnG,KAAK,EAAE;MACLU,OAAO,EAAE;IADJ;EAFF;AAXY,CAArB;;AAmBA,SAASme,WAAT,CAAqB4f,KAArB,EAA4B13C,GAA5B,EAAiC9Q,OAAjC,EAA0C;EACxC,IAAIyoD,UAAJ,EAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,UAAxC;;EACA,IAAI5oD,OAAJ,EAAa;IACXyoD,UAAU,GAAG5wD,IAAI,CAACgE,KAAL,CAAWiV,GAAX,CAAb;IACA43C,UAAU,GAAG7wD,IAAI,CAAC6zB,IAAL,CAAU5a,GAAV,CAAb;IACA63C,UAAU,GAAGH,KAAK,CAACC,UAAD,CAAlB;IACAG,UAAU,GAAGJ,KAAK,CAACE,UAAD,CAAlB;EACD,CALD,MAKO;IACL,MAAMj9B,MAAM,GAAGj1B,OAAO,CAACgyD,KAAD,EAAQ13C,GAAR,CAAtB;;IACA63C,UAAU,GAAGl9B,MAAM,CAACtS,EAApB;IACAyvC,UAAU,GAAGn9B,MAAM,CAACrS,EAApB;IACAqvC,UAAU,GAAGD,KAAK,CAACG,UAAD,CAAlB;IACAD,UAAU,GAAGF,KAAK,CAACI,UAAD,CAAlB;EACD;;EACD,MAAMC,IAAI,GAAGH,UAAU,GAAGD,UAA1B;EACA,OAAOI,IAAI,GAAGF,UAAU,GAAG,CAACC,UAAU,GAAGD,UAAd,KAA6B73C,GAAG,GAAG23C,UAAnC,IAAiDI,IAAjE,GAAwEF,UAAnF;AACD;;AACD,MAAMG,eAAN,SAA8BxC,SAA9B,CAAwC;EACtC5vD,WAAW,CAAC2I,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAK0pD,MAAL,GAAc,EAAd;IACA,KAAKC,SAAL,GAAiBhyD,SAAjB;EACD;;EACDmwD,WAAW,GAAG;IACZ,MAAMlvD,EAAE,GAAG,IAAX;;IACA,MAAMiuD,UAAU,GAAGjuD,EAAE,CAACgxD,sBAAH,EAAnB;;IACAhxD,EAAE,CAAC8wD,MAAH,GAAY9wD,EAAE,CAACixD,gBAAH,CAAoBhD,UAApB,CAAZ;IACAjuD,EAAE,CAAC+wD,SAAH,GAAe/wD,EAAE,CAAC8wD,MAAH,CAAUrwD,MAAV,GAAmB,CAAlC;IACA,MAAMyuD,WAAN,CAAkBjB,UAAlB;EACD;;EACDgD,gBAAgB,CAAChD,UAAD,EAAa;IAC3B,MAAMjuD,EAAE,GAAG,IAAX;IACA,MAAM;MAACH,GAAD;MAAMkC;IAAN,IAAa/B,EAAnB;;IACA,IAAI,CAACiuD,UAAU,CAACxtD,MAAhB,EAAwB;MACtB,OAAO,CACL;QAAC6sD,IAAI,EAAEztD,GAAP;QAAYknB,GAAG,EAAE;MAAjB,CADK,EAEL;QAACumC,IAAI,EAAEvrD,GAAP;QAAYglB,GAAG,EAAE;MAAjB,CAFK,CAAP;IAID;;IACD,MAAMvmB,KAAK,GAAG,CAACX,GAAD,CAAd;IACA,IAAIzM,CAAJ,EAAOyV,IAAP,EAAa6M,IAAb;;IACA,KAAKtiB,CAAC,GAAG,CAAJ,EAAOyV,IAAI,GAAGolD,UAAU,CAACxtD,MAA9B,EAAsCrN,CAAC,GAAGyV,IAA1C,EAAgD,EAAEzV,CAAlD,EAAqD;MACnDsiB,IAAI,GAAGu4C,UAAU,CAAC76D,CAAD,CAAjB;;MACA,IAAIsiB,IAAI,GAAG7V,GAAP,IAAc6V,IAAI,GAAG3T,GAAzB,EAA8B;QAC5BvB,KAAK,CAACiB,IAAN,CAAWiU,IAAX;MACD;IACF;;IACDlV,KAAK,CAACiB,IAAN,CAAWM,GAAX;IACA,OAAOvB,KAAP;EACD;;EACDwwD,sBAAsB,GAAG;IACvB,MAAMhxD,EAAE,GAAG,IAAX;IACA,IAAIiuD,UAAU,GAAGjuD,EAAE,CAACkV,MAAH,CAAUxN,GAAV,IAAiB,EAAlC;;IACA,IAAIumD,UAAU,CAACxtD,MAAf,EAAuB;MACrB,OAAOwtD,UAAP;IACD;;IACD,MAAM1kD,IAAI,GAAGvJ,EAAE,CAACsvD,iBAAH,EAAb;IACA,MAAM19C,KAAK,GAAG5R,EAAE,CAAC8uD,kBAAH,EAAd;;IACA,IAAIvlD,IAAI,CAAC9I,MAAL,IAAemR,KAAK,CAACnR,MAAzB,EAAiC;MAC/BwtD,UAAU,GAAGjuD,EAAE,CAACswD,SAAH,CAAa/mD,IAAI,CAAC+L,MAAL,CAAY1D,KAAZ,CAAb,CAAb;IACD,CAFD,MAEO;MACLq8C,UAAU,GAAG1kD,IAAI,CAAC9I,MAAL,GAAc8I,IAAd,GAAqBqI,KAAlC;IACD;;IACDq8C,UAAU,GAAGjuD,EAAE,CAACkV,MAAH,CAAUxN,GAAV,GAAgBumD,UAA7B;IACA,OAAOA,UAAP;EACD;;EACDp4C,gBAAgB,CAACvO,KAAD,EAAQwB,KAAR,EAAe;IAC7B,MAAM9I,EAAE,GAAG,IAAX;IACA,MAAM6vD,OAAO,GAAG7vD,EAAE,CAACwuD,QAAnB;IACA,MAAMznC,GAAG,GAAG/mB,EAAE,CAACyuD,WAAH,IAAkBzuD,EAAE,CAAC+wD,SAAH,GAAe,CAAjC,IAAsC,CAACt8D,aAAa,CAACqU,KAAD,CAApD,GACRA,KAAK,GAAG9I,EAAE,CAAC+wD,SADH,GACe/wD,EAAE,CAACmvD,kBAAH,CAAsB7nD,KAAtB,CAD3B;IAEA,OAAOtH,EAAE,CAAC0a,kBAAH,CAAsB,CAACm1C,OAAO,CAAC/vD,KAAR,GAAgBinB,GAAjB,IAAwB8oC,OAAO,CAACltD,MAAtD,CAAP;EACD;;EACDwsD,kBAAkB,CAAC7nD,KAAD,EAAQ;IACxB,OAAOqpC,WAAW,CAAC,KAAKmgB,MAAN,EAAcxpD,KAAd,CAAX,GAAkC,KAAKypD,SAA9C;EACD;;EACD31B,gBAAgB,CAACC,KAAD,EAAQ;IACtB,MAAMr7B,EAAE,GAAG,IAAX;IACA,MAAM6vD,OAAO,GAAG7vD,EAAE,CAACwuD,QAAnB;IACA,MAAMlzB,OAAO,GAAGt7B,EAAE,CAACu7B,kBAAH,CAAsBF,KAAtB,IAA+Bw0B,OAAO,CAACltD,MAAvC,GAAgDktD,OAAO,CAAC7nD,GAAxE;IACA,OAAO2oC,WAAW,CAAC3wC,EAAE,CAAC8wD,MAAJ,EAAYx1B,OAAO,GAAG,KAAKy1B,SAA3B,EAAsC,IAAtC,CAAlB;EACD;;AAhEqC;;AAkExCF,eAAe,CAAC7mD,EAAhB,GAAqB,YAArB;AACA6mD,eAAe,CAACp9D,QAAhB,GAA2B46D,SAAS,CAAC56D,QAArC;AAEA,IAAI+X,MAAM,GAAG,aAAarG,MAAM,CAAC8N,MAAP,CAAc;EACxCmQ,SAAS,EAAE,IAD6B;EAExCmjC,aAAa,EAAEA,aAFyB;EAGxC6B,WAAW,EAAEA,WAH2B;EAIxCS,gBAAgB,EAAEA,gBAJsB;EAKxC+B,iBAAiB,EAAEA,iBALqB;EAMxCyD,SAAS,EAAEA,SAN6B;EAOxCwC,eAAe,EAAEA;AAPuB,CAAd,CAA1B;AAUA,MAAMK,aAAa,GAAG,CACpB/tC,WADoB,EAEpBnR,QAFoB,EAGpB6I,OAHoB,EAIpBrP,MAJoB,CAAtB;AAOA,SAAStI,SAAT,EAAoB+C,UAApB,EAAgC8nC,UAAhC,EAA4Cv2B,aAA5C,EAA2Dg8B,UAA3D,EAAuE5oB,YAAvE,EAAqFS,aAArF,EAAoG9Q,gBAApG,EAAsHgsC,aAAtH,EAAqI7e,KAArI,EAA4Ij7B,iBAA5I,EAA+J6oC,iBAAiB,IAAI4Q,UAApL,EAAgMn3B,WAAhM,EAA6MxS,kBAA7M,EAAiOgT,OAAjO,EAA0OspB,aAAa,IAAIsN,MAA3P,EAAmQ1/B,WAAnQ,EAAgR42B,aAAa,IAAIzD,MAAjS,EAAyS55B,cAAzS,EAAyTswB,WAAzT,EAAsU8X,WAAtU,EAAmVS,gBAAnV,EAAqWjmC,aAArW,EAAoXuuB,YAApX,EAAkYxvB,mBAAlY,EAAuZkB,eAAvZ,EAAwa+nC,iBAAxa,EAA2bp1B,KAA3b,EAAkctS,iBAAlc,EAAqdwN,KAArd,EAA4d29B,SAA5d,EAAuewC,eAAve,EAAwf7S,YAAY,IAAIP,KAAxgB,EAA+gBqI,cAAc,IAAIpE,OAAjiB,EAA0iBv9B,QAAQ,IAAIgtC,SAAtjB,EAAikB9uD,QAAjkB,EAA2kB8gB,WAA3kB,EAAwlBnR,QAAxlB,EAAkmByV,OAAlmB,EAA2mB5M,OAA3mB,EAAonBq2C,aAApnB,EAAmoBjvB,QAAnoB,EAA6oBz2B,MAA7oB"},"metadata":{},"sourceType":"module"}