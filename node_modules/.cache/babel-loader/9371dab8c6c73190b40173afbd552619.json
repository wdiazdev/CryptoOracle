{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wadf\\\\Desktop\\\\React Tutorial\\\\CryptoOracle\\\\src\\\\components\\\\CryptoInfo.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { OracleContextState } from '../OracleContext';\nimport { HistoricalChart } from '../config/api';\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoInfo = crypto => {\n  _s();\n\n  const [chartData, setChartData] = useState();\n  const [days, setDays] = useState(1);\n  const {\n    currency\n  } = OracleContextState();\n\n  const fetchChartData = async () => {\n    const {\n      data\n    } = await axios.get(HistoricalChart(crypto.id, days, currency));\n    setChartData(data.prices);\n  };\n\n  useEffect(() => {\n    fetchChartData();\n  }, []);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CryptoInfo, \"7WZbQnYpvU005vAo96Hoztj0X48=\");\n\n_c = CryptoInfo;\nexport default CryptoInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoInfo\");","map":{"version":3,"names":["axios","React","useEffect","useState","OracleContextState","HistoricalChart","createTheme","ThemeProvider","CryptoInfo","crypto","chartData","setChartData","days","setDays","currency","fetchChartData","data","get","id","prices","darkTheme","palette","primary","main","type"],"sources":["C:/Users/Wadf/Desktop/React Tutorial/CryptoOracle/src/components/CryptoInfo.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { OracleContextState } from '../OracleContext';\r\nimport { HistoricalChart } from '../config/api';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core';\r\n\r\n\r\nconst CryptoInfo = (crypto) => {\r\n    const [chartData, setChartData] = useState();\r\n    const [days, setDays] = useState(1);\r\n    const { currency } = OracleContextState();\r\n\r\n    const fetchChartData = async () => {\r\n        const { data } = await axios.get(HistoricalChart(crypto.id, days, currency));\r\n\r\n        setChartData(data.prices);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchChartData();\r\n    }, []);\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: \"#fff\",\r\n            },\r\n            type: \"dark\",\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n\r\n        </ThemeProvider>\r\n    )\r\n\r\n};\r\n\r\nexport default CryptoInfo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,mBAA3C;;;AAGA,MAAMC,UAAU,GAAIC,MAAD,IAAY;EAAA;;EAC3B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM;IAAEW;EAAF,IAAeV,kBAAkB,EAAvC;;EAEA,MAAMW,cAAc,GAAG,YAAY;IAC/B,MAAM;MAAEC;IAAF,IAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAUZ,eAAe,CAACI,MAAM,CAACS,EAAR,EAAYN,IAAZ,EAAkBE,QAAlB,CAAzB,CAAvB;IAEAH,YAAY,CAACK,IAAI,CAACG,MAAN,CAAZ;EACH,CAJD;;EAMAjB,SAAS,CAAC,MAAM;IACZa,cAAc;EACjB,CAFQ,EAEN,EAFM,CAAT;EAIA,MAAMK,SAAS,GAAGd,WAAW,CAAC;IAC1Be,OAAO,EAAE;MACLC,OAAO,EAAE;QACLC,IAAI,EAAE;MADD,CADJ;MAILC,IAAI,EAAE;IAJD;EADiB,CAAD,CAA7B;EASA,oBACI,QAAC,aAAD;IAAe,KAAK,EAAEJ;EAAtB;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CA9BD;;GAAMZ,U;;KAAAA,U;AAgCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}