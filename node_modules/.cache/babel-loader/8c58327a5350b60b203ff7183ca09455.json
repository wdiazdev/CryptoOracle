{"ast":null,"code":"/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    const me = this;\n\n    if (me._request) {\n      return;\n    }\n\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n\n      me._request = null;\n\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    const me = this;\n    let remaining = 0;\n\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        me._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        me._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    me._lastDate = date;\n\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    const me = this;\n\n    if (me._active) {\n      me._notify(false);\n\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    const me = this;\n\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n\n      me._notify(false);\n    }\n  }\n\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n\n    if (!me._active) {\n      me._target[prop] = to;\n\n      me._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    me._dataCheck();\n\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n\n    me._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    me._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = me._getOtherScale(scale);\n\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => me.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      me.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n\n    me.parse(start, count);\n\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = me._getRuler();\n\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      me.updateElement(point, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n    const chartWeight = me._getRingWeight(me.index);\n\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n\n    const circumference = me._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n\n    let startAngle = me._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n\n          if (controller !== me) {\n            controller.configure();\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return me;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    me.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n\n    const display = me._isVisible();\n\n    const isHorizontal = me.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    me._handleMargins();\n\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    const me = this;\n\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    me.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    const me = this;\n\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = me._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n\n    const labelSizes = me._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    const me = this;\n\n    if (me.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = me.chart;\n    const position = me.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = me.ctx;\n\n    const area = me._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    const me = this;\n\n    if (!me._isVisible()) {\n      return;\n    }\n\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n\n      }];\n    }\n\n    return [{\n      z: gz,\n\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n\n    }, {\n      z: gz + 1,\n\n      draw() {\n        me.drawBorder();\n      }\n\n    }, {\n      z: tz,\n\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const me = this;\n\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._each('register', args);\n  }\n\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._each('unregister', args);\n  }\n\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this._each('register', args, this.controllers);\n  }\n\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this._each('register', args, this.plugins);\n  }\n\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    const me = this;\n\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n\n      me._notify(me._init, chart, 'install');\n    }\n\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n    const result = me._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n\n      me._notify(me._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.5.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n\n    me._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n\n        meta = me.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    me._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n\n    me._plugins.invalidate();\n\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    me._minPadding = minPadding;\n\n    me._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    me._updateDatasets(mode);\n\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    me._layers.sort(compare2Level('z', '_idx'));\n\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n\n    me.render();\n  }\n\n  _updateLayout(minPadding) {\n    const me = this;\n\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      me._layers.push(...box._layers());\n    }, me);\n\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    me.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n\n  draw() {\n    const me = this;\n    let i;\n\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n\n      me._resize(width, height);\n\n      me._resizeBeforeDraw = null;\n    }\n\n    me.clear();\n\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = me._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = me.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n\n      delete me._metasets[datasetIndex];\n    }\n  }\n\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n\n    me.config.clearCache();\n\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      me._eventHandler(e);\n    };\n\n    each(me.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    const me = this;\n\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      me.attached = true;\n      me.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      me.attached = false;\n\n      _remove('resize', listener);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(_ref => {\n      let {\n        datasetIndex,\n        index\n      } = _ref;\n      const meta = me.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = me._handleEvent(e, replay);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      me.render();\n    }\n\n    return me;\n  }\n\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n\n    me._lastEvent = null;\n\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const me = this;\n    const {\n      options,\n      circumference\n    } = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    let radiusOffset = 0;\n\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n\n      me._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n\n    const segmentMethod = _getSegmentMethod(me);\n\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref2 => {\n    let {\n      start,\n      end\n    } = _ref2;\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  }\n\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    const me = this;\n\n    if (!me.options.display) {\n      return;\n    }\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    const me = this;\n\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n\n      me._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = me.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n\n      me._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    me._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(_ref3 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref3;\n\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = me._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = me._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      me._active = active;\n\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    const me = this;\n    super.configure();\n\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return me.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref4) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref4;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = 1;\n\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = me._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n\n    me.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const me = this;\n    const opts = me.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n\n    return (value - me.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = me.min;\n    const max = me.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n    const size = me._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n\n    return me._cache.data = me.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = me.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const me = this;\n\n    const timestamps = me._getTimestampsForTable();\n\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","_isDomSupported","J","log10","K","_factorize","L","finiteOrDefault","M","callback","N","_addGrace","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","clipArea","V","renderText","W","unclipArea","X","toFont","Y","_toLeftRightCenter","Z","_alignStartEnd","$","overrides","a0","merge","a1","_capitalize","a2","descriptors","a3","isFunction","a4","_attachContext","a5","_createResolver","a6","_descriptors","a7","mergeIf","a8","uid","a9","debounce","aa","retinaScale","ab","clearCanvas","ac","setsEqual","ad","_elementsEqual","ae","getAngleFromPoint","af","_readValueToProps","ag","_updateBezierControlPoints","ah","_computeSegments","ai","_boundSegments","aj","_steppedInterpolation","ak","_bezierInterpolation","al","_pointInLine","am","_steppedLineTo","an","_bezierCurveTo","ao","drawPoint","ap","addRoundedRectPath","aq","toTRBL","ar","toTRBLCorners","as","_boundSegment","at","_normalizeAngle","au","getRtlAdapter","av","overrideTextDirection","aw","_textX","ax","restoreTextDirection","ay","noop","az","distanceBetweenPoints","aA","_setMinAndMaxByKey","aB","niceNum","aC","almostWhole","aD","almostEquals","aE","_decimalPlaces","aF","_longestText","aG","_filterBetween","aH","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","hidden","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","inflateAmount","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/Wadf/Desktop/React Tutorial/CryptoOracle/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}