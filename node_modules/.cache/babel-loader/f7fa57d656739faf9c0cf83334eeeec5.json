{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { OracleContextState } from '../OracleContext';\nimport { HistoricalChart } from '../config/api';\nimport { CircularProgress, createTheme, makeStyles, ThemeProvider } from '@material-ui/core';\nimport { Line } from \"react-chartjs-2\";\n\nconst CryptoInfo = _ref => {\n  _s();\n\n  let {\n    crypto\n  } = _ref;\n  const [chartData, setChartData] = useState();\n  const [days, setDays] = useState(1);\n  const {\n    currency\n  } = OracleContextState();\n\n  const fetchChartData = async crypto => {\n    const {\n      data\n    } = await axios.get(HistoricalChart(id));\n    setChartData(data.prices);\n  };\n\n  console.log(chartData);\n  useEffect(() => {\n    fetchChartData(); // eslint-disable-next-line\n  }, [currency, days]); // const darkTheme = createTheme({\n  //     palette: {\n  //         primary: {\n  //             main: \"#fff\",\n  //         },\n  //         type: \"dark\",\n  //     },\n  // });\n  // const useStyles = makeStyles((theme) => ({\n  //     container: {\n  //         width: \"70%\",\n  //         display: \"flex\",\n  //         flexDirection: \"column\",\n  //         alignItems: \"center\",\n  //         justifyContent: \"center\",\n  //         marginTop: 25,\n  //         padding: 40,\n  //         [theme.breakpoints.down(\"md\")]: {\n  //             width: \"100%\",\n  //             marginTop: 0,\n  //             padding: 20,\n  //             paddingTop: 0,\n  //         },\n  //     },\n  // }));\n  // const classes = useStyles();\n  // return (\n  //     <ThemeProvider theme={darkTheme}>\n  //         <div className={classes.container}>\n  //             {!chartData ? (\n  //                 <CircularProgress\n  //                     style={{ color: \"#04D4F0\" }}\n  //                     size={300}\n  //                     thickness={2}\n  //                 />\n  //             ) : (<>\n  //                 <div style={{ height: \"100%\", width: \"100%\" }}>\n  //                     <Line\n  //                         data={{\n  //                             labels: chartData.map((crypto) => {\n  //                                 let date = new Date(crypto[0]);\n  //                                 let time = date.getHours() > 12\n  //                                     ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n  //                                     : `${date.getHours()}:${date.getMinutes()} AM`;\n  //                                 return days === 1 ? time : date.toLocaleDateString();\n  //                             }),\n  //                             datasets: [{\n  //                                 data: chartData.map((crypto) => crypto[1]),\n  //                                 label: `Price (Past ${days} Days) in ${currency}`,\n  //                                 borderColor: \"#04D4F0\",\n  //                             }],\n  //                         }}\n  //                         options={{\n  //                             elements: {\n  //                                 point: {\n  //                                     radius: 1,\n  //                                 },\n  //                             },\n  //                         }}\n  //                     />\n  //                 </div>\n  //             </>\n  //             )}\n  //         </div>\n  //     </ThemeProvider >\n  // )\n};\n\n_s(CryptoInfo, \"7WZbQnYpvU005vAo96Hoztj0X48=\");\n\n_c = CryptoInfo;\nexport default CryptoInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoInfo\");","map":{"version":3,"names":["axios","React","useEffect","useState","OracleContextState","HistoricalChart","CircularProgress","createTheme","makeStyles","ThemeProvider","Line","CryptoInfo","crypto","chartData","setChartData","days","setDays","currency","fetchChartData","data","get","id","prices","console","log"],"sources":["C:/Users/Wadf/Desktop/React Tutorial/CryptoOracle/src/components/CryptoInfo.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { OracleContextState } from '../OracleContext';\r\nimport { HistoricalChart } from '../config/api';\r\nimport { CircularProgress, createTheme, makeStyles, ThemeProvider } from '@material-ui/core';\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst CryptoInfo = ({ crypto }) => {\r\n    const [chartData, setChartData] = useState();\r\n    const [days, setDays] = useState(1);\r\n    const { currency } = OracleContextState();\r\n\r\n    const fetchChartData = async (crypto) => {\r\n        const { data } = await axios.get(HistoricalChart(id));\r\n\r\n        setChartData(data.prices);\r\n    };\r\n\r\n    console.log(chartData);\r\n\r\n    useEffect(() => {\r\n        fetchChartData();\r\n        // eslint-disable-next-line\r\n    }, [currency, days]);\r\n\r\n    // const darkTheme = createTheme({\r\n    //     palette: {\r\n    //         primary: {\r\n    //             main: \"#fff\",\r\n    //         },\r\n    //         type: \"dark\",\r\n    //     },\r\n    // });\r\n\r\n    // const useStyles = makeStyles((theme) => ({\r\n    //     container: {\r\n    //         width: \"70%\",\r\n    //         display: \"flex\",\r\n    //         flexDirection: \"column\",\r\n    //         alignItems: \"center\",\r\n    //         justifyContent: \"center\",\r\n    //         marginTop: 25,\r\n    //         padding: 40,\r\n    //         [theme.breakpoints.down(\"md\")]: {\r\n    //             width: \"100%\",\r\n    //             marginTop: 0,\r\n    //             padding: 20,\r\n    //             paddingTop: 0,\r\n    //         },\r\n    //     },\r\n    // }));\r\n\r\n    // const classes = useStyles();\r\n\r\n    // return (\r\n    //     <ThemeProvider theme={darkTheme}>\r\n    //         <div className={classes.container}>\r\n    //             {!chartData ? (\r\n    //                 <CircularProgress\r\n    //                     style={{ color: \"#04D4F0\" }}\r\n    //                     size={300}\r\n    //                     thickness={2}\r\n    //                 />\r\n    //             ) : (<>\r\n\r\n    //                 <div style={{ height: \"100%\", width: \"100%\" }}>\r\n    //                     <Line\r\n    //                         data={{\r\n    //                             labels: chartData.map((crypto) => {\r\n    //                                 let date = new Date(crypto[0]);\r\n    //                                 let time = date.getHours() > 12\r\n    //                                     ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n    //                                     : `${date.getHours()}:${date.getMinutes()} AM`;\r\n    //                                 return days === 1 ? time : date.toLocaleDateString();\r\n    //                             }),\r\n    //                             datasets: [{\r\n    //                                 data: chartData.map((crypto) => crypto[1]),\r\n    //                                 label: `Price (Past ${days} Days) in ${currency}`,\r\n    //                                 borderColor: \"#04D4F0\",\r\n    //                             }],\r\n    //                         }}\r\n    //                         options={{\r\n    //                             elements: {\r\n    //                                 point: {\r\n    //                                     radius: 1,\r\n    //                                 },\r\n    //                             },\r\n    //                         }}\r\n    //                     />\r\n    //                 </div>\r\n    //             </>\r\n    //             )}\r\n    //         </div>\r\n    //     </ThemeProvider >\r\n    // )\r\n\r\n};\r\n\r\nexport default CryptoInfo;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,UAAxC,EAAoDC,aAApD,QAAyE,mBAAzE;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAIA,MAAMC,UAAU,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC/B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;EACA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM;IAAEc;EAAF,IAAeb,kBAAkB,EAAvC;;EAEA,MAAMc,cAAc,GAAG,MAAON,MAAP,IAAkB;IACrC,MAAM;MAAEO;IAAF,IAAW,MAAMnB,KAAK,CAACoB,GAAN,CAAUf,eAAe,CAACgB,EAAD,CAAzB,CAAvB;IAEAP,YAAY,CAACK,IAAI,CAACG,MAAN,CAAZ;EACH,CAJD;;EAMAC,OAAO,CAACC,GAAR,CAAYX,SAAZ;EAEAX,SAAS,CAAC,MAAM;IACZgB,cAAc,GADF,CAEZ;EACH,CAHQ,EAGN,CAACD,QAAD,EAAWF,IAAX,CAHM,CAAT,CAb+B,CAkB/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEH,CAzFD;;GAAMJ,U;;KAAAA,U;AA2FN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}