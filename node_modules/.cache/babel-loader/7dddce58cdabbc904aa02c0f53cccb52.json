{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wadf\\\\Desktop\\\\React Tutorial\\\\mycryptoapp\\\\src\\\\components\\\\Cryptotable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { CoinList } from '../config/api';\nimport { OracleContextState } from '../OracleContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cryptotable = () => {\n  _s();\n\n  const [crypto, setCrypto] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    currency\n  } = OracleContextState(); // const classes = useStyles();\n\n  const fetchCryptos = async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(CoinList(currency));\n    setCrypto(data);\n    setLoading(false);\n  };\n\n  console.log(crypto);\n  useEffect(() => {\n    fetchCryptos(); // eslint-disable-next-line\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cryptotable\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cryptotable, \"SU7Rmq2wsTLsZkutjpUsvpwC8YA=\");\n\n_c = Cryptotable;\nexport default Cryptotable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptotable\");","map":{"version":3,"names":["React","useEffect","useState","axios","CoinList","OracleContextState","Cryptotable","crypto","setCrypto","loading","setLoading","currency","fetchCryptos","data","get","console","log"],"sources":["C:/Users/Wadf/Desktop/React Tutorial/mycryptoapp/src/components/Cryptotable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { CoinList } from '../config/api';\r\nimport { OracleContextState } from '../OracleContext';\r\n\r\nconst Cryptotable = () => {\r\n    const [crypto, setCrypto] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { currency } = OracleContextState();\r\n\r\n    // const classes = useStyles();\r\n\r\n    const fetchCryptos = async () => {\r\n        setLoading(true);\r\n        const { data } = await axios.get(CoinList(currency))\r\n\r\n        setCrypto(data);\r\n        setLoading(false);\r\n    };\r\n\r\n    console.log(crypto);\r\n\r\n    useEffect(() => {\r\n        fetchCryptos();\r\n        // eslint-disable-next-line\r\n    }, [currency]);\r\n\r\n\r\n    return (\r\n        <div>Cryptotable</div>\r\n    )\r\n}\r\n\r\nexport default Cryptotable;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAM;IAAES;EAAF,IAAeN,kBAAkB,EAAvC,CAJsB,CAMtB;;EAEA,MAAMO,YAAY,GAAG,YAAY;IAC7BF,UAAU,CAAC,IAAD,CAAV;IACA,MAAM;MAAEG;IAAF,IAAW,MAAMV,KAAK,CAACW,GAAN,CAAUV,QAAQ,CAACO,QAAD,CAAlB,CAAvB;IAEAH,SAAS,CAACK,IAAD,CAAT;IACAH,UAAU,CAAC,KAAD,CAAV;EACH,CAND;;EAQAK,OAAO,CAACC,GAAR,CAAYT,MAAZ;EAEAN,SAAS,CAAC,MAAM;IACZW,YAAY,GADA,CAEZ;EACH,CAHQ,EAGN,CAACD,QAAD,CAHM,CAAT;EAMA,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CA3BD;;GAAML,W;;KAAAA,W;AA6BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}